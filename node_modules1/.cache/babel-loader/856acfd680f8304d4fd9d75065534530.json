{"ast":null,"code":"import \"antd/lib/menu/style\";\nimport _Menu from \"antd/lib/menu\";\nimport _defineProperty from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport \"antd/lib/input/style\";\nimport _Input from \"antd/lib/input\";\nvar _jsxFileName = \"D:\\\\company\\\\algo-manage\\\\src\\\\algo\\\\modules\\\\oper_manage\\\\pages\\\\blacklist\\\\index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport CurdComponent from \"@/components/CurdComponent\";\nimport IpType from \"./ipType\";\n\nvar columns = function columns(params) {\n  return [{\n    title: \"序号\",\n    dataIndex: \"id\",\n    key: \"id\"\n  }, {\n    title: \"IP地址\",\n    dataIndex: \"ip\",\n    key: \"ip\"\n  }];\n};\n\nvar getInsertFormFields = function getInsertFormFields() {\n  return [{\n    label: \"IP地址\",\n    id: \"ip\",\n    initialValue: \"\",\n    rules: [{\n      required: true,\n      message: \"参数不能为空\"\n    }, {\n      validator: checkLength(20),\n      trigger: [\"change\", \"blur\"]\n    }],\n    component: React.createElement(_Input, {\n      placeholder: \"\\u8BF7\\u8F93\\u5165IP\\u5730\\u5740\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    })\n  }];\n};\n\nvar getUpdateFormFields = function getUpdateFormFields() {\n  return [{\n    label: \"IP地址\",\n    id: \"ip\",\n    initialValue: \"\",\n    rules: [{\n      required: true,\n      message: \"参数不能为空\"\n    }, {\n      validator: checkLength(20),\n      trigger: [\"change\", \"blur\"]\n    }],\n    component: React.createElement(_Input, {\n      placeholder: \"\\u8BF7\\u8F93\\u5165IP\\u5730\\u5740\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    })\n  }];\n};\n\nvar getSearchFormFields = function getSearchFormFields() {\n  return [{\n    label: \"IP地址\",\n    id: \"ip\",\n    component: React.createElement(_Input, {\n      placeholder: \"\\u8BF7\\u8F93\\u5165IP\\u5730\\u5740\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    })\n  }];\n};\n\nvar uoeSetting =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(uoeSetting, _React$PureComponent);\n\n  function uoeSetting() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, uoeSetting);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(uoeSetting)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      searchLoading: false,\n      selectRow: [],\n      info: [],\n      pagination: {\n        total: 0\n      },\n      currentTick: \"1\"\n    };\n\n    _this.handleInsertRecord = function (fromData) {\n      console.log(\"新增接口\", fromData);\n      var params = {\n        ip: fromData.ip\n      };\n      http.post({\n        url: \"/stockHolder/addStockHolderInfo\",\n        data: params\n      }).then(function (res) {\n        var msg = res.message;\n\n        if (res.code == 0) {\n          message.success(msg);\n\n          _this.getData();\n        } else if (res.code == 20000) {\n          message.error(msg.substring(msg.indexOf(\"[\") + 1, msg.lastIndexOf(\"]\")));\n        } else {\n          message.error(msg);\n        }\n\n        _this.isAction = true;\n      });\n    };\n\n    _this.handleUpdateRecord = function (_ref) {\n      var form = _ref.form;\n      console.log(form.getFieldsValue()); // return;\n\n      var fromData = form.getFieldsValue();\n      var params = {\n        Id: _this.record.id,\n        ip: fromData.ip\n      }; // 发送更新请求\n\n      http.post({\n        url: \"/stockHolder/updateStockHolderInfo\",\n        data: params\n      }).then(function (res) {\n        var msg = res.message;\n\n        if (res.code == 0) {\n          message.success(msg);\n\n          _this.getData();\n        } else if (res.code == 20000) {\n          message.error(msg.substring(msg.indexOf(\"[\") + 1, msg.lastIndexOf(\"]\")));\n        } else {\n          message.error(msg);\n        }\n\n        _this.isAction = true;\n      });\n    };\n\n    _this.handleDeleteRecord = function (record) {\n      console.log(\"删除记录 \", record);\n      var params = {\n        id: record.id\n      }; // 发送更新请求\n\n      http.post({\n        url: \"/blacklist/deleteBlacklist\",\n        data: params\n      }).then(function (res) {\n        var msg = res.message;\n\n        if (res.code == 0) {\n          message.success(msg);\n\n          _this.getData();\n        } else if (res.code == 20000) {\n          message.error(msg.substring(msg.indexOf(\"[\") + 1, msg.lastIndexOf(\"]\")));\n        } else {\n          message.error(msg);\n        }\n\n        _this.isAction = true;\n      });\n    };\n\n    _this.setUpdateModal = function (_ref2) {\n      var form = _ref2.form,\n          record = _ref2.record;\n      // console.log(record, form);\n      _this.record = record;\n      form.setFieldsValue({\n        ip: record.ip\n      });\n    };\n\n    _this.getData = function () {\n      var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var pagination = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n        current: 1,\n        pageSize: 13\n      };\n      params = _objectSpread({}, params, {\n        pageId: pagination.current,\n        pageNum: pagination.pageSize\n      });\n      http.post({\n        url: \"/blacklist/queryBlacklist\",\n        data: params\n      }).then(function (res) {\n        console.log(res); //解析数据字典\n\n        if (res.data.records && res.data.records.length > 0) {\n          //parseDict(res.data.records);\n          parseDictValue(res.data.records);\n        } else {\n          message.info(\"查询结果为空\");\n        }\n\n        var pgn = {\n          current: res.data.current,\n          pageSize: pagination.pageSize,\n          total: res.data.total || 0\n        };\n\n        _this.setState({\n          info: res.data.records,\n          pagination: pgn\n        });\n      });\n    };\n\n    _this.handleSearch = function (params, pagination) {\n      _this.getData(params, pagination);\n    };\n\n    _this.handleClick = function (e) {\n      console.log(e, \"ddd\");\n\n      _this.setState({\n        currentTick: e.key\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(uoeSetting, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getData();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      // let scroll = { x: 1000, y: 445 };\n      // let info = this.state.info;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, React.createElement(_Menu, {\n        onClick: this.handleClick,\n        selectedKeys: [this.state.current],\n        mode: \"horizontal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, React.createElement(_Menu.Item, {\n        key: \"1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, \"mac\\u5730\\u5740\"), React.createElement(_Menu.Item, {\n        key: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, \"IP\\u5730\\u5740\")), this.state.currentTick == \"1\" ? React.createElement(IpType, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        },\n        __self: this\n      }) : \"\");\n    }\n  }]);\n\n  return uoeSetting;\n}(React.PureComponent);\n\nexport { uoeSetting as default };","map":{"version":3,"sources":["D:/company/algo-manage/src/algo/modules/oper_manage/pages/blacklist/index.js"],"names":["React","CurdComponent","IpType","columns","params","title","dataIndex","key","getInsertFormFields","label","id","initialValue","rules","required","message","validator","checkLength","trigger","component","getUpdateFormFields","getSearchFormFields","uoeSetting","state","searchLoading","selectRow","info","pagination","total","currentTick","handleInsertRecord","fromData","console","log","ip","http","post","url","data","then","res","msg","code","success","getData","error","substring","indexOf","lastIndexOf","isAction","handleUpdateRecord","form","getFieldsValue","Id","record","handleDeleteRecord","setUpdateModal","setFieldsValue","current","pageSize","pageId","pageNum","records","length","parseDictValue","pgn","setState","handleSearch","handleClick","e","PureComponent"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport CurdComponent from \"@/components/CurdComponent\";\r\nimport { Input, Menu } from \"antd\";\r\nimport IpType from \"./ipType\";\r\n\r\nconst columns = (params) => {\r\n    return [\r\n        {\r\n            title: \"序号\",\r\n            dataIndex: \"id\",\r\n            key: \"id\",\r\n        },\r\n        {\r\n            title: \"IP地址\",\r\n            dataIndex: \"ip\",\r\n            key: \"ip\",\r\n        },\r\n    ];\r\n};\r\nconst getInsertFormFields = () => {\r\n    return [\r\n        {\r\n            label: \"IP地址\",\r\n            id: \"ip\",\r\n            initialValue: \"\",\r\n            rules: [\r\n                {\r\n                    required: true,\r\n                    message: \"参数不能为空\",\r\n                },\r\n                {\r\n                    validator: checkLength(20),\r\n                    trigger: [\"change\", \"blur\"],\r\n                },\r\n            ],\r\n            component: <Input placeholder=\"请输入IP地址\" />,\r\n        },\r\n    ];\r\n};\r\nconst getUpdateFormFields = () => {\r\n    return [\r\n        {\r\n            label: \"IP地址\",\r\n            id: \"ip\",\r\n            initialValue: \"\",\r\n            rules: [\r\n                {\r\n                    required: true,\r\n                    message: \"参数不能为空\",\r\n                },\r\n                {\r\n                    validator: checkLength(20),\r\n                    trigger: [\"change\", \"blur\"],\r\n                },\r\n            ],\r\n            component: <Input placeholder=\"请输入IP地址\" />,\r\n        },\r\n    ];\r\n};\r\nlet getSearchFormFields = () => {\r\n    return [\r\n        {\r\n            label: \"IP地址\",\r\n            id: \"ip\",\r\n            component: <Input placeholder=\"请输入IP地址\" />,\r\n        },\r\n    ];\r\n};\r\nexport default class uoeSetting extends React.PureComponent {\r\n    state = {\r\n        searchLoading: false,\r\n        selectRow: [],\r\n        info: [],\r\n        pagination: { total: 0 },\r\n        currentTick: \"1\",\r\n    };\r\n\r\n    //新增接口\r\n    handleInsertRecord = (fromData) => {\r\n        console.log(\"新增接口\", fromData);\r\n        let params = {\r\n            ip: fromData.ip,\r\n        };\r\n        http.post({\r\n            url: \"/stockHolder/addStockHolderInfo\",\r\n            data: params,\r\n        }).then((res) => {\r\n            let msg = res.message;\r\n            if (res.code == 0) {\r\n                message.success(msg);\r\n                this.getData();\r\n            } else if (res.code == 20000) {\r\n                message.error(\r\n                    msg.substring(msg.indexOf(\"[\") + 1, msg.lastIndexOf(\"]\"))\r\n                );\r\n            } else {\r\n                message.error(msg);\r\n            }\r\n            this.isAction = true;\r\n        });\r\n    };\r\n    //更新记录\r\n    handleUpdateRecord = ({ form }) => {\r\n        console.log(form.getFieldsValue());\r\n        // return;\r\n        let fromData = form.getFieldsValue();\r\n        let params = {\r\n            Id: this.record.id,\r\n            ip: fromData.ip,\r\n        };\r\n        // 发送更新请求\r\n        http.post({\r\n            url: \"/stockHolder/updateStockHolderInfo\",\r\n            data: params,\r\n        }).then((res) => {\r\n            let msg = res.message;\r\n            if (res.code == 0) {\r\n                message.success(msg);\r\n                this.getData();\r\n            } else if (res.code == 20000) {\r\n                message.error(\r\n                    msg.substring(msg.indexOf(\"[\") + 1, msg.lastIndexOf(\"]\"))\r\n                );\r\n            } else {\r\n                message.error(msg);\r\n            }\r\n            this.isAction = true;\r\n        });\r\n    };\r\n    //删除记录\r\n    handleDeleteRecord = (record) => {\r\n        console.log(\"删除记录 \", record);\r\n        let params = {\r\n            id: record.id,\r\n        };\r\n        // 发送更新请求\r\n        http.post({\r\n            url: \"/blacklist/deleteBlacklist\",\r\n            data: params,\r\n        }).then((res) => {\r\n            let msg = res.message;\r\n            if (res.code == 0) {\r\n                message.success(msg);\r\n                this.getData();\r\n            } else if (res.code == 20000) {\r\n                message.error(\r\n                    msg.substring(msg.indexOf(\"[\") + 1, msg.lastIndexOf(\"]\"))\r\n                );\r\n            } else {\r\n                message.error(msg);\r\n            }\r\n            this.isAction = true;\r\n        });\r\n    };\r\n    //填入更新数据\r\n    setUpdateModal = ({ form, record }) => {\r\n        // console.log(record, form);\r\n        this.record = record;\r\n        form.setFieldsValue({\r\n            ip: record.ip,\r\n        });\r\n    };\r\n    getData = (params = {}, pagination = { current: 1, pageSize: 13 }) => {\r\n        params = {\r\n            ...params,\r\n            pageId: pagination.current,\r\n            pageNum: pagination.pageSize,\r\n        };\r\n        http.post({\r\n            url: \"/blacklist/queryBlacklist\",\r\n            data: params,\r\n        }).then((res) => {\r\n            console.log(res);\r\n            //解析数据字典\r\n            if (res.data.records && res.data.records.length > 0) {\r\n                //parseDict(res.data.records);\r\n                parseDictValue(res.data.records);\r\n            } else {\r\n                message.info(\"查询结果为空\");\r\n            }\r\n            let pgn = {\r\n                current: res.data.current,\r\n                pageSize: pagination.pageSize,\r\n                total: res.data.total || 0,\r\n            };\r\n            this.setState({\r\n                info: res.data.records,\r\n                pagination: pgn,\r\n            });\r\n        });\r\n    };\r\n    handleSearch = (params, pagination) => {\r\n        this.getData(params, pagination);\r\n    };\r\n    componentDidMount() {\r\n        this.getData();\r\n    }\r\n    handleClick = (e) => {\r\n        console.log(e, \"ddd\");\r\n        this.setState({\r\n            currentTick: e.key,\r\n        });\r\n    };\r\n    render() {\r\n        // let scroll = { x: 1000, y: 445 };\r\n        // let info = this.state.info;\r\n        return (\r\n            <div>\r\n                <Menu\r\n                    onClick={this.handleClick}\r\n                    selectedKeys={[this.state.current]}\r\n                    mode=\"horizontal\"\r\n                >\r\n                    <Menu.Item key=\"1\">mac地址</Menu.Item>\r\n                    <Menu.Item key=\"2\">IP地址</Menu.Item>\r\n                </Menu>\r\n                {/* <CurdComponent\r\n                    // rowKey={\"index\"}\r\n                    // isShowSearchForm={false}\r\n                    // btnText2=\"查全部\"\r\n                    onSearchClick={this.handleSearch}\r\n                    getSearchFormFields={getSearchFormFields}\r\n                    // searchLoading={this.state.searchLoading}\r\n                    insertBtnText={\"新增\"} // 不传 就没新增按钮\r\n                    getInsertFormFields={getInsertFormFields}\r\n                    insertRecord={this.handleInsertRecord}\r\n                    // col=\"2\"\r\n                    width=\"789px\"\r\n                    pagination={this.state.pagination}\r\n                    getUpdateFormFields={getUpdateFormFields}\r\n                    setUpdateModal={this.setUpdateModal}\r\n                    updateRecord={this.handleUpdateRecord} // 不传 就没编辑\r\n                    deleteRecord={this.handleDeleteRecord} // 不传 就没删除\r\n                    centered={true}\r\n                    columns={columns}\r\n                    dataSource={info}\r\n                    scroll={scroll}\r\n                    // rowSelection={rowSelection} //批量选择 操作\r\n                >\r\n                    <div\r\n                        urlPrefix=\"/stockHolder\"\r\n                        title=\"地址\"\r\n                        sucCallback={this.getData}\r\n                        noUpload={true}\r\n                    ></div>\r\n                </CurdComponent> */}\r\n                {this.state.currentTick == \"1\" ? <IpType></IpType> : \"\"}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}