{"ast":null,"code":"import _defineProperty from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport \"antd/lib/input/style\";\nimport _Input from \"antd/lib/input\";\nvar _jsxFileName = \"D:\\\\company\\\\algo-manage\\\\src\\\\algo\\\\modules\\\\user\\\\pages\\\\stockHolder\\\\index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport CurdComponent from \"@/components/CurdComponent\";\nimport SelectOption from \"@/components/SelectOption\"; // import UploadWrap from \"@/components/UploadWrap\";\n\n// const getUpdateFormFields = () => {\n//     return []\n// };\nvar columns = function columns(params) {\n  return [{\n    title: \"用户ID\",\n    dataIndex: \"uuserId\",\n    key: \"uuserId\"\n  }, {\n    title: \"股东账户\",\n    dataIndex: \"accountId\",\n    key: \"accountId\"\n  }, {\n    title: \"市场代码\",\n    dataIndex: \"marketValue\"\n  }, {\n    title: \"账户类型\",\n    dataIndex: \"accountTypeValue\"\n  }, {\n    title: \"创建时间\",\n    dataIndex: \"createTime\",\n    key: \"createTime\"\n  }];\n};\n\nvar getInsertFormFields = function getInsertFormFields() {\n  return [{\n    label: \"用户ID\",\n    id: \"uuserId\",\n    initialValue: \"\",\n    rules: [{\n      required: true,\n      message: \"参数不能为空\"\n    }],\n    component: React.createElement(_Input, {\n      placeholder: \"\\u8BF7\\u8F93\\u5165\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    })\n  }, {\n    label: \"股东账户\",\n    id: \"accountId\",\n    initialValue: \"\",\n    rules: [{\n      required: true,\n      message: \"参数不能为空\"\n    }],\n    component: // <Input placeholder=\"请输入\" readOnly disabled />\n    React.createElement(_Input, {\n      placeholder: \"\\u8BF7\\u8F93\\u5165\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    })\n  }, {\n    label: \"市场代码\",\n    id: \"market\",\n    initialValue: \"1\",\n    rules: [{\n      required: true,\n      message: \"参数不能为空\"\n    }],\n    component: SelectOption(dict.market, {\n      placeholder: \"请选择\",\n      allowClear: false,\n      style: {\n        width: 183\n      }\n    })\n  }, {\n    label: \"账户类型\",\n    id: \"accountType\",\n    initialValue: \"1\",\n    rules: [{\n      required: true,\n      message: \"参数不能为空\"\n    }],\n    component: SelectOption(dict.accountType, {\n      placeholder: \"请选择\",\n      allowClear: false,\n      style: {\n        width: 183\n      }\n    })\n  }];\n};\n\nvar getUpdateFormFields = function getUpdateFormFields() {\n  return [{\n    label: \"用户ID\",\n    id: \"uuserId\",\n    initialValue: \"\",\n    rules: [{\n      required: true,\n      message: \"参数不能为空\"\n    }],\n    component: React.createElement(_Input, {\n      placeholder: \"\\u8BF7\\u8F93\\u5165\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    })\n  }, {\n    label: \"股东账户\",\n    id: \"accountId\",\n    initialValue: \"\",\n    rules: [{\n      required: true,\n      message: \"参数不能为空\"\n    }],\n    component: // <Input placeholder=\"请输入\" readOnly disabled />\n    React.createElement(_Input, {\n      placeholder: \"\\u8BF7\\u8F93\\u5165\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    })\n  }, {\n    label: \"市场代码\",\n    id: \"market\",\n    initialValue: \"\",\n    rules: [{\n      required: true,\n      message: \"参数不能为空\"\n    }],\n    // component: (\n    //     // <Input placeholder=\"请输入\" readOnly disabled />\n    //     <Input placeholder=\"请输入\" />\n    // ),\n    component: SelectOption(dict.market, {\n      placeholder: \"请选择\",\n      allowClear: false,\n      style: {\n        width: 183\n      }\n    })\n  }, {\n    label: \"账户类型\",\n    id: \"accountType\",\n    initialValue: \"\",\n    rules: [{\n      required: true,\n      message: \"参数不能为空\"\n    }],\n    component: SelectOption(dict.accountType, {\n      placeholder: \"请选择\",\n      allowClear: false,\n      style: {\n        width: 183\n      }\n    })\n  } // {\n  //     label: \"网关\",\n  //     id: \"gateway\",\n  //     rules: [\n  //         {\n  //             required: true,\n  //             message: \"网关不能为空\",\n  //         },\n  //         {\n  //             message: \"请输入正确的IP地址\",\n  //             pattern:\n  //                 /^((2(5[0-5]|[0-4]\\d))|[0-1]?\\d{1,2})(\\.((2(5[0-5]|[0-4]\\d))|[0-1]?\\d{1,2})){3}$/,\n  //         },\n  //     ],\n  //     component: <Input placeholder=\"请输入网关\" />,\n  // },\n  // {\n  //     label: \"Mac地址\",\n  //     id: \"mac\",\n  //     initialValue: \"\",\n  //     rules: [\n  //         {\n  //             required: true,\n  //             message: \"Mac地址不能为空\",\n  //         },\n  //         {\n  //             message: \"请输入正确的mac地址,例如：1A-6F-38-C8-A4-07\",\n  //             pattern: /^([a-f0-9]{2}-){5}[a-f0-9]{2}$/i,\n  //         },\n  //     ],\n  //     component: <Input placeholder=\"请输入Mac地址\" />,\n  // },\n  // {\n  //     label: \"子网掩码\",\n  //     id: \"mask\",\n  //     initialValue: \"\",\n  //     rules: [\n  //         {\n  //             required: true,\n  //             message: \"子网掩码不能为空\",\n  //         },\n  //         {\n  //             message: \"请输入正确的IP地址\",\n  //             pattern:\n  //                 /^((2(5[0-5]|[0-4]\\d))|[0-1]?\\d{1,2})(\\.((2(5[0-5]|[0-4]\\d))|[0-1]?\\d{1,2})){3}$/,\n  //         },\n  //     ],\n  //     component: <Input placeholder=\"请输入子网掩码\" />,\n  // },\n  ];\n};\n\nvar getSearchFormFields = function getSearchFormFields() {\n  return [{\n    label: \"用户ID\",\n    id: \"uuserId\",\n    component: React.createElement(_Input, {\n      placeholder: \"\\u8BF7\\u8F93\\u5165\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    })\n  }, {\n    label: \"股东账户\",\n    id: \"accountId\",\n    component: React.createElement(_Input, {\n      placeholder: \"\\u8BF7\\u8F93\\u5165\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    })\n  } // {\n  //     label: \"合约简称\",\n  //     id: \"contractName\",\n  //     component: <Input placeholder=\"请输入合约简称\" />,\n  // },\n  // {\n  //     label: \"合约账户标识\",\n  //     id: \"contractAccountCode\",\n  //     component: <Input placeholder=\"请输入合约账户标识\" />,\n  // },\n  ];\n};\n\nvar uoeSetting =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(uoeSetting, _React$PureComponent);\n\n  function uoeSetting() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, uoeSetting);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(uoeSetting)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      searchLoading: false,\n      selectRow: [],\n      info: [],\n      pagination: {\n        total: 0\n      }\n    };\n\n    _this.handleTableChange = function (selectedRowKeys) {\n      console.log(\"批量选择\");\n\n      _this.setState({\n        selectRow: selectedRowKeys\n      });\n    };\n\n    _this.handleInsertRecord = function (fromData) {\n      console.log(\"新增接口\", fromData);\n      var params = {\n        UuserId: fromData.uuserId / 1,\n        AccountId: fromData.accountId,\n        Market: fromData.market / 1,\n        AccountType: fromData.accountType / 1\n      };\n      http.post({\n        url: \"/stockHolder/addStockHolderInfo\",\n        data: params\n      }).then(function (res) {\n        var msg = res.message;\n\n        if (res.code == 0) {\n          message.success(msg);\n\n          _this.getData();\n        } else if (res.code == 20000) {\n          message.error(msg.substring(msg.indexOf(\"[\") + 1, msg.indexOf(\"HTTP\")));\n        } else {\n          message.error(msg);\n        }\n\n        _this.isAction = true;\n      });\n    };\n\n    _this.handleUpdateRecord = function (_ref) {\n      var form = _ref.form;\n      console.log(form.getFieldsValue()); // return;\n\n      var fromData = form.getFieldsValue();\n      var params = {\n        Id: _this.record.id,\n        UuserId: fromData.uuserId / 1,\n        AccountId: fromData.accountId,\n        Market: fromData.market / 1,\n        AccountType: fromData.accountType / 1\n      }; // 发送更新请求\n\n      http.post({\n        url: \"/stockHolder/updateStockHolderInfo\",\n        data: params\n      }).then(function (res) {\n        var msg = res.message;\n\n        if (res.code == 0) {\n          message.success(msg);\n\n          _this.getData();\n        } else if (res.code == 20000) {\n          message.error(msg.substring(msg.indexOf(\"[\") + 1, msg.indexOf(\"HTTP\")));\n        } else {\n          message.error(msg);\n        }\n\n        _this.isAction = true;\n      });\n    };\n\n    _this.handleDeleteRecord = function (record) {\n      console.log(\"删除记录 \", record);\n    };\n\n    _this.setUpdateModal = function (_ref2) {\n      var form = _ref2.form,\n          record = _ref2.record;\n      // console.log(record, form);\n      _this.record = record;\n      form.setFieldsValue({\n        uuserId: record.uuserId,\n        market: record.market + \"\",\n        accountType: record.accountType + \"\",\n        accountId: record.accountId\n      });\n    };\n\n    _this.getData = function () {\n      var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var pagination = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n        current: 1,\n        pageSize: 11\n      };\n      params = _objectSpread({}, params, {\n        pageId: pagination.current,\n        pageNum: pagination.pageSize\n      });\n      http.post({\n        // url: \"/option/assetInfo/selectList\",\n        url: \"/stockHolder/list\",\n        data: params\n      }).then(function (res) {\n        console.log(res); //解析数据字典\n\n        if (res.data.records && res.data.records.length > 0) {\n          //parseDict(res.data.records);\n          parseDictValue(res.data.records);\n        } else {\n          message.info(\"查询结果为空\");\n        }\n\n        var pgn = {\n          current: pagination.current,\n          pageSize: pagination.pageSize,\n          total: res.data.total || 0\n        };\n\n        _this.setState({\n          info: res.data.records,\n          pagination: pgn\n        });\n      });\n    };\n\n    _this.handleSearch = function (params, pagination) {\n      _this.getData(params, pagination);\n    };\n\n    return _this;\n  }\n\n  _createClass(uoeSetting, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getData();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var scroll = {\n        x: 1000,\n        y: 445\n      };\n      var info = this.state.info; //批量\n      // let { selectRow } = this.state;\n      // const rowSelection = {\n      //     selectRow,\n      //     onChange: this.handleTableChange,\n      // };\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 382\n        },\n        __self: this\n      }, React.createElement(CurdComponent // rowKey={\"index\"}\n      // isShowSearchForm={false}\n      // btnText2=\"查全部\"\n      , {\n        onSearchClick: this.handleSearch,\n        getSearchFormFields: getSearchFormFields // searchLoading={this.state.searchLoading}\n        ,\n        insertBtnText: \"新增\" // 不传 就没新增按钮\n        ,\n        getInsertFormFields: getInsertFormFields,\n        insertRecord: this.handleInsertRecord // col=\"2\"\n        ,\n        width: \"600px\",\n        pagination: this.state.pagination,\n        getUpdateFormFields: getUpdateFormFields,\n        setUpdateModal: this.setUpdateModal,\n        updateRecord: this.handleUpdateRecord // 不传 就没编辑\n        // deleteRecord={this.handleDeleteRecord} // 不传 就没删除\n        ,\n        centered: true,\n        columns: columns,\n        dataSource: info,\n        scroll: scroll // rowSelection={rowSelection} //批量选择 操作\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 383\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        urlPrefix: \"/stockHolder\",\n        title: \"\\u80A1\\u4E1C\\u4FE1\\u606F\",\n        sucCallback: this.getData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 406\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return uoeSetting;\n}(React.PureComponent);\n\nexport { uoeSetting as default };","map":{"version":3,"sources":["D:/company/algo-manage/src/algo/modules/user/pages/stockHolder/index.js"],"names":["React","CurdComponent","SelectOption","columns","params","title","dataIndex","key","getInsertFormFields","label","id","initialValue","rules","required","message","component","dict","market","placeholder","allowClear","style","width","accountType","getUpdateFormFields","getSearchFormFields","uoeSetting","state","searchLoading","selectRow","info","pagination","total","handleTableChange","selectedRowKeys","console","log","setState","handleInsertRecord","fromData","UuserId","uuserId","AccountId","accountId","Market","AccountType","http","post","url","data","then","res","msg","code","success","getData","error","substring","indexOf","isAction","handleUpdateRecord","form","getFieldsValue","Id","record","handleDeleteRecord","setUpdateModal","setFieldsValue","current","pageSize","pageId","pageNum","records","length","parseDictValue","pgn","handleSearch","scroll","x","y","PureComponent"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport CurdComponent from \"@/components/CurdComponent\";\r\nimport SelectOption from \"@/components/SelectOption\";\r\n// import UploadWrap from \"@/components/UploadWrap\";\r\nimport { Input } from \"antd\";\r\n\r\n// const getUpdateFormFields = () => {\r\n//     return []\r\n// };\r\n\r\nconst columns = (params) => {\r\n    return [\r\n        {\r\n            title: \"用户ID\",\r\n            dataIndex: \"uuserId\",\r\n            key: \"uuserId\",\r\n        },\r\n        {\r\n            title: \"股东账户\",\r\n            dataIndex: \"accountId\",\r\n            key: \"accountId\",\r\n        },\r\n        {\r\n            title: \"市场代码\",\r\n            dataIndex: \"marketValue\",\r\n        },\r\n        {\r\n            title: \"账户类型\",\r\n            dataIndex: \"accountTypeValue\",\r\n        },\r\n        {\r\n            title: \"创建时间\",\r\n            dataIndex: \"createTime\",\r\n            key: \"createTime\",\r\n        },\r\n    ];\r\n};\r\nconst getInsertFormFields = () => {\r\n    return [\r\n        {\r\n            label: \"用户ID\",\r\n            id: \"uuserId\",\r\n            initialValue: \"\",\r\n            rules: [\r\n                {\r\n                    required: true,\r\n                    message: \"参数不能为空\",\r\n                },\r\n            ],\r\n            component: <Input placeholder=\"请输入\" />,\r\n        },\r\n        {\r\n            label: \"股东账户\",\r\n            id: \"accountId\",\r\n            initialValue: \"\",\r\n            rules: [\r\n                {\r\n                    required: true,\r\n                    message: \"参数不能为空\",\r\n                },\r\n            ],\r\n            component: (\r\n                // <Input placeholder=\"请输入\" readOnly disabled />\r\n                <Input placeholder=\"请输入\" />\r\n            ),\r\n        },\r\n        {\r\n            label: \"市场代码\",\r\n            id: \"market\",\r\n            initialValue: \"1\",\r\n            rules: [\r\n                {\r\n                    required: true,\r\n                    message: \"参数不能为空\",\r\n                },\r\n            ],\r\n            component: SelectOption(dict.market, {\r\n                placeholder: \"请选择\",\r\n                allowClear: false,\r\n                style: {\r\n                    width: 183,\r\n                },\r\n            }),\r\n        },\r\n        {\r\n            label: \"账户类型\",\r\n            id: \"accountType\",\r\n            initialValue: \"1\",\r\n            rules: [\r\n                {\r\n                    required: true,\r\n                    message: \"参数不能为空\",\r\n                },\r\n            ],\r\n            component: SelectOption(dict.accountType, {\r\n                placeholder: \"请选择\",\r\n                allowClear: false,\r\n                style: {\r\n                    width: 183,\r\n                },\r\n            }),\r\n        },\r\n    ];\r\n};\r\nconst getUpdateFormFields = () => {\r\n    return [\r\n        {\r\n            label: \"用户ID\",\r\n            id: \"uuserId\",\r\n            initialValue: \"\",\r\n            rules: [\r\n                {\r\n                    required: true,\r\n                    message: \"参数不能为空\",\r\n                },\r\n            ],\r\n            component: <Input placeholder=\"请输入\" />,\r\n        },\r\n        {\r\n            label: \"股东账户\",\r\n            id: \"accountId\",\r\n            initialValue: \"\",\r\n            rules: [\r\n                {\r\n                    required: true,\r\n                    message: \"参数不能为空\",\r\n                },\r\n            ],\r\n            component: (\r\n                // <Input placeholder=\"请输入\" readOnly disabled />\r\n                <Input placeholder=\"请输入\" />\r\n            ),\r\n        },\r\n        {\r\n            label: \"市场代码\",\r\n            id: \"market\",\r\n            initialValue: \"\",\r\n            rules: [\r\n                {\r\n                    required: true,\r\n                    message: \"参数不能为空\",\r\n                },\r\n            ],\r\n            // component: (\r\n            //     // <Input placeholder=\"请输入\" readOnly disabled />\r\n            //     <Input placeholder=\"请输入\" />\r\n            // ),\r\n            component: SelectOption(dict.market, {\r\n                placeholder: \"请选择\",\r\n                allowClear: false,\r\n                style: {\r\n                    width: 183,\r\n                },\r\n            }),\r\n        },\r\n        {\r\n            label: \"账户类型\",\r\n            id: \"accountType\",\r\n            initialValue: \"\",\r\n            rules: [\r\n                {\r\n                    required: true,\r\n                    message: \"参数不能为空\",\r\n                },\r\n            ],\r\n            component: SelectOption(dict.accountType, {\r\n                placeholder: \"请选择\",\r\n                allowClear: false,\r\n                style: {\r\n                    width: 183,\r\n                },\r\n            }),\r\n        },\r\n        // {\r\n        //     label: \"网关\",\r\n        //     id: \"gateway\",\r\n        //     rules: [\r\n        //         {\r\n        //             required: true,\r\n        //             message: \"网关不能为空\",\r\n        //         },\r\n        //         {\r\n        //             message: \"请输入正确的IP地址\",\r\n        //             pattern:\r\n        //                 /^((2(5[0-5]|[0-4]\\d))|[0-1]?\\d{1,2})(\\.((2(5[0-5]|[0-4]\\d))|[0-1]?\\d{1,2})){3}$/,\r\n        //         },\r\n        //     ],\r\n        //     component: <Input placeholder=\"请输入网关\" />,\r\n        // },\r\n        // {\r\n        //     label: \"Mac地址\",\r\n        //     id: \"mac\",\r\n        //     initialValue: \"\",\r\n        //     rules: [\r\n        //         {\r\n        //             required: true,\r\n        //             message: \"Mac地址不能为空\",\r\n        //         },\r\n        //         {\r\n        //             message: \"请输入正确的mac地址,例如：1A-6F-38-C8-A4-07\",\r\n        //             pattern: /^([a-f0-9]{2}-){5}[a-f0-9]{2}$/i,\r\n        //         },\r\n        //     ],\r\n        //     component: <Input placeholder=\"请输入Mac地址\" />,\r\n        // },\r\n        // {\r\n        //     label: \"子网掩码\",\r\n        //     id: \"mask\",\r\n        //     initialValue: \"\",\r\n        //     rules: [\r\n        //         {\r\n        //             required: true,\r\n        //             message: \"子网掩码不能为空\",\r\n        //         },\r\n        //         {\r\n        //             message: \"请输入正确的IP地址\",\r\n        //             pattern:\r\n        //                 /^((2(5[0-5]|[0-4]\\d))|[0-1]?\\d{1,2})(\\.((2(5[0-5]|[0-4]\\d))|[0-1]?\\d{1,2})){3}$/,\r\n        //         },\r\n        //     ],\r\n        //     component: <Input placeholder=\"请输入子网掩码\" />,\r\n        // },\r\n    ];\r\n};\r\nlet getSearchFormFields = () => {\r\n    return [\r\n        {\r\n            label: \"用户ID\",\r\n            id: \"uuserId\",\r\n            component: <Input placeholder=\"请输入\" />,\r\n        },\r\n        {\r\n            label: \"股东账户\",\r\n            id: \"accountId\",\r\n            component: <Input placeholder=\"请输入\" />,\r\n        },\r\n        // {\r\n        //     label: \"合约简称\",\r\n        //     id: \"contractName\",\r\n        //     component: <Input placeholder=\"请输入合约简称\" />,\r\n        // },\r\n        // {\r\n        //     label: \"合约账户标识\",\r\n        //     id: \"contractAccountCode\",\r\n        //     component: <Input placeholder=\"请输入合约账户标识\" />,\r\n        // },\r\n    ];\r\n};\r\nexport default class uoeSetting extends React.PureComponent {\r\n    state = {\r\n        searchLoading: false,\r\n        selectRow: [],\r\n        info: [],\r\n        pagination: { total: 0 },\r\n    };\r\n    //批量选择\r\n    handleTableChange = (selectedRowKeys) => {\r\n        console.log(\"批量选择\");\r\n        this.setState({\r\n            selectRow: selectedRowKeys,\r\n        });\r\n    };\r\n\r\n    handleInsertRecord = (fromData) => {\r\n        console.log(\"新增接口\", fromData);\r\n        let params = {\r\n            UuserId: fromData.uuserId / 1,\r\n            AccountId: fromData.accountId,\r\n            Market: fromData.market / 1,\r\n            AccountType: fromData.accountType / 1,\r\n        };\r\n        http.post({\r\n            url: \"/stockHolder/addStockHolderInfo\",\r\n            data: params,\r\n        }).then((res) => {\r\n            let msg = res.message;\r\n            if (res.code == 0) {\r\n                message.success(msg);\r\n                this.getData();\r\n            } else if (res.code == 20000) {\r\n                message.error(\r\n                    msg.substring(msg.indexOf(\"[\") + 1, msg.indexOf(\"HTTP\"))\r\n                );\r\n            } else {\r\n                message.error(msg);\r\n            }\r\n            this.isAction = true;\r\n        });\r\n    };\r\n    //更新记录\r\n    handleUpdateRecord = ({ form }) => {\r\n        console.log(form.getFieldsValue());\r\n        // return;\r\n        let fromData = form.getFieldsValue();\r\n        let params = {\r\n            Id: this.record.id,\r\n            UuserId: fromData.uuserId / 1,\r\n            AccountId: fromData.accountId,\r\n            Market: fromData.market / 1,\r\n            AccountType: fromData.accountType / 1,\r\n        };\r\n        // 发送更新请求\r\n        http.post({\r\n            url: \"/stockHolder/updateStockHolderInfo\",\r\n            data: params,\r\n        }).then((res) => {\r\n            let msg = res.message;\r\n            if (res.code == 0) {\r\n                message.success(msg);\r\n                this.getData();\r\n            } else if (res.code == 20000) {\r\n                message.error(\r\n                    msg.substring(msg.indexOf(\"[\") + 1, msg.indexOf(\"HTTP\"))\r\n                );\r\n            } else {\r\n                message.error(msg);\r\n            }\r\n            this.isAction = true;\r\n        });\r\n    };\r\n    //删除记录\r\n    handleDeleteRecord = (record) => {\r\n        console.log(\"删除记录 \", record);\r\n    };\r\n    //填入更新数据\r\n    setUpdateModal = ({ form, record }) => {\r\n        // console.log(record, form);\r\n        this.record = record;\r\n        form.setFieldsValue({\r\n            uuserId: record.uuserId,\r\n            market: record.market + \"\",\r\n            accountType: record.accountType + \"\",\r\n            accountId: record.accountId,\r\n        });\r\n    };\r\n    getData = (params = {}, pagination = { current: 1, pageSize: 11 }) => {\r\n        params = {\r\n            ...params,\r\n            pageId: pagination.current,\r\n            pageNum: pagination.pageSize,\r\n        };\r\n        http.post({\r\n            // url: \"/option/assetInfo/selectList\",\r\n            url: \"/stockHolder/list\",\r\n            data: params,\r\n        }).then((res) => {\r\n            console.log(res);\r\n            //解析数据字典\r\n            if (res.data.records && res.data.records.length > 0) {\r\n                //parseDict(res.data.records);\r\n                parseDictValue(res.data.records);\r\n            } else {\r\n                message.info(\"查询结果为空\");\r\n            }\r\n            let pgn = {\r\n                current: pagination.current,\r\n                pageSize: pagination.pageSize,\r\n                total: res.data.total || 0,\r\n            };\r\n            this.setState({\r\n                info: res.data.records,\r\n                pagination: pgn,\r\n            });\r\n        });\r\n    };\r\n    handleSearch = (params, pagination) => {\r\n        this.getData(params, pagination);\r\n    };\r\n    componentDidMount() {\r\n        this.getData();\r\n    }\r\n    render() {\r\n        let scroll = { x: 1000, y: 445 };\r\n        let info = this.state.info;\r\n        //批量\r\n        // let { selectRow } = this.state;\r\n        // const rowSelection = {\r\n        //     selectRow,\r\n        //     onChange: this.handleTableChange,\r\n        // };\r\n        return (\r\n            <div>\r\n                <CurdComponent\r\n                    // rowKey={\"index\"}\r\n                    // isShowSearchForm={false}\r\n                    // btnText2=\"查全部\"\r\n                    onSearchClick={this.handleSearch}\r\n                    getSearchFormFields={getSearchFormFields}\r\n                    // searchLoading={this.state.searchLoading}\r\n                    insertBtnText={\"新增\"} // 不传 就没新增按钮\r\n                    getInsertFormFields={getInsertFormFields}\r\n                    insertRecord={this.handleInsertRecord}\r\n                    // col=\"2\"\r\n                    width=\"600px\"\r\n                    pagination={this.state.pagination}\r\n                    getUpdateFormFields={getUpdateFormFields}\r\n                    setUpdateModal={this.setUpdateModal}\r\n                    updateRecord={this.handleUpdateRecord} // 不传 就没编辑\r\n                    // deleteRecord={this.handleDeleteRecord} // 不传 就没删除\r\n                    centered={true}\r\n                    columns={columns}\r\n                    dataSource={info}\r\n                    scroll={scroll}\r\n                    // rowSelection={rowSelection} //批量选择 操作\r\n                >\r\n                    <div\r\n                        urlPrefix=\"/stockHolder\"\r\n                        title=\"股东信息\"\r\n                        sucCallback={this.getData}\r\n                    ></div>\r\n                </CurdComponent>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}