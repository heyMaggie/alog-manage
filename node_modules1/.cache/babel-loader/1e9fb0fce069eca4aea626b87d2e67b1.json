{"ast":null,"code":"import \"antd/lib/modal/style\";\nimport _Modal from \"antd/lib/modal\";\nimport \"antd/lib/form/style\";\nimport _Form from \"antd/lib/form\";\nimport \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nimport _defineProperty from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport \"antd/lib/message/style\";\nimport _message from \"antd/lib/message\";\nimport \"antd/lib/popconfirm/style\";\nimport _Popconfirm from \"antd/lib/popconfirm\";\nimport _regeneratorRuntime from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport \"antd/lib/input/style\";\nimport _Input from \"antd/lib/input\";\nimport _classCallCheck from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport \"antd/lib/tree/style\";\nimport _Tree from \"antd/lib/tree\";\nvar _jsxFileName = \"D:\\\\company\\\\algo-manage\\\\src\\\\algo\\\\modules\\\\auth\\\\pages\\\\roleManagement\\\\index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport CurdComponent from \"@/components/CurdComponent\"; // import SelectOption from \"@/components/SelectOption\";\n// import Table from \"@/components/Table\";\n// import UploadWrap from \"@/components/UploadWrap\";\n\nimport styles from \"./style.module.less\"; // import md5 from \"js-md5\"; //全局引入\n\nvar TreeNode = _Tree.TreeNode;\n\nvar userInfo =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(userInfo, _React$PureComponent);\n\n  function userInfo() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, userInfo);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(userInfo)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      searchLoading: false,\n      selectRow: [],\n      info: [],\n      updateModalVisible: false,\n      pagination: {\n        total: 0\n      },\n      // expandedKeys: [\"0-0-0\", \"0-0-1\"],\n      autoExpandParent: true,\n      checkedKeys: [],\n      treeData: []\n    };\n\n    _this.onExpand = function (expandedKeys) {\n      // console.log(\"onExpand\", expandedKeys);\n      _this.setState({\n        expandedKeys: expandedKeys // autoExpandParent: false,\n\n      });\n    };\n\n    _this.onCheck = function (checkedKeys) {\n      // console.log(\"onCheck\", checkedKeys.checked);\n      _this.setState({\n        checkedKeys: checkedKeys.checked\n      });\n    };\n\n    _this.renderTreeNodes = function (treeData) {\n      // console.log(\"renderTreeNodes\", data);\n      //key={item.key}\n      return treeData.map(function (item) {\n        // console.log(item, item.name);\n        if (item.children) {\n          return React.createElement(TreeNode, {\n            title: item.name,\n            key: item.key,\n            dataRef: item,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 53\n            },\n            __self: this\n          }, _this.renderTreeNodes(item.children));\n        }\n\n        if (item.cmpt) {\n          return React.createElement(TreeNode, {\n            title: item.name,\n            key: item.key,\n            dataRef: item,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 60\n            },\n            __self: this\n          }, _this.renderTreeNodes(item.cmpt));\n        } // console.log(item);\n\n\n        return React.createElement(TreeNode, {\n          key: item.key,\n          title: item.name,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        });\n      });\n    };\n\n    _this.getSearchFormFields = function () {\n      return [{\n        label: React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }, \"\\u89D2\\xA0\\u8272\\xA0\\u540D\\xA0\\u79F0\"),\n        id: \"role_name\",\n        component: React.createElement(_Input, {\n          placeholder: \"\\u8BF7\\u8F93\\u5165\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        })\n      }];\n    };\n\n    _this.columns = function (params) {\n      return [{\n        title: \"ID\",\n        dataIndex: \"id\",\n        width: 80\n      }, {\n        title: \"角色ID\",\n        dataIndex: \"role_id\",\n        width: 100\n      }, {\n        title: \"角色名称\",\n        dataIndex: \"role_name\",\n        width: 160\n      }, {\n        title: \"权限\",\n        dataIndex: \"role_desc\"\n      }, {\n        title: \"状态\",\n        dataIndex: \"statusValue\",\n        width: 100\n      }, {\n        title: \"创建时间\",\n        dataIndex: \"create_time\",\n        width: 180\n      }, {\n        title: \"操作\",\n        key: \"operation\",\n        fixed: \"right\",\n        width: 100,\n        render: function render(text, record) {\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 115\n            },\n            __self: this\n          }, React.createElement(\"a\", {\n            onClick: function onClick(e) {\n              _this.handleUpdateBtn(record);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 116\n            },\n            __self: this\n          }, \"\\u7F16\\u8F91\"), React.createElement(_Popconfirm, {\n            title: \"\\u662F\\u5426\\u786E\\u8BA4\\u5220\\u9664?\",\n            onConfirm:\n            /*#__PURE__*/\n            _asyncToGenerator(\n            /*#__PURE__*/\n            _regeneratorRuntime.mark(function _callee() {\n              return _regeneratorRuntime.wrap(function _callee$(_context) {\n                while (1) {\n                  switch (_context.prev = _context.next) {\n                    case 0:\n                      return _context.abrupt(\"return\", _this.handleDeleteRecord(record));\n\n                    case 1:\n                    case \"end\":\n                      return _context.stop();\n                  }\n                }\n              }, _callee);\n            })),\n            okText: \"\\u786E\\u8BA4\",\n            cancelText: \"\\u53D6\\u6D88\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 124\n            },\n            __self: this\n          }, React.createElement(\"a\", {\n            style: {\n              color: \"rgba(240, 95, 94, 1)\",\n              margin: \"0 0 0 24px\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 132\n            },\n            __self: this\n          }, \"\\u5220\\u9664\")));\n        }\n      }];\n    };\n\n    _this.handleInsertRecord = function (formData, roleAuth) {\n      var params = {\n        oper_type: 1,\n        //oper_type // 操作类型  1-新增， 2-修改   3-删除\n        role_id: formData.role_id / 1,\n        role_name: formData.role_name,\n        role_auth: JSON.stringify(roleAuth)\n      };\n      console.log(params); // return;\n\n      http.post({\n        url: \"/tell-info/roleModify\",\n        data: params\n      }).then(function (res) {\n        // console.log(res);\n        if (res.code == 200) {\n          _message.success(\"新增成功\");\n\n          _this.getData();\n\n          _this.setState({\n            updateModalVisible: false\n          });\n        } else {\n          _message.error(\"新增失败\");\n        }\n      });\n    };\n\n    _this.handleUpdateRecord = function (formData, roleAuth) {\n      var params = {\n        oper_type: 2,\n        //oper_type // 操作类型  1-新增， 2-修改   3-删除\n        role_id: formData.role_id / 1,\n        role_name: formData.role_name,\n        role_auth: JSON.stringify(roleAuth)\n      };\n      console.log(params); // return;\n\n      http.post({\n        url: \"/tell-info/roleModify\",\n        data: params\n      }).then(function (res) {\n        // console.log(res);\n        if (res.code == 200) {\n          _message.success(\"修改成功\");\n\n          _this.getData();\n\n          _this.setState({\n            updateModalVisible: false\n          });\n        } else {\n          _message.error(\"修改失败\");\n        }\n      });\n    };\n\n    _this.handleUpdateBtn = function (record) {\n      console.log(\"更新记录\", record);\n      _this.record = record;\n      var role_auth = JSON.parse(record.role_auth);\n      _this.isInsert = false;\n      _this.isUpdate = true;\n\n      _this.setState({\n        updateModalVisible: true\n      }, function () {\n        _this.props.form.setFieldsValue({\n          role_id: record.role_id,\n          role_name: record.role_name\n        });\n\n        _this.getRoleArray(role_auth);\n      });\n    };\n\n    _this.handleDeleteRecord = function (record) {\n      console.log(\"删除记录 \", record);\n      var params = {\n        oper_type: 3,\n        //oper_type // 操作类型  1-新增， 2-修改   3-删除\n        role_id: record.role_id / 1 // role_name: formData.role_name,\n        // role_auth: JSON.stringify(roleAuth),\n\n      };\n      console.log(params); // return;\n\n      http.post({\n        url: \"/tell-info/roleModify\",\n        data: params\n      }).then(function (res) {\n        // console.log(res);\n        if (res.code == 200) {\n          _message.success(\"删除成功\");\n\n          _this.getData(); // this.setState({\n          //     updateModalVisible: false,\n          // });\n\n        } else {\n          _message.error(\"删除失败\");\n        }\n      });\n    };\n\n    _this.handleInsertBtn = function (params) {\n      _this.isInsert = true;\n      _this.isUpdate = false;\n\n      _this.setState({\n        updateModalVisible: true\n      });\n\n      _this.props.form.resetFields();\n    };\n\n    _this.handleUpdateModalOk = function () {\n      var formData = _this.props.form.getFieldsValue(); // console.log(formData);\n      // console.log(\"treedata \", this.state.treeData);\n      // console.log(\"checked\", this.state.checkedKeys);\n\n\n      var roleAuth = _this.resetRoleArray(_this.state.checkedKeys); // console.log(roleAuth);\n\n\n      _this.props.form.validateFields(function (err, values) {\n        if (!err) {\n          if (_this.isInsert) {\n            console.log(\"新增角色\");\n\n            _this.handleInsertRecord(formData, roleAuth);\n          } else {\n            console.log(\"修改角色\");\n\n            _this.handleUpdateRecord(formData, roleAuth);\n          }\n        }\n      });\n    };\n\n    _this.resetRoleArray = function (checkArr) {\n      var roleAuth = _toConsumableArray(_this.state.treeData);\n\n      for (var i = 0; i < roleAuth.length; i++) {\n        var lv1 = roleAuth[i];\n\n        if (checkArr.includes(lv1.key)) {\n          lv1.auth = 1;\n        } else {\n          lv1.auth = 0;\n        }\n\n        if (lv1.children) {\n          for (var j = 0; j < lv1.children.length; j++) {\n            var lv2 = lv1.children[j];\n\n            if (checkArr.includes(lv2.key)) {\n              lv2.auth == 1;\n            } else {\n              lv2.auth = 0;\n            }\n\n            if (lv2.cmpt) {\n              for (var k = 0; k < lv2.cmpt.length; k++) {\n                var lv3 = lv2.cmpt[k];\n\n                if (checkArr.includes(lv3.key)) {\n                  lv3.auth == 1;\n                } else {\n                  lv3.auth = 0;\n                }\n              }\n            }\n          }\n        }\n      }\n\n      return roleAuth;\n    };\n\n    _this.getRoleArray = function (roleAuth) {\n      var checkArr = [];\n\n      for (var i = 0; i < roleAuth.length; i++) {\n        var lv1 = roleAuth[i]; // lv1.key = i + 1 + \"\";\n\n        if (lv1.auth == 1) {\n          checkArr.push(lv1.key);\n        }\n\n        if (lv1.children) {\n          for (var j = 0; j < lv1.children.length; j++) {\n            var lv2 = lv1.children[j]; // lv2.key = lv1.key + \"-\" + (j + 1);\n\n            if (lv2.auth == 1) {\n              checkArr.push(lv2.key);\n            }\n\n            if (lv2.cmpt) {\n              for (var k = 0; k < lv2.cmpt.length; k++) {\n                var lv3 = lv2.cmpt[k]; // lv3.key = lv2.key + \"-\" + (k + 1);\n\n                if (lv3.auth == 1) {\n                  checkArr.push(lv3.key);\n                }\n              }\n            }\n          }\n        }\n      } // console.log(checkArr);\n\n\n      _this.setState({\n        checkedKeys: checkArr\n      });\n    };\n\n    _this.handleRoleArray = function (roleAuth) {\n      var checkArr = [];\n\n      for (var i = 0; i < roleAuth.length; i++) {\n        var lv1 = roleAuth[i];\n        lv1.key = i + 1 + \"\";\n\n        if (lv1.auth == 1) {\n          checkArr.push(lv1.key);\n        }\n\n        if (lv1.children) {\n          for (var j = 0; j < lv1.children.length; j++) {\n            var lv2 = lv1.children[j];\n            lv2.key = lv1.key + \"-\" + (j + 1);\n\n            if (lv2.auth == 1) {\n              checkArr.push(lv2.key);\n            }\n\n            if (lv2.cmpt) {\n              for (var k = 0; k < lv2.cmpt.length; k++) {\n                var lv3 = lv2.cmpt[k];\n                lv3.key = lv2.key + \"-\" + (k + 1);\n\n                if (lv3.auth == 1) {\n                  checkArr.push(lv3.key);\n                }\n              }\n            }\n          }\n        }\n      }\n\n      _this.setState({\n        checkedKeys: checkArr\n      });\n    };\n\n    _this.getRoleAuth = function () {\n      var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var pagination = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n        current: 1,\n        pageSize: 12\n      };\n      params = {\n        user_type: localStorage.user_type / 1\n      }; // console.log(params);\n\n      http.post({\n        url: \"/tell-info/roleAuth\",\n        data: params\n      }).then(function (res) {\n        // console.log(res);\n        if (res.code == 200) {\n          if (res.role_auth.length > 0) {\n            var roleAuth = JSON.parse(res.role_auth).list;\n\n            _this.handleRoleArray(roleAuth); // console.log(roleAuth);\n\n\n            _this.setState({\n              treeData: roleAuth\n            });\n          }\n        }\n      });\n    };\n\n    _this.handleUpdateModalCancel = function () {\n      _this.setState({\n        updateModalVisible: false\n      });\n    };\n\n    _this.getData = function () {\n      var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var pagination = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n        current: 1,\n        pageSize: 12\n      };\n      params = _objectSpread({}, params, {\n        scene: 1,\n        role_id: 0,\n        // role_name: \"\",\n        page: pagination.current,\n        limit: pagination.pageSize\n      }); // console.log(params);\n\n      http.post({\n        url: \"/tell-info/roleList\",\n        // url: \"algo-assess/v1/auth/rolelist\",\n        data: params\n      }).then(function (res) {\n        console.log(res); //解析数据字典\n\n        if (res.list && res.list.length > 0) {\n          var userList = res.list; // parseDictValue(userList);\n\n          parseArrDictValue(userList, \"status\", \"authStatus\");\n        } else {\n          _message.info(\"查询结果为空\");\n        }\n\n        var pgn = {\n          current: pagination.current,\n          pageSize: pagination.pageSize,\n          total: res.total || 0\n        };\n\n        _this.setState({\n          info: res.list ? res.list : [],\n          pagination: pgn\n        });\n      });\n    };\n\n    _this.handleSearch = function (params, pagination) {\n      _this.searchParam = params;\n\n      _this.getData(params, pagination);\n    };\n\n    _this.handleDownload = function () {\n      window.location.href = window.baseURL + \"/user/download\";\n    };\n\n    return _this;\n  }\n\n  _createClass(userInfo, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getData();\n      this.getRoleAuth();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var scroll = {\n        x: 1000,\n        y: 445\n      };\n      var info = this.state.info;\n      var getFieldDecorator = this.props.form.getFieldDecorator;\n      var modalTitle = \"新增角色\";\n\n      if (this.isUpdate) {\n        modalTitle = \"修改角色\";\n      }\n\n      return React.createElement(\"div\", {\n        className: styles.userInfo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 452\n        },\n        __self: this\n      }, React.createElement(CurdComponent, {\n        pageSize: 10 // rowKey={\"index\"}\n        // isShowSearchForm={false}\n        // btnText2=\"查全部\"\n        ,\n        onSearchClick: this.handleSearch,\n        getSearchFormFields: this.getSearchFormFields // searchLoading={this.state.searchLoading}\n        ,\n        insertBtnText: \"新增\" // 不传 就没新增按钮\n        ,\n        hasSearchSlot: true,\n        addBtn: React.createElement(_Button, {\n          type: \"primary\",\n          icon: \"plus\",\n          onClick: this.handleInsertBtn,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 464\n          },\n          __self: this\n        }, \"\\u65B0\\u589E\\u89D2\\u8272\"),\n        insertRecord: this.handleInsertRecord // col=\"2\"\n        ,\n        width: \"600px\",\n        pagination: this.state.pagination,\n        setUpdateModal: this.setUpdateModal // updateRecord={this.handleUpdateRecord} // 不传 就没编辑\n        // deleteRecord={this.handleDeleteRecord} // 不传 就没删除\n        ,\n        centered: true,\n        columns: this.columns,\n        dataSource: info,\n        scroll: scroll // rowSelection={rowSelection} //批量选择 操作\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 453\n        },\n        __self: this\n      }), React.createElement(_Modal, {\n        title: modalTitle,\n        visible: this.state.updateModalVisible,\n        onOk: this.handleUpdateModalOk,\n        onCancel: this.handleUpdateModalCancel,\n        width: 788,\n        centered: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 491\n        },\n        __self: this\n      }, React.createElement(_Form, {\n        layout: \"vertical\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 499\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 500\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: styles.rowFlex,\n        style: {\n          position: \"relative\"\n        },\n        id: \"area\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 501\n        },\n        __self: this\n      }, React.createElement(_Form.Item, {\n        label: \"\\u89D2\\u8272ID\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 508\n        },\n        __self: this\n      }, getFieldDecorator(\"role_id\", {\n        rules: [{\n          required: true,\n          message: \"请输入\"\n        }, {\n          message: \"请输入数字\",\n          pattern: new RegExp(\"^\\\\d+$\")\n        }, {\n          validator: checkLength(20),\n          trigger: [\"change\", \"blur\"]\n        }]\n      })(React.createElement(_Input, {\n        placeholder: \"\\u8BF7\\u8F93\\u5165\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 524\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        style: {\n          width: 60\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 526\n        },\n        __self: this\n      }), React.createElement(_Form.Item, {\n        // className={styles.marLose14}\n        label: \"\\u89D2\\u8272\\u540D\\u79F0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 527\n        },\n        __self: this\n      }, getFieldDecorator(\"role_name\", {\n        rules: [{\n          required: true,\n          message: \"请输入\"\n        }]\n      })(React.createElement(_Input, {\n        placeholder: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 538\n        },\n        __self: this\n      }))))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 542\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: styles.tit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 543\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: styles.text,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 544\n        },\n        __self: this\n      }, \"\\u6743\\u9650\"))), React.createElement(\"div\", {\n        className: styles.treeWrap,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 547\n        },\n        __self: this\n      }, React.createElement(_Tree, {\n        checkable: true,\n        className: styles.tree,\n        checkStrictly: true,\n        onExpand: this.onExpand // expandedKeys={this.state.expandedKeys}\n        ,\n        defaultExpandAll: true,\n        autoExpandParent: this.state.autoExpandParent,\n        onCheck: this.onCheck,\n        checkedKeys: this.state.checkedKeys,\n        onSelect: this.onSelect,\n        selectable: false // selectedKeys={this.state.selectedKeys}\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 548\n        },\n        __self: this\n      }, this.renderTreeNodes(this.state.treeData))))));\n    }\n  }]);\n\n  return userInfo;\n}(React.PureComponent);\n\nexport default _Form.create()(userInfo);","map":{"version":3,"sources":["D:/company/algo-manage/src/algo/modules/auth/pages/roleManagement/index.js"],"names":["React","CurdComponent","styles","TreeNode","userInfo","state","searchLoading","selectRow","info","updateModalVisible","pagination","total","autoExpandParent","checkedKeys","treeData","onExpand","expandedKeys","setState","onCheck","checked","renderTreeNodes","map","item","children","name","key","cmpt","getSearchFormFields","label","id","component","columns","params","title","dataIndex","width","fixed","render","text","record","e","handleUpdateBtn","handleDeleteRecord","color","margin","handleInsertRecord","formData","roleAuth","oper_type","role_id","role_name","role_auth","JSON","stringify","console","log","http","post","url","data","then","res","code","success","getData","error","handleUpdateRecord","parse","isInsert","isUpdate","props","form","setFieldsValue","getRoleArray","handleInsertBtn","resetFields","handleUpdateModalOk","getFieldsValue","resetRoleArray","validateFields","err","values","checkArr","i","length","lv1","includes","auth","j","lv2","k","lv3","push","handleRoleArray","getRoleAuth","current","pageSize","user_type","localStorage","list","handleUpdateModalCancel","scene","page","limit","userList","parseArrDictValue","pgn","handleSearch","searchParam","handleDownload","window","location","href","baseURL","scroll","x","y","getFieldDecorator","modalTitle","setUpdateModal","rowFlex","position","rules","required","message","pattern","RegExp","validator","checkLength","trigger","tit","treeWrap","tree","onSelect","PureComponent","create"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport CurdComponent from \"@/components/CurdComponent\";\r\n// import SelectOption from \"@/components/SelectOption\";\r\n// import Table from \"@/components/Table\";\r\n// import UploadWrap from \"@/components/UploadWrap\";\r\nimport {\r\n    Input,\r\n    Modal,\r\n    // Switch,\r\n    Button,\r\n    Form,\r\n    message,\r\n    // Tooltip,\r\n    // Icon,\r\n    // Select,\r\n    Tree,\r\n    Popconfirm,\r\n} from \"antd\";\r\nimport styles from \"./style.module.less\";\r\n// import md5 from \"js-md5\"; //全局引入\r\nconst { TreeNode } = Tree;\r\n\r\nclass userInfo extends React.PureComponent {\r\n    state = {\r\n        searchLoading: false,\r\n        selectRow: [],\r\n        info: [],\r\n        updateModalVisible: false,\r\n        pagination: { total: 0 },\r\n        // expandedKeys: [\"0-0-0\", \"0-0-1\"],\r\n        autoExpandParent: true,\r\n        checkedKeys: [],\r\n        treeData: [],\r\n    };\r\n    onExpand = (expandedKeys) => {\r\n        // console.log(\"onExpand\", expandedKeys);\r\n        this.setState({\r\n            expandedKeys,\r\n            // autoExpandParent: false,\r\n        });\r\n    };\r\n    onCheck = (checkedKeys) => {\r\n        // console.log(\"onCheck\", checkedKeys.checked);\r\n        this.setState({ checkedKeys: checkedKeys.checked });\r\n    };\r\n    renderTreeNodes = (treeData) => {\r\n        // console.log(\"renderTreeNodes\", data);\r\n        //key={item.key}\r\n        return treeData.map((item) => {\r\n            // console.log(item, item.name);\r\n            if (item.children) {\r\n                return (\r\n                    <TreeNode title={item.name} key={item.key} dataRef={item}>\r\n                        {this.renderTreeNodes(item.children)}\r\n                    </TreeNode>\r\n                );\r\n            }\r\n            if (item.cmpt) {\r\n                return (\r\n                    <TreeNode title={item.name} key={item.key} dataRef={item}>\r\n                        {this.renderTreeNodes(item.cmpt)}\r\n                    </TreeNode>\r\n                );\r\n            }\r\n            // console.log(item);\r\n            return <TreeNode key={item.key} title={item.name} />;\r\n        });\r\n    };\r\n    getSearchFormFields = () => {\r\n        return [\r\n            {\r\n                label: <span>角&nbsp;色&nbsp;名&nbsp;称</span>,\r\n                id: \"role_name\",\r\n                component: <Input placeholder=\"请输入\" />,\r\n            },\r\n        ];\r\n    };\r\n    columns = (params) => {\r\n        return [\r\n            {\r\n                title: \"ID\",\r\n                dataIndex: \"id\",\r\n                width: 80,\r\n            },\r\n            {\r\n                title: \"角色ID\",\r\n                dataIndex: \"role_id\",\r\n                width: 100,\r\n            },\r\n            {\r\n                title: \"角色名称\",\r\n                dataIndex: \"role_name\",\r\n                width: 160,\r\n            },\r\n            {\r\n                title: \"权限\",\r\n                dataIndex: \"role_desc\",\r\n            },\r\n            {\r\n                title: \"状态\",\r\n                dataIndex: \"statusValue\",\r\n                width: 100,\r\n            },\r\n            {\r\n                title: \"创建时间\",\r\n                dataIndex: \"create_time\",\r\n                width: 180,\r\n            },\r\n            {\r\n                title: \"操作\",\r\n                key: \"operation\",\r\n                fixed: \"right\",\r\n                width: 100,\r\n                render: (text, record) => (\r\n                    <div>\r\n                        <a\r\n                            onClick={(e) => {\r\n                                this.handleUpdateBtn(record);\r\n                            }}\r\n                        >\r\n                            编辑\r\n                        </a>\r\n                        {\r\n                            <Popconfirm\r\n                                title=\"是否确认删除?\"\r\n                                onConfirm={async () =>\r\n                                    this.handleDeleteRecord(record)\r\n                                }\r\n                                okText=\"确认\"\r\n                                cancelText=\"取消\"\r\n                            >\r\n                                <a\r\n                                    style={{\r\n                                        color: \"rgba(240, 95, 94, 1)\",\r\n                                        margin: \"0 0 0 24px\",\r\n                                    }}\r\n                                >\r\n                                    删除\r\n                                </a>\r\n                            </Popconfirm>\r\n                        }\r\n                    </div>\r\n                ),\r\n            },\r\n        ];\r\n    };\r\n    //更新记录\r\n    handleInsertRecord = (formData, roleAuth) => {\r\n        let params = {\r\n            oper_type: 1, //oper_type // 操作类型  1-新增， 2-修改   3-删除\r\n            role_id: formData.role_id / 1,\r\n            role_name: formData.role_name,\r\n            role_auth: JSON.stringify(roleAuth),\r\n        };\r\n        console.log(params);\r\n        // return;\r\n        http.post({\r\n            url: \"/tell-info/roleModify\",\r\n            data: params,\r\n        }).then((res) => {\r\n            // console.log(res);\r\n            if (res.code == 200) {\r\n                message.success(\"新增成功\");\r\n                this.getData();\r\n                this.setState({\r\n                    updateModalVisible: false,\r\n                });\r\n            } else {\r\n                message.error(\"新增失败\");\r\n            }\r\n        });\r\n    };\r\n    //更新记录\r\n    handleUpdateRecord = (formData, roleAuth) => {\r\n        let params = {\r\n            oper_type: 2, //oper_type // 操作类型  1-新增， 2-修改   3-删除\r\n            role_id: formData.role_id / 1,\r\n            role_name: formData.role_name,\r\n            role_auth: JSON.stringify(roleAuth),\r\n        };\r\n        console.log(params);\r\n        // return;\r\n        http.post({\r\n            url: \"/tell-info/roleModify\",\r\n            data: params,\r\n        }).then((res) => {\r\n            // console.log(res);\r\n            if (res.code == 200) {\r\n                message.success(\"修改成功\");\r\n                this.getData();\r\n                this.setState({\r\n                    updateModalVisible: false,\r\n                });\r\n            } else {\r\n                message.error(\"修改失败\");\r\n            }\r\n        });\r\n    };\r\n    // 编辑按钮点击事件\r\n    handleUpdateBtn = (record) => {\r\n        console.log(\"更新记录\", record);\r\n        this.record = record;\r\n        let role_auth = JSON.parse(record.role_auth);\r\n        this.isInsert = false;\r\n        this.isUpdate = true;\r\n        this.setState(\r\n            {\r\n                updateModalVisible: true,\r\n            },\r\n            () => {\r\n                this.props.form.setFieldsValue({\r\n                    role_id: record.role_id,\r\n                    role_name: record.role_name,\r\n                });\r\n                this.getRoleArray(role_auth);\r\n            }\r\n        );\r\n    };\r\n\r\n    //删除记录\r\n    handleDeleteRecord = (record) => {\r\n        console.log(\"删除记录 \", record);\r\n        let params = {\r\n            oper_type: 3, //oper_type // 操作类型  1-新增， 2-修改   3-删除\r\n            role_id: record.role_id / 1,\r\n            // role_name: formData.role_name,\r\n            // role_auth: JSON.stringify(roleAuth),\r\n        };\r\n        console.log(params);\r\n        // return;\r\n        http.post({\r\n            url: \"/tell-info/roleModify\",\r\n            data: params,\r\n        }).then((res) => {\r\n            // console.log(res);\r\n            if (res.code == 200) {\r\n                message.success(\"删除成功\");\r\n                this.getData();\r\n                // this.setState({\r\n                //     updateModalVisible: false,\r\n                // });\r\n            } else {\r\n                message.error(\"删除失败\");\r\n            }\r\n        });\r\n    };\r\n    // 新增按钮点击事件\r\n    handleInsertBtn = (params) => {\r\n        this.isInsert = true;\r\n        this.isUpdate = false;\r\n        this.setState({\r\n            updateModalVisible: true,\r\n        });\r\n        this.props.form.resetFields();\r\n    };\r\n    handleUpdateModalOk = () => {\r\n        let formData = this.props.form.getFieldsValue();\r\n        // console.log(formData);\r\n        // console.log(\"treedata \", this.state.treeData);\r\n        // console.log(\"checked\", this.state.checkedKeys);\r\n        let roleAuth = this.resetRoleArray(this.state.checkedKeys);\r\n        // console.log(roleAuth);\r\n        this.props.form.validateFields((err, values) => {\r\n            if (!err) {\r\n                if (this.isInsert) {\r\n                    console.log(\"新增角色\");\r\n                    this.handleInsertRecord(formData, roleAuth);\r\n                } else {\r\n                    console.log(\"修改角色\");\r\n                    this.handleUpdateRecord(formData, roleAuth);\r\n                }\r\n            }\r\n        });\r\n    };\r\n\r\n    //根据 选中数据， 改变 权限数组\r\n    resetRoleArray = (checkArr) => {\r\n        let roleAuth = [...this.state.treeData];\r\n        for (let i = 0; i < roleAuth.length; i++) {\r\n            let lv1 = roleAuth[i];\r\n            if (checkArr.includes(lv1.key)) {\r\n                lv1.auth = 1;\r\n            } else {\r\n                lv1.auth = 0;\r\n            }\r\n            if (lv1.children) {\r\n                for (let j = 0; j < lv1.children.length; j++) {\r\n                    let lv2 = lv1.children[j];\r\n                    if (checkArr.includes(lv2.key)) {\r\n                        lv2.auth == 1;\r\n                    } else {\r\n                        lv2.auth = 0;\r\n                    }\r\n                    if (lv2.cmpt) {\r\n                        for (let k = 0; k < lv2.cmpt.length; k++) {\r\n                            let lv3 = lv2.cmpt[k];\r\n                            if (checkArr.includes(lv3.key)) {\r\n                                lv3.auth == 1;\r\n                            } else {\r\n                                lv3.auth = 0;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return roleAuth;\r\n    };\r\n    //根据 选中数据， 改变 权限数组\r\n    getRoleArray = (roleAuth) => {\r\n        let checkArr = [];\r\n        for (let i = 0; i < roleAuth.length; i++) {\r\n            let lv1 = roleAuth[i];\r\n            // lv1.key = i + 1 + \"\";\r\n            if (lv1.auth == 1) {\r\n                checkArr.push(lv1.key);\r\n            }\r\n            if (lv1.children) {\r\n                for (let j = 0; j < lv1.children.length; j++) {\r\n                    let lv2 = lv1.children[j];\r\n                    // lv2.key = lv1.key + \"-\" + (j + 1);\r\n                    if (lv2.auth == 1) {\r\n                        checkArr.push(lv2.key);\r\n                    }\r\n                    if (lv2.cmpt) {\r\n                        for (let k = 0; k < lv2.cmpt.length; k++) {\r\n                            let lv3 = lv2.cmpt[k];\r\n                            // lv3.key = lv2.key + \"-\" + (k + 1);\r\n                            if (lv3.auth == 1) {\r\n                                checkArr.push(lv3.key);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        // console.log(checkArr);\r\n        this.setState({ checkedKeys: checkArr });\r\n    };\r\n    handleRoleArray = (roleAuth) => {\r\n        let checkArr = [];\r\n        for (let i = 0; i < roleAuth.length; i++) {\r\n            let lv1 = roleAuth[i];\r\n            lv1.key = i + 1 + \"\";\r\n            if (lv1.auth == 1) {\r\n                checkArr.push(lv1.key);\r\n            }\r\n            if (lv1.children) {\r\n                for (let j = 0; j < lv1.children.length; j++) {\r\n                    let lv2 = lv1.children[j];\r\n                    lv2.key = lv1.key + \"-\" + (j + 1);\r\n                    if (lv2.auth == 1) {\r\n                        checkArr.push(lv2.key);\r\n                    }\r\n                    if (lv2.cmpt) {\r\n                        for (let k = 0; k < lv2.cmpt.length; k++) {\r\n                            let lv3 = lv2.cmpt[k];\r\n                            lv3.key = lv2.key + \"-\" + (k + 1);\r\n                            if (lv3.auth == 1) {\r\n                                checkArr.push(lv3.key);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        this.setState({ checkedKeys: checkArr });\r\n    };\r\n    //获取初始权限 模板\r\n    getRoleAuth = (params = {}, pagination = { current: 1, pageSize: 12 }) => {\r\n        params = {\r\n            user_type: localStorage.user_type / 1,\r\n        };\r\n        // console.log(params);\r\n        http.post({\r\n            url: \"/tell-info/roleAuth\",\r\n            data: params,\r\n        }).then((res) => {\r\n            // console.log(res);\r\n            if (res.code == 200) {\r\n                if (res.role_auth.length > 0) {\r\n                    let roleAuth = JSON.parse(res.role_auth).list;\r\n                    this.handleRoleArray(roleAuth);\r\n                    // console.log(roleAuth);\r\n                    this.setState({\r\n                        treeData: roleAuth,\r\n                    });\r\n                }\r\n            }\r\n        });\r\n    };\r\n    handleUpdateModalCancel = () => {\r\n        this.setState({\r\n            updateModalVisible: false,\r\n        });\r\n    };\r\n    getData = (params = {}, pagination = { current: 1, pageSize: 12 }) => {\r\n        params = {\r\n            ...params,\r\n            scene: 1,\r\n            role_id: 0,\r\n            // role_name: \"\",\r\n            page: pagination.current,\r\n            limit: pagination.pageSize,\r\n        };\r\n        // console.log(params);\r\n        http.post({\r\n            url: \"/tell-info/roleList\",\r\n            // url: \"algo-assess/v1/auth/rolelist\",\r\n            data: params,\r\n        }).then((res) => {\r\n            console.log(res);\r\n            //解析数据字典\r\n            if (res.list && res.list.length > 0) {\r\n                let userList = res.list;\r\n                // parseDictValue(userList);\r\n                parseArrDictValue(userList, \"status\", \"authStatus\");\r\n            } else {\r\n                message.info(\"查询结果为空\");\r\n            }\r\n            let pgn = {\r\n                current: pagination.current,\r\n                pageSize: pagination.pageSize,\r\n                total: res.total || 0,\r\n            };\r\n            this.setState({\r\n                info: res.list ? res.list : [],\r\n                pagination: pgn,\r\n            });\r\n        });\r\n    };\r\n    handleSearch = (params, pagination) => {\r\n        this.searchParam = params;\r\n        this.getData(params, pagination);\r\n    };\r\n    handleDownload = () => {\r\n        window.location.href = window.baseURL + \"/user/download\";\r\n    };\r\n    componentDidMount() {\r\n        this.getData();\r\n        this.getRoleAuth();\r\n    }\r\n    render() {\r\n        let scroll = { x: 1000, y: 445 };\r\n        let info = this.state.info;\r\n        let { getFieldDecorator } = this.props.form;\r\n        let modalTitle = \"新增角色\";\r\n        if (this.isUpdate) {\r\n            modalTitle = \"修改角色\";\r\n        }\r\n        return (\r\n            <div className={styles.userInfo}>\r\n                <CurdComponent\r\n                    pageSize={10}\r\n                    // rowKey={\"index\"}\r\n                    // isShowSearchForm={false}\r\n                    // btnText2=\"查全部\"\r\n                    onSearchClick={this.handleSearch}\r\n                    getSearchFormFields={this.getSearchFormFields}\r\n                    // searchLoading={this.state.searchLoading}\r\n                    insertBtnText={\"新增\"} // 不传 就没新增按钮\r\n                    hasSearchSlot={true}\r\n                    addBtn={\r\n                        <Button\r\n                            type=\"primary\"\r\n                            icon=\"plus\"\r\n                            onClick={this.handleInsertBtn}\r\n                        >\r\n                            新增角色\r\n                        </Button>\r\n                    }\r\n                    insertRecord={this.handleInsertRecord}\r\n                    // col=\"2\"\r\n                    width=\"600px\"\r\n                    pagination={this.state.pagination}\r\n                    setUpdateModal={this.setUpdateModal}\r\n                    // updateRecord={this.handleUpdateRecord} // 不传 就没编辑\r\n                    // deleteRecord={this.handleDeleteRecord} // 不传 就没删除\r\n                    centered={true}\r\n                    columns={this.columns}\r\n                    dataSource={info}\r\n                    scroll={scroll}\r\n                    // rowSelection={rowSelection} //批量选择 操作\r\n                >\r\n                    {/* <div\r\n                        urlPrefix=\"/user\"\r\n                        title=\"角色管理\"\r\n                        sucCallback={this.getData}\r\n                    ></div> */}\r\n                </CurdComponent>\r\n                <Modal\r\n                    title={modalTitle}\r\n                    visible={this.state.updateModalVisible}\r\n                    onOk={this.handleUpdateModalOk}\r\n                    onCancel={this.handleUpdateModalCancel}\r\n                    width={788}\r\n                    centered\r\n                >\r\n                    <Form layout={\"vertical\"}>\r\n                        <div>\r\n                            <div\r\n                                className={styles.rowFlex}\r\n                                style={{\r\n                                    position: \"relative\",\r\n                                }}\r\n                                id=\"area\"\r\n                            >\r\n                                <Form.Item label=\"角色ID\">\r\n                                    {getFieldDecorator(\"role_id\", {\r\n                                        rules: [\r\n                                            {\r\n                                                required: true,\r\n                                                message: \"请输入\",\r\n                                            },\r\n                                            {\r\n                                                message: \"请输入数字\",\r\n                                                pattern: new RegExp(\"^\\\\d+$\"),\r\n                                            },\r\n                                            {\r\n                                                validator: checkLength(20),\r\n                                                trigger: [\"change\", \"blur\"],\r\n                                            },\r\n                                        ],\r\n                                    })(<Input placeholder=\"请输入\" />)}\r\n                                </Form.Item>\r\n                                <div style={{ width: 60 }}></div>\r\n                                <Form.Item\r\n                                    // className={styles.marLose14}\r\n                                    label=\"角色名称\"\r\n                                >\r\n                                    {getFieldDecorator(\"role_name\", {\r\n                                        rules: [\r\n                                            {\r\n                                                required: true,\r\n                                                message: \"请输入\",\r\n                                            },\r\n                                        ],\r\n                                    })(<Input placeholder=\"\" />)}\r\n                                </Form.Item>\r\n                            </div>\r\n                        </div>\r\n                        <div>\r\n                            <div className={styles.tit}>\r\n                                <div className={styles.text}>权限</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className={styles.treeWrap}>\r\n                            <Tree\r\n                                checkable\r\n                                className={styles.tree}\r\n                                checkStrictly={true}\r\n                                onExpand={this.onExpand}\r\n                                // expandedKeys={this.state.expandedKeys}\r\n                                defaultExpandAll={true}\r\n                                autoExpandParent={this.state.autoExpandParent}\r\n                                onCheck={this.onCheck}\r\n                                checkedKeys={this.state.checkedKeys}\r\n                                onSelect={this.onSelect}\r\n                                selectable={false}\r\n                                // selectedKeys={this.state.selectedKeys}\r\n                            >\r\n                                {this.renderTreeNodes(this.state.treeData)}\r\n                            </Tree>\r\n                        </div>\r\n                    </Form>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Form.create()(userInfo);\r\n"]},"metadata":{},"sourceType":"module"}