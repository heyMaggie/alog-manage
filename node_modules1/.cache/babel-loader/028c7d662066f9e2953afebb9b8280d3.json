{"ast":null,"code":"import \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/input/style\";\nimport _Input from \"antd/lib/input\";\nimport \"antd/lib/form/style\";\nimport _Form from \"antd/lib/form\";\nimport _defineProperty from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport \"antd/lib/select/style\";\nimport _Select from \"antd/lib/select\";\nimport \"antd/lib/date-picker/style\";\nimport _DatePicker from \"antd/lib/date-picker\";\nvar _jsxFileName = \"D:\\\\company\\\\algo-manage\\\\src\\\\algo\\\\modules\\\\tradeStatistics\\\\pages\\\\regularWay\\\\index.js\";\nimport React from \"react\";\nimport styles from \"./style.module.less\";\nimport echarts from \"echarts\";\nimport { connect } from \"react-redux\";\nvar RangePicker = _DatePicker.RangePicker;\nvar Option = _Select.Option;\n\nvar RegularWay =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(RegularWay, _React$PureComponent);\n\n  function RegularWay() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, RegularWay);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(RegularWay)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      numberText: \"笔\",\n      userList: []\n    };\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n\n      _this.props.form.validateFields(function (err, values) {\n        if (!err) {\n          var noTime = values[\"pickerTime\"].length < 1;\n          var params = {\n            securityId: values.securityId,\n            uuserId: values.uuserId,\n            countWay: values.countWay,\n            startTime: noTime ? \"\" : Date.parse(values[\"pickerTime\"][0]) * 1000,\n            endTime: noTime ? \"\" : Date.parse(values[\"pickerTime\"][1]) * 1000\n          };\n\n          _this.setState({\n            numberText: values.countWay == \"0\" ? \"笔\" : \"元\"\n          });\n\n          _this.getData(params);\n        }\n      });\n    };\n\n    _this.getData = function (params) {\n      var count = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      http.post({\n        url: \"/statistics/trade\",\n        data: params\n      }).then(function (res) {\n        if (res.code == 0) {\n          if (res.data.length == 0) {\n            message.error(\"该时间段暂无数据\");\n          } else {\n            var data = res.data;\n            var echartLen = Object.keys(data);\n            echartLen.forEach(function (item) {\n              _this.generateChart(data[item], item);\n            });\n          }\n        } else {\n          message.error(\"服务异常\");\n        }\n      });\n    };\n\n    _this.generateChart = function (list, type) {\n      var lineObj = {\n        tradeOrder: {\n          name: \"普通单信息\",\n          color: \"#F78B7F\"\n        },\n        cancelTradeOrder: {\n          name: \"撤单信息\",\n          color: \"#FFD747\"\n        },\n        dealTradeOrder: {\n          name: \"成交信息\",\n          color: \"#72DF5A\"\n        }\n      };\n      var isNull = list.length ? false : true;\n      var option = {\n        title: {\n          top: \"12px\",\n          left: \"32px\",\n          text: \"{a|}  \" + lineObj[type].name,\n          textStyle: {\n            color: \"#333333\",\n            fontSize: 14,\n            fontWeight: 500,\n            rich: {\n              a: {\n                backgroundColor: \"#3281FF\",\n                height: 10,\n                width: 2\n              }\n            }\n          }\n        },\n        textStyle: {\n          color: \"#333\"\n        },\n        tooltip: {\n          trigger: \"axis\",\n          backgroundColor: \"#1F2329\",\n          boxShadow: \"0px 2px 8px 0px rgba(0, 0, 0, 0.15)\",\n          borderColor: \"#1F2329\",\n          textStyle: {\n            color: \"#fff\"\n          }\n        },\n        dataset: {\n          dimensions: [\"x\", \"y\"],\n          source: list\n        },\n        grid: {\n          left: \"34px\",\n          right: \"5%\",\n          bottom: \"24px\",\n          top: \"75px\",\n          containLabel: true\n        },\n        xAxis: {\n          type: \"category\",\n          boundaryGap: false,\n          splitLine: {\n            show: true,\n            lineStyle: {\n              color: \"#E9E9E9\",\n              type: \"dashed\"\n            }\n          },\n          axisLabel: {// interval: 0,\n            // rotate: 30,\n            // showMaxLabel: true,\n          },\n          axisTick: {\n            show: true,\n            //显示X轴刻度\n            lineStyle: {\n              color: \"#E9E9E9\"\n            }\n          },\n          axisLine: {\n            // 刻度线的颜色\n            show: false\n          },\n          axisPointer: {\n            type: \"line\",\n            lineStyle: {\n              color: \"#BDBEBF\"\n            }\n          }\n        },\n        yAxis: [_defineProperty({\n          type: \"value\",\n          name: \"\\u5355\\u4F4D\\uFF1A(\".concat(_this.state.numberText, \")\"),\n          nameLocation: \"end\",\n          axisLine: {\n            show: false\n          },\n          nameTextStyle: {\n            color: \"#666\"\n          },\n          axisTick: {\n            show: false //隐藏X轴刻度\n\n          },\n          min: isNull ? 0 : null,\n          max: isNull ? 100 : null,\n          splitLine: {\n            show: true,\n            lineStyle: {\n              color: \"#E9E9E9\",\n              type: \"dashed\"\n            }\n          }\n        }, \"nameTextStyle\", {\n          align: \"center\" // padding: [0, 0, 0, 20],\n\n        })],\n        series: [{\n          name: \"普通单数\",\n          type: \"line\",\n          smooth: true,\n          showSymbol: false,\n          // symbol: \"circle\",\n          itemStyle: {\n            normal: {\n              color: lineObj[type].color\n            }\n          },\n          areaStyle: {\n            normal: {\n              color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\n                offset: 0,\n                color: lineObj[type].color\n              }, {\n                offset: 1,\n                color: \"rgba(255,255,255,0)\"\n              }], false),\n              shadowColor: \"rgba(0, 0, 0, 0.1)\",\n              shadowBlur: 10\n            }\n          }\n        }]\n      };\n      var myChart = echarts.init(document.getElementById(type));\n      myChart.setOption(option);\n      myChart.resize();\n    };\n\n    _this.chartResize = function () {\n      var domList = [\"tradeOrder\", \"cancelTradeOrder\", \"dealTradeOrder\"];\n      domList.forEach(function (item) {\n        echarts.init(document.getElementById(item)).resize();\n      });\n    };\n\n    _this.getSelectList = function () {\n      // 用户\n      http.get({\n        url: \"/user/listAll\"\n      }).then(function (res3) {\n        _this.setState({\n          userList: res3.data\n        });\n      }); // });\n    };\n\n    return _this;\n  }\n\n  _createClass(RegularWay, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getData({\n        securityId: \"\",\n        uuserId: \"\",\n        startTime: \"\",\n        endTime: \"\",\n        countWay: \"0\"\n      });\n      this.getSelectList();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      window.cpuResize = this.chartResize;\n\n      if (this.props.path == \"/main/tradeStatistics/regularWay\") {\n        window.addEventListener(\"resize\", window.cpuResize);\n      } else {\n        window.removeEventListener(\"resize\", window.cpuResize);\n      }\n\n      var getFieldDecorator = this.props.form.getFieldDecorator;\n      var userList = this.state.userList;\n      var children = userList.map(function (d) {\n        return React.createElement(Option, {\n          key: d.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 249\n          },\n          __self: this\n        }, d.userName);\n      });\n      return React.createElement(\"div\", {\n        className: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: styles.search,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253\n        },\n        __self: this\n      }, React.createElement(_Form, {\n        layout: \"inline\",\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254\n        },\n        __self: this\n      }, React.createElement(_Form.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255\n        },\n        __self: this\n      }, getFieldDecorator(\"countWay\", {\n        initialValue: \"0\"\n      })(React.createElement(_Select, {\n        showSearch: true,\n        style: {\n          width: 160\n        },\n        placeholder: \"\\u9009\\u62E9\\u5355\\u4F4D\",\n        optionFilterProp: \"children\",\n        filterOption: function filterOption(input, option) {\n          return option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      }, React.createElement(Option, {\n        value: \"0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270\n        },\n        __self: this\n      }, \"\\u7B14\\u6570\"), React.createElement(Option, {\n        value: \"1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271\n        },\n        __self: this\n      }, \"\\u91D1\\u989D\")))), React.createElement(_Form.Item, {\n        style: {\n          marginLeft: \"12px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275\n        },\n        __self: this\n      }, getFieldDecorator(\"securityId\", {\n        initialValue: \"\"\n      })(React.createElement(_Input, {\n        placeholder: \"\\u8BF7\\u8F93\\u5165\\u8BC1\\u5238\\u4EE3\\u7801\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279\n        },\n        __self: this\n      }) // <Select\n      //     showSearch\n      //     style={{ width: 160 }}\n      //     placeholder=\"选择股票\"\n      //     optionFilterProp=\"children\"\n      //     filterOption={(input, option) =>\n      //         option.props.children\n      //             .toLowerCase()\n      //             .indexOf(input.toLowerCase()) >= 0\n      //     }\n      // >\n      //     <Option value=\"\">全部股票</Option>\n      //     <Option value=\"000001\">平安银行</Option>\n      // </Select>\n      )), React.createElement(_Form.Item, {\n        style: {\n          marginLeft: \"12px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296\n        },\n        __self: this\n      }, getFieldDecorator(\"uuserId\")( // <Input placeholder=\"\" />\n      React.createElement(_Select, {\n        allowClear: true,\n        showSearch: true,\n        style: {\n          width: 160\n        },\n        placeholder: \"\\u8BF7\\u8F93\\u5165\\u7528\\u6237ID\",\n        optionFilterProp: \"children\",\n        filterOption: function filterOption(input, option) {\n          return option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299\n        },\n        __self: this\n      }, children))), React.createElement(_Form.Item, {\n        style: {\n          marginLeft: \"12px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315\n        },\n        __self: this\n      }, getFieldDecorator(\"pickerTime\", {\n        initialValue: []\n      })(React.createElement(RangePicker, {\n        style: {\n          width: 432\n        },\n        showTime: true,\n        format: \"YYYY-MM-DD HH:mm:ss\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319\n        },\n        __self: this\n      }))), React.createElement(_Form.Item, {\n        style: {\n          float: \"right\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326\n        },\n        __self: this\n      }, React.createElement(_Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        style: {\n          width: 76\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 327\n        },\n        __self: this\n      }, \"\\u786E\\u5B9A\")))), React.createElement(\"div\", {\n        className: styles.chart,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 337\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"tradeOrder\",\n        className: styles.chartBox,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 338\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        id: \"cancelTradeOrder\",\n        className: styles.chartBox,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 339\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        id: \"dealTradeOrder\",\n        className: styles.chartBox,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 343\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return RegularWay;\n}(React.PureComponent); // export default Form.create()(RegularWay);\n\n\nvar mapStateToProps = function mapStateToProps(state, ownProps) {\n  return {\n    path: state.RouterModel.path\n  };\n};\n\nexport default connect(mapStateToProps, null)(_Form.create()(RegularWay));","map":{"version":3,"sources":["D:/company/algo-manage/src/algo/modules/tradeStatistics/pages/regularWay/index.js"],"names":["React","styles","echarts","connect","RangePicker","Option","RegularWay","state","numberText","userList","handleSubmit","e","preventDefault","props","form","validateFields","err","values","noTime","length","params","securityId","uuserId","countWay","startTime","Date","parse","endTime","setState","getData","count","http","post","url","data","then","res","code","message","error","echartLen","Object","keys","forEach","item","generateChart","list","type","lineObj","tradeOrder","name","color","cancelTradeOrder","dealTradeOrder","isNull","option","title","top","left","text","textStyle","fontSize","fontWeight","rich","a","backgroundColor","height","width","tooltip","trigger","boxShadow","borderColor","dataset","dimensions","source","grid","right","bottom","containLabel","xAxis","boundaryGap","splitLine","show","lineStyle","axisLabel","axisTick","axisLine","axisPointer","yAxis","nameLocation","nameTextStyle","min","max","align","series","smooth","showSymbol","itemStyle","normal","areaStyle","graphic","LinearGradient","offset","shadowColor","shadowBlur","myChart","init","document","getElementById","setOption","resize","chartResize","domList","getSelectList","get","res3","window","cpuResize","path","addEventListener","removeEventListener","getFieldDecorator","children","map","d","id","userName","container","search","initialValue","input","toLowerCase","indexOf","marginLeft","float","chart","chartBox","PureComponent","mapStateToProps","ownProps","RouterModel","create"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport styles from \"./style.module.less\";\r\nimport echarts from \"echarts\";\r\nimport {\r\n    TimePicker,\r\n    Form,\r\n    Button,\r\n    Icon,\r\n    DatePicker,\r\n    Select,\r\n    Input,\r\n} from \"antd\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst { RangePicker } = DatePicker;\r\nconst { Option } = Select;\r\nclass RegularWay extends React.PureComponent {\r\n    state = { numberText: \"笔\", userList: [] };\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.form.validateFields((err, values) => {\r\n            if (!err) {\r\n                let noTime = values[\"pickerTime\"].length < 1;\r\n                let params = {\r\n                    securityId: values.securityId,\r\n                    uuserId: values.uuserId,\r\n                    countWay: values.countWay,\r\n                    startTime: noTime\r\n                        ? \"\"\r\n                        : Date.parse(values[\"pickerTime\"][0]) * 1000,\r\n                    endTime: noTime\r\n                        ? \"\"\r\n                        : Date.parse(values[\"pickerTime\"][1]) * 1000,\r\n                };\r\n                this.setState({\r\n                    numberText: values.countWay == \"0\" ? \"笔\" : \"元\",\r\n                });\r\n                this.getData(params);\r\n            }\r\n        });\r\n    };\r\n    getData = (params, count = 0) => {\r\n        http.post({\r\n            url: \"/statistics/trade\",\r\n            data: params,\r\n        }).then((res) => {\r\n            if (res.code == 0) {\r\n                if (res.data.length == 0) {\r\n                    message.error(\"该时间段暂无数据\");\r\n                } else {\r\n                    let data = res.data;\r\n                    let echartLen = Object.keys(data);\r\n                    echartLen.forEach((item) => {\r\n                        this.generateChart(data[item], item);\r\n                    });\r\n                }\r\n            } else {\r\n                message.error(\"服务异常\");\r\n            }\r\n        });\r\n    };\r\n    generateChart = (list, type) => {\r\n        let lineObj = {\r\n            tradeOrder: { name: \"普通单信息\", color: \"#F78B7F\" },\r\n            cancelTradeOrder: { name: \"撤单信息\", color: \"#FFD747\" },\r\n            dealTradeOrder: { name: \"成交信息\", color: \"#72DF5A\" },\r\n        };\r\n        let isNull = list.length ? false : true;\r\n        let option = {\r\n            title: {\r\n                top: \"12px\",\r\n                left: \"32px\",\r\n                text: \"{a|}  \" + lineObj[type].name,\r\n                textStyle: {\r\n                    color: \"#333333\",\r\n                    fontSize: 14,\r\n                    fontWeight: 500,\r\n                    rich: {\r\n                        a: {\r\n                            backgroundColor: \"#3281FF\",\r\n                            height: 10,\r\n                            width: 2,\r\n                        },\r\n                    },\r\n                },\r\n            },\r\n            textStyle: {\r\n                color: \"#333\",\r\n            },\r\n            tooltip: {\r\n                trigger: \"axis\",\r\n                backgroundColor: \"#1F2329\",\r\n                boxShadow: \"0px 2px 8px 0px rgba(0, 0, 0, 0.15)\",\r\n                borderColor: \"#1F2329\",\r\n                textStyle: {\r\n                    color: \"#fff\",\r\n                },\r\n            },\r\n            dataset: {\r\n                dimensions: [\"x\", \"y\"],\r\n                source: list,\r\n            },\r\n            grid: {\r\n                left: \"34px\",\r\n                right: \"5%\",\r\n                bottom: \"24px\",\r\n                top: \"75px\",\r\n                containLabel: true,\r\n            },\r\n            xAxis: {\r\n                type: \"category\",\r\n                boundaryGap: false,\r\n                splitLine: {\r\n                    show: true,\r\n                    lineStyle: {\r\n                        color: \"#E9E9E9\",\r\n                        type: \"dashed\",\r\n                    },\r\n                },\r\n                axisLabel: {\r\n                    // interval: 0,\r\n                    // rotate: 30,\r\n                    // showMaxLabel: true,\r\n                },\r\n                axisTick: {\r\n                    show: true, //显示X轴刻度\r\n                    lineStyle: {\r\n                        color: \"#E9E9E9\",\r\n                    },\r\n                },\r\n                axisLine: {\r\n                    // 刻度线的颜色\r\n                    show: false,\r\n                },\r\n                axisPointer: {\r\n                    type: \"line\",\r\n                    lineStyle: { color: \"#BDBEBF\" },\r\n                },\r\n            },\r\n            yAxis: [\r\n                {\r\n                    type: \"value\",\r\n                    name: `单位：(${this.state.numberText})`,\r\n                    nameLocation: \"end\",\r\n                    axisLine: {\r\n                        show: false,\r\n                    },\r\n                    nameTextStyle: {\r\n                        color: \"#666\",\r\n                    },\r\n                    axisTick: {\r\n                        show: false, //隐藏X轴刻度\r\n                    },\r\n                    min: isNull ? 0 : null,\r\n                    max: isNull ? 100 : null,\r\n                    splitLine: {\r\n                        show: true,\r\n                        lineStyle: {\r\n                            color: \"#E9E9E9\",\r\n                            type: \"dashed\",\r\n                        },\r\n                    },\r\n                    // nameLocation: \"200px\",\r\n                    nameTextStyle: {\r\n                        align: \"center\",\r\n                        // padding: [0, 0, 0, 20],\r\n                    },\r\n                },\r\n            ],\r\n            series: [\r\n                {\r\n                    name: \"普通单数\",\r\n                    type: \"line\",\r\n                    smooth: true,\r\n                    showSymbol: false,\r\n                    // symbol: \"circle\",\r\n                    itemStyle: {\r\n                        normal: {\r\n                            color: lineObj[type].color,\r\n                        },\r\n                    },\r\n                    areaStyle: {\r\n                        normal: {\r\n                            color: new echarts.graphic.LinearGradient(\r\n                                0,\r\n                                0,\r\n                                0,\r\n                                1,\r\n                                [\r\n                                    {\r\n                                        offset: 0,\r\n                                        color: lineObj[type].color,\r\n                                    },\r\n                                    {\r\n                                        offset: 1,\r\n                                        color: \"rgba(255,255,255,0)\",\r\n                                    },\r\n                                ],\r\n                                false\r\n                            ),\r\n                            shadowColor: \"rgba(0, 0, 0, 0.1)\",\r\n                            shadowBlur: 10,\r\n                        },\r\n                    },\r\n                },\r\n            ],\r\n        };\r\n        var myChart = echarts.init(document.getElementById(type));\r\n        myChart.setOption(option);\r\n        myChart.resize();\r\n    };\r\n    chartResize = () => {\r\n        let domList = [\"tradeOrder\", \"cancelTradeOrder\", \"dealTradeOrder\"];\r\n        domList.forEach((item) => {\r\n            echarts.init(document.getElementById(item)).resize();\r\n        });\r\n    };\r\n    componentDidMount() {\r\n        this.getData({\r\n            securityId: \"\",\r\n            uuserId: \"\",\r\n            startTime: \"\",\r\n            endTime: \"\",\r\n            countWay: \"0\",\r\n        });\r\n        this.getSelectList();\r\n    }\r\n    getSelectList = () => {\r\n        // 用户\r\n        http.get({\r\n            url: \"/user/listAll\",\r\n        }).then((res3) => {\r\n            this.setState({\r\n                userList: res3.data,\r\n            });\r\n        });\r\n        // });\r\n    };\r\n    render() {\r\n        window.cpuResize = this.chartResize;\r\n        if (this.props.path == \"/main/tradeStatistics/regularWay\") {\r\n            window.addEventListener(\"resize\", window.cpuResize);\r\n        } else {\r\n            window.removeEventListener(\"resize\", window.cpuResize);\r\n        }\r\n        const { getFieldDecorator } = this.props.form;\r\n        const { userList } = this.state;\r\n        const children = userList.map((d) => (\r\n            <Option key={d.id}>{d.userName}</Option>\r\n        ));\r\n        return (\r\n            <div className={styles.container}>\r\n                <div className={styles.search}>\r\n                    <Form layout=\"inline\" onSubmit={this.handleSubmit}>\r\n                        <Form.Item>\r\n                            {getFieldDecorator(\"countWay\", {\r\n                                initialValue: \"0\",\r\n                            })(\r\n                                <Select\r\n                                    showSearch\r\n                                    style={{ width: 160 }}\r\n                                    placeholder=\"选择单位\"\r\n                                    optionFilterProp=\"children\"\r\n                                    filterOption={(input, option) =>\r\n                                        option.props.children\r\n                                            .toLowerCase()\r\n                                            .indexOf(input.toLowerCase()) >= 0\r\n                                    }\r\n                                >\r\n                                    <Option value=\"0\">笔数</Option>\r\n                                    <Option value=\"1\">金额</Option>\r\n                                </Select>\r\n                            )}\r\n                        </Form.Item>\r\n                        <Form.Item style={{ marginLeft: \"12px\" }}>\r\n                            {getFieldDecorator(\"securityId\", {\r\n                                initialValue: \"\",\r\n                            })(\r\n                                <Input placeholder=\"请输入证券代码\" />\r\n                                // <Select\r\n                                //     showSearch\r\n                                //     style={{ width: 160 }}\r\n                                //     placeholder=\"选择股票\"\r\n                                //     optionFilterProp=\"children\"\r\n                                //     filterOption={(input, option) =>\r\n                                //         option.props.children\r\n                                //             .toLowerCase()\r\n                                //             .indexOf(input.toLowerCase()) >= 0\r\n                                //     }\r\n                                // >\r\n                                //     <Option value=\"\">全部股票</Option>\r\n                                //     <Option value=\"000001\">平安银行</Option>\r\n                                // </Select>\r\n                            )}\r\n                        </Form.Item>\r\n                        <Form.Item style={{ marginLeft: \"12px\" }}>\r\n                            {getFieldDecorator(\"uuserId\")(\r\n                                // <Input placeholder=\"\" />\r\n                                <Select\r\n                                    allowClear={true}\r\n                                    showSearch\r\n                                    style={{ width: 160 }}\r\n                                    placeholder=\"请输入用户ID\"\r\n                                    optionFilterProp=\"children\"\r\n                                    filterOption={(input, option) =>\r\n                                        option.props.children\r\n                                            .toLowerCase()\r\n                                            .indexOf(input.toLowerCase()) >= 0\r\n                                    }\r\n                                >\r\n                                    {children}\r\n                                </Select>\r\n                            )}\r\n                        </Form.Item>\r\n                        <Form.Item style={{ marginLeft: \"12px\" }}>\r\n                            {getFieldDecorator(\"pickerTime\", {\r\n                                initialValue: [],\r\n                            })(\r\n                                <RangePicker\r\n                                    style={{ width: 432 }}\r\n                                    showTime\r\n                                    format=\"YYYY-MM-DD HH:mm:ss\"\r\n                                />\r\n                            )}\r\n                        </Form.Item>\r\n                        <Form.Item style={{ float: \"right\" }}>\r\n                            <Button\r\n                                type=\"primary\"\r\n                                htmlType=\"submit\"\r\n                                style={{ width: 76 }}\r\n                            >\r\n                                确定\r\n                            </Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </div>\r\n                <div className={styles.chart}>\r\n                    <div id=\"tradeOrder\" className={styles.chartBox}></div>\r\n                    <div\r\n                        id=\"cancelTradeOrder\"\r\n                        className={styles.chartBox}\r\n                    ></div>\r\n                    <div id=\"dealTradeOrder\" className={styles.chartBox}></div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n// export default Form.create()(RegularWay);\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        path: state.RouterModel.path,\r\n    };\r\n};\r\nexport default connect(mapStateToProps, null)(Form.create()(RegularWay));\r\n"]},"metadata":{},"sourceType":"module"}