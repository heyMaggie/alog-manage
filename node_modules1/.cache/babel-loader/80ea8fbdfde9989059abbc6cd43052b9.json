{"ast":null,"code":"import \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/form/style\";\nimport _Form from \"antd/lib/form\";\nimport _classCallCheck from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport \"antd/lib/select/style\";\nimport _Select from \"antd/lib/select\";\nimport \"antd/lib/date-picker/style\";\nimport _DatePicker from \"antd/lib/date-picker\";\nvar _jsxFileName = \"D:\\\\company\\\\algo-manage\\\\src\\\\algo\\\\modules\\\\tradeStatistics\\\\pages\\\\algorithmicTrad\\\\index.js\";\nimport React from \"react\";\nimport styles from \"./style.module.less\";\nimport echarts from \"echarts\";\nvar RangePicker = _DatePicker.RangePicker;\nvar Option = _Select.Option;\nimport moment from \"moment\";\nimport { lte } from \"semver\";\n\nvar Ram2 =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(Ram2, _React$PureComponent);\n\n  function Ram2() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Ram2);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Ram2)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      echatObj: {}\n    };\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n\n      _this.props.form.validateFields(function (err, values) {\n        if (!err) {\n          var noTime = values[\"pickerTime\"].length < 1;\n          var params = {\n            securityId: values.securityId,\n            algorithmId: values.algorithmId,\n            uuserId: values.uuserId,\n            startTime: noTime ? \"\" : Date.parse(values[\"pickerTime\"][0]),\n            endTime: noTime ? \"\" : Date.parse(values[\"pickerTime\"][1])\n          };\n\n          _this.getData(params);\n        }\n      });\n    };\n\n    _this.getData = function (params) {\n      var count = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      http.post({\n        url: \"/statistics/algo\",\n        data: params\n      }).then(function (res) {\n        if (res.code == 0) {\n          // this.setState({\n          //     echatObj: res.data,\n          // });\n          // console.log(this.state.echatObj, 9999);\n          var data = {\n            algoOrder: [{\n              x: \"1970/01/01 08:00\",\n              y: 1\n            }, {\n              x: \"2022/06/21 16:46\",\n              y: 4\n            }],\n            cancelAlgoOrder: [],\n            childOrder: [],\n            dealAlgoOrder: []\n          };\n          var echartLen = Object.keys(data);\n          echartLen.forEach(function (item) {\n            _this.generateChart(data[item], item);\n          });\n        } else {\n          message.error(\"服务异常\");\n        }\n      });\n    };\n\n    _this.generateChart = function (list, type) {\n      var lineObj = {\n        algoOrder: {\n          color: \"rgba(50, 129, 255, 0.2)\"\n        },\n        childOrder: {\n          color: \"red\"\n        },\n        cancelAlgoOrder: {\n          color: \"red\"\n        },\n        dealAlgoOrder: {\n          color: \"red\"\n        }\n      };\n      console.log(lineObj[type][color], 999); // let option = {\n      //     textStyle: {\n      //         color: \"#333\",\n      //     },\n      //     tooltip: {\n      //         trigger: \"axis\",\n      //         backgroundColor: \"#1F2329\",\n      //         boxShadow: \"0px 2px 8px 0px rgba(0, 0, 0, 0.15)\",\n      //         borderColor: \"#1F2329\",\n      //         textStyle: {\n      //             color: \"#fff\",\n      //         },\n      //     },\n      //     dataset: {\n      //         dimensions: [\"x\", \"y\"],\n      //         source: list,\n      //     },\n      //     grid: {\n      //         left: \"25px\",\n      //         right: \"5px\",\n      //         bottom: \"9%\",\n      //         top: \"33px\",\n      //         containLabel: true,\n      //     },\n      //     xAxis: {\n      //         type: \"category\",\n      //         boundaryGap: false,\n      //         splitLine: {\n      //             show: true,\n      //             lineStyle: {\n      //                 color: \"#E9E9E9\",\n      //                 type: \"dashed\",\n      //             },\n      //         },\n      //         axisLabel: {\n      //             // interval: 0,\n      //             // rotate: 30,\n      //         },\n      //         axisTick: {\n      //             show: true, //显示X轴刻度\n      //             lineStyle: {\n      //                 color: \"#E9E9E9\",\n      //             },\n      //         },\n      //         axisLine: {\n      //             // 刻度线的颜色\n      //             show: false,\n      //         },\n      //         axisPointer: {\n      //             type: \"line\",\n      //             lineStyle: { color: \"#BDBEBF\" },\n      //         },\n      //     },\n      //     yAxis: [\n      //         {\n      //             type: \"value\",\n      //             name: \"单位：（个）\",\n      //             nameLocation: \"end\",\n      //             axisLine: {\n      //                 show: false,\n      //             },\n      //             nameTextStyle: {\n      //                 color: \"#666\",\n      //             },\n      //             axisTick: {\n      //                 show: false, //隐藏X轴刻度\n      //             },\n      //             splitLine: {\n      //                 show: true,\n      //                 lineStyle: {\n      //                     color: \"#E9E9E9\",\n      //                     type: \"dashed\",\n      //                 },\n      //             },\n      //             nameTextStyle: {\n      //                 padding: [0, 0, 0, 40],\n      //             },\n      //         },\n      //     ],\n      //     series: [\n      //         {\n      //             name: \"算法单数\",\n      //             type: \"line\",\n      //             smooth: true,\n      //             showSymbol: false,\n      //             // symbol: \"circle\",\n      //             itemStyle: {\n      //                 normal: {\n      //                     color: \"#65A6FF\",\n      //                 },\n      //             },\n      //             areaStyle: {\n      //                 normal: {\n      //                     color: new echarts.graphic.LinearGradient(\n      //                         0,\n      //                         0,\n      //                         0,\n      //                         1,\n      //                         [\n      //                             {\n      //                                 offset: 0,\n      //                                 color: lineObj[type][color],\n      //                             },\n      //                             {\n      //                                 offset: 1,\n      //                                 color: \"rgba(255,255,255,0)\",\n      //                             },\n      //                         ],\n      //                         false\n      //                     ),\n      //                     shadowColor: \"rgba(0, 0, 0, 0.1)\",\n      //                     shadowBlur: 10,\n      //                 },\n      //             },\n      //         },\n      //     ],\n      // };\n      // var myChart = echarts.init(document.getElementById(name));\n      // myChart.setOption(option);\n      // myChart.resize();\n    };\n\n    return _this;\n  }\n\n  _createClass(Ram2, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getData({\n        securityId: \"\",\n        algorithmId: \"\",\n        uuserId: \"\",\n        startTime: \"\",\n        endTime: \"\"\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var getFieldDecorator = this.props.form.getFieldDecorator;\n      return React.createElement(\"div\", {\n        className: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: styles.search,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, React.createElement(_Form, {\n        layout: \"inline\",\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, React.createElement(_Form.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, getFieldDecorator(\"hostId\", {\n        initialValue: \"1\"\n      })(React.createElement(_Select, {\n        showSearch: true,\n        style: {\n          width: 160\n        },\n        placeholder: \"\\u9009\\u62E9\\u5355\\u4F4D\",\n        optionFilterProp: \"number\",\n        filterOption: function filterOption(input, option) {\n          return option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }, React.createElement(Option, {\n        value: \"1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }, \"\\u6570\\u91CF\"), React.createElement(Option, {\n        value: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }, \"\\u7B14\\u6570\"), React.createElement(Option, {\n        value: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, \"\\u91D1\\u989D\")))), React.createElement(_Form.Item, {\n        style: {\n          marginLeft: \"12px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }, getFieldDecorator(\"algorithmId\", {\n        initialValue: \"\"\n      })(React.createElement(_Select, {\n        showSearch: true,\n        style: {\n          width: 160\n        },\n        placeholder: \"\\u9009\\u62E9\\u80A1\\u7968\",\n        optionFilterProp: \"children\",\n        filterOption: function filterOption(input, option) {\n          return option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }, React.createElement(Option, {\n        value: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      }, \"\\u5168\\u90E8\\u80A1\\u7968\"), React.createElement(Option, {\n        value: \"1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250\n        },\n        __self: this\n      }, \"80\")))), React.createElement(_Form.Item, {\n        style: {\n          marginLeft: \"12px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254\n        },\n        __self: this\n      }, getFieldDecorator(\"length\", {\n        initialValue: \"\"\n      })(React.createElement(_Select, {\n        showSearch: true,\n        style: {\n          width: 160\n        },\n        placeholder: \"\\u9009\\u62E9\\u7B97\\u6CD5\",\n        optionFilterProp: \"children\",\n        filterOption: function filterOption(input, option) {\n          return option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258\n        },\n        __self: this\n      }, React.createElement(Option, {\n        value: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269\n        },\n        __self: this\n      }, \"\\u5168\\u90E8\\u7B97\\u6CD5\"), React.createElement(Option, {\n        value: \"1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270\n        },\n        __self: this\n      }, \"\\u65E5\\u5185\\u56DE\\u8F6C\")))), React.createElement(_Form.Item, {\n        style: {\n          marginLeft: \"12px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274\n        },\n        __self: this\n      }, getFieldDecorator(\"uuserId\", {\n        initialValue: \"\"\n      })(React.createElement(_Select, {\n        showSearch: true,\n        style: {\n          width: 160\n        },\n        placeholder: \"\\u9009\\u62E9\\u7528\\u6237\",\n        optionFilterProp: \"children\",\n        filterOption: function filterOption(input, option) {\n          return option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278\n        },\n        __self: this\n      }, React.createElement(Option, {\n        value: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289\n        },\n        __self: this\n      }, \"\\u5168\\u90E8\\u7528\\u6237\")))), React.createElement(_Form.Item, {\n        style: {\n          marginLeft: \"12px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293\n        },\n        __self: this\n      }, getFieldDecorator(\"pickerTime\")(React.createElement(RangePicker, {\n        style: {\n          width: 432\n        },\n        showTime: true,\n        format: \"YYYY-MM-DD HH:mm:ss\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295\n        },\n        __self: this\n      }))), React.createElement(_Form.Item, {\n        style: {\n          float: \"right\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302\n        },\n        __self: this\n      }, React.createElement(_Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        style: {\n          width: 76\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303\n        },\n        __self: this\n      }, \"\\u786E\\u5B9A\")))), React.createElement(\"div\", {\n        className: styles.chart,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"algoOrder\",\n        className: styles.chartBox,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        id: \"childOrder\",\n        className: styles.chartBox,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        id: \"cancelAlgoOrder\",\n        className: styles.chartBox,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        id: \"dealAlgoOrder\",\n        className: styles.chartBox,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Ram2;\n}(React.PureComponent);\n\nexport default _Form.create()(Ram2);","map":{"version":3,"sources":["D:/company/algo-manage/src/algo/modules/tradeStatistics/pages/algorithmicTrad/index.js"],"names":["React","styles","echarts","RangePicker","Option","moment","lte","Ram2","state","echatObj","handleSubmit","e","preventDefault","props","form","validateFields","err","values","noTime","length","params","securityId","algorithmId","uuserId","startTime","Date","parse","endTime","getData","count","http","post","url","data","then","res","code","algoOrder","x","y","cancelAlgoOrder","childOrder","dealAlgoOrder","echartLen","Object","keys","forEach","item","generateChart","message","error","list","type","lineObj","color","console","log","getFieldDecorator","container","search","initialValue","width","input","option","children","toLowerCase","indexOf","marginLeft","float","chart","chartBox","PureComponent","create"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport styles from \"./style.module.less\";\r\nimport echarts from \"echarts\";\r\nimport {\r\n    SearchForm,\r\n    Input,\r\n    TimePicker,\r\n    Form,\r\n    Button,\r\n    Icon,\r\n    DatePicker,\r\n    Select,\r\n} from \"antd\";\r\n\r\nconst { RangePicker } = DatePicker;\r\nconst { Option } = Select;\r\nimport moment from \"moment\";\r\nimport { lte } from \"semver\";\r\nclass Ram2 extends React.PureComponent {\r\n    state = {\r\n        echatObj: {},\r\n    };\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.form.validateFields((err, values) => {\r\n            if (!err) {\r\n                let noTime = values[\"pickerTime\"].length < 1;\r\n                let params = {\r\n                    securityId: values.securityId,\r\n                    algorithmId: values.algorithmId,\r\n                    uuserId: values.uuserId,\r\n                    startTime: noTime\r\n                        ? \"\"\r\n                        : Date.parse(values[\"pickerTime\"][0]),\r\n                    endTime: noTime ? \"\" : Date.parse(values[\"pickerTime\"][1]),\r\n                };\r\n                this.getData(params);\r\n            }\r\n        });\r\n    };\r\n    getData = (params, count = 0) => {\r\n        http.post({\r\n            url: \"/statistics/algo\",\r\n            data: params,\r\n        }).then((res) => {\r\n            if (res.code == 0) {\r\n                // this.setState({\r\n                //     echatObj: res.data,\r\n                // });\r\n                // console.log(this.state.echatObj, 9999);\r\n                let data = {\r\n                    algoOrder: [\r\n                        { x: \"1970/01/01 08:00\", y: 1 },\r\n                        { x: \"2022/06/21 16:46\", y: 4 },\r\n                    ],\r\n                    cancelAlgoOrder: [],\r\n                    childOrder: [],\r\n                    dealAlgoOrder: [],\r\n                };\r\n                let echartLen = Object.keys(data);\r\n                echartLen.forEach((item) => {\r\n                    this.generateChart(data[item], item);\r\n                });\r\n            } else {\r\n                message.error(\"服务异常\");\r\n            }\r\n        });\r\n    };\r\n    generateChart = (list, type) => {\r\n        let lineObj = {\r\n            algoOrder: { color: \"rgba(50, 129, 255, 0.2)\" },\r\n            childOrder: { color: \"red\" },\r\n            cancelAlgoOrder: { color: \"red\" },\r\n            dealAlgoOrder: { color: \"red\" },\r\n        };\r\n        console.log(lineObj[type][color], 999);\r\n        // let option = {\r\n        //     textStyle: {\r\n        //         color: \"#333\",\r\n        //     },\r\n        //     tooltip: {\r\n        //         trigger: \"axis\",\r\n        //         backgroundColor: \"#1F2329\",\r\n        //         boxShadow: \"0px 2px 8px 0px rgba(0, 0, 0, 0.15)\",\r\n        //         borderColor: \"#1F2329\",\r\n        //         textStyle: {\r\n        //             color: \"#fff\",\r\n        //         },\r\n        //     },\r\n        //     dataset: {\r\n        //         dimensions: [\"x\", \"y\"],\r\n        //         source: list,\r\n        //     },\r\n        //     grid: {\r\n        //         left: \"25px\",\r\n        //         right: \"5px\",\r\n        //         bottom: \"9%\",\r\n        //         top: \"33px\",\r\n        //         containLabel: true,\r\n        //     },\r\n        //     xAxis: {\r\n        //         type: \"category\",\r\n        //         boundaryGap: false,\r\n        //         splitLine: {\r\n        //             show: true,\r\n        //             lineStyle: {\r\n        //                 color: \"#E9E9E9\",\r\n        //                 type: \"dashed\",\r\n        //             },\r\n        //         },\r\n        //         axisLabel: {\r\n        //             // interval: 0,\r\n        //             // rotate: 30,\r\n        //         },\r\n        //         axisTick: {\r\n        //             show: true, //显示X轴刻度\r\n        //             lineStyle: {\r\n        //                 color: \"#E9E9E9\",\r\n        //             },\r\n        //         },\r\n        //         axisLine: {\r\n        //             // 刻度线的颜色\r\n        //             show: false,\r\n        //         },\r\n        //         axisPointer: {\r\n        //             type: \"line\",\r\n        //             lineStyle: { color: \"#BDBEBF\" },\r\n        //         },\r\n        //     },\r\n        //     yAxis: [\r\n        //         {\r\n        //             type: \"value\",\r\n        //             name: \"单位：（个）\",\r\n        //             nameLocation: \"end\",\r\n        //             axisLine: {\r\n        //                 show: false,\r\n        //             },\r\n        //             nameTextStyle: {\r\n        //                 color: \"#666\",\r\n        //             },\r\n        //             axisTick: {\r\n        //                 show: false, //隐藏X轴刻度\r\n        //             },\r\n        //             splitLine: {\r\n        //                 show: true,\r\n        //                 lineStyle: {\r\n        //                     color: \"#E9E9E9\",\r\n        //                     type: \"dashed\",\r\n        //                 },\r\n        //             },\r\n        //             nameTextStyle: {\r\n        //                 padding: [0, 0, 0, 40],\r\n        //             },\r\n        //         },\r\n        //     ],\r\n        //     series: [\r\n        //         {\r\n        //             name: \"算法单数\",\r\n        //             type: \"line\",\r\n        //             smooth: true,\r\n        //             showSymbol: false,\r\n        //             // symbol: \"circle\",\r\n        //             itemStyle: {\r\n        //                 normal: {\r\n        //                     color: \"#65A6FF\",\r\n        //                 },\r\n        //             },\r\n        //             areaStyle: {\r\n        //                 normal: {\r\n        //                     color: new echarts.graphic.LinearGradient(\r\n        //                         0,\r\n        //                         0,\r\n        //                         0,\r\n        //                         1,\r\n        //                         [\r\n        //                             {\r\n        //                                 offset: 0,\r\n        //                                 color: lineObj[type][color],\r\n        //                             },\r\n        //                             {\r\n        //                                 offset: 1,\r\n        //                                 color: \"rgba(255,255,255,0)\",\r\n        //                             },\r\n        //                         ],\r\n        //                         false\r\n        //                     ),\r\n        //                     shadowColor: \"rgba(0, 0, 0, 0.1)\",\r\n        //                     shadowBlur: 10,\r\n        //                 },\r\n        //             },\r\n        //         },\r\n        //     ],\r\n        // };\r\n        // var myChart = echarts.init(document.getElementById(name));\r\n        // myChart.setOption(option);\r\n        // myChart.resize();\r\n    };\r\n    componentDidMount() {\r\n        this.getData({\r\n            securityId: \"\",\r\n            algorithmId: \"\",\r\n            uuserId: \"\",\r\n            startTime: \"\",\r\n            endTime: \"\",\r\n        });\r\n    }\r\n    render() {\r\n        const { getFieldDecorator } = this.props.form;\r\n        return (\r\n            <div className={styles.container}>\r\n                <div className={styles.search}>\r\n                    <Form layout=\"inline\" onSubmit={this.handleSubmit}>\r\n                        <Form.Item>\r\n                            {getFieldDecorator(\"hostId\", {\r\n                                initialValue: \"1\",\r\n                            })(\r\n                                <Select\r\n                                    showSearch\r\n                                    style={{ width: 160 }}\r\n                                    placeholder=\"选择单位\"\r\n                                    optionFilterProp=\"number\"\r\n                                    filterOption={(input, option) =>\r\n                                        option.props.children\r\n                                            .toLowerCase()\r\n                                            .indexOf(input.toLowerCase()) >= 0\r\n                                    }\r\n                                >\r\n                                    <Option value=\"1\">数量</Option>\r\n                                    <Option value=\"2\">笔数</Option>\r\n                                    <Option value=\"3\">金额</Option>\r\n                                </Select>\r\n                            )}\r\n                        </Form.Item>\r\n                        <Form.Item style={{ marginLeft: \"12px\" }}>\r\n                            {getFieldDecorator(\"algorithmId\", {\r\n                                initialValue: \"\",\r\n                            })(\r\n                                <Select\r\n                                    showSearch\r\n                                    style={{ width: 160 }}\r\n                                    placeholder=\"选择股票\"\r\n                                    optionFilterProp=\"children\"\r\n                                    filterOption={(input, option) =>\r\n                                        option.props.children\r\n                                            .toLowerCase()\r\n                                            .indexOf(input.toLowerCase()) >= 0\r\n                                    }\r\n                                >\r\n                                    <Option value=\"\">全部股票</Option>\r\n                                    <Option value=\"1\">80</Option>\r\n                                </Select>\r\n                            )}\r\n                        </Form.Item>\r\n                        <Form.Item style={{ marginLeft: \"12px\" }}>\r\n                            {getFieldDecorator(\"length\", {\r\n                                initialValue: \"\",\r\n                            })(\r\n                                <Select\r\n                                    showSearch\r\n                                    style={{ width: 160 }}\r\n                                    placeholder=\"选择算法\"\r\n                                    optionFilterProp=\"children\"\r\n                                    filterOption={(input, option) =>\r\n                                        option.props.children\r\n                                            .toLowerCase()\r\n                                            .indexOf(input.toLowerCase()) >= 0\r\n                                    }\r\n                                >\r\n                                    <Option value=\"\">全部算法</Option>\r\n                                    <Option value=\"1\">日内回转</Option>\r\n                                </Select>\r\n                            )}\r\n                        </Form.Item>\r\n                        <Form.Item style={{ marginLeft: \"12px\" }}>\r\n                            {getFieldDecorator(\"uuserId\", {\r\n                                initialValue: \"\",\r\n                            })(\r\n                                <Select\r\n                                    showSearch\r\n                                    style={{ width: 160 }}\r\n                                    placeholder=\"选择用户\"\r\n                                    optionFilterProp=\"children\"\r\n                                    filterOption={(input, option) =>\r\n                                        option.props.children\r\n                                            .toLowerCase()\r\n                                            .indexOf(input.toLowerCase()) >= 0\r\n                                    }\r\n                                >\r\n                                    <Option value=\"\">全部用户</Option>\r\n                                </Select>\r\n                            )}\r\n                        </Form.Item>\r\n                        <Form.Item style={{ marginLeft: \"12px\" }}>\r\n                            {getFieldDecorator(\"pickerTime\")(\r\n                                <RangePicker\r\n                                    style={{ width: 432 }}\r\n                                    showTime\r\n                                    format=\"YYYY-MM-DD HH:mm:ss\"\r\n                                />\r\n                            )}\r\n                        </Form.Item>\r\n                        <Form.Item style={{ float: \"right\" }}>\r\n                            <Button\r\n                                type=\"primary\"\r\n                                htmlType=\"submit\"\r\n                                style={{ width: 76 }}\r\n                            >\r\n                                确定\r\n                            </Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </div>\r\n                <div className={styles.chart}>\r\n                    <div id=\"algoOrder\" className={styles.chartBox}></div>\r\n                    <div id=\"childOrder\" className={styles.chartBox}></div>\r\n                    <div id=\"cancelAlgoOrder\" className={styles.chartBox}></div>\r\n                    <div id=\"dealAlgoOrder\" className={styles.chartBox}></div>\r\n                    {/* <div\r\n                        id=\"main_1\"\r\n                        style={{ width: \"48%\", height: \"500px\", float: \"left\" }}\r\n                    ></div>\r\n                    <div\r\n                        id=\"main_2\"\r\n                        style={{\r\n                            width: \"48%\",\r\n                            height: \"500px\",\r\n                            float: \"right\",\r\n                        }}\r\n                    ></div> */}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Form.create()(Ram2);\r\n"]},"metadata":{},"sourceType":"module"}