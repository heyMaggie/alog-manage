{"ast":null,"code":"import _defineProperty from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport \"antd/lib/input/style\";\nimport _Input from \"antd/lib/input\";\nvar _jsxFileName = \"D:\\\\company\\\\algo-manage\\\\src\\\\algo\\\\modules\\\\oper_manage\\\\pages\\\\blacklist\\\\index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport CurdComponent from \"@/components/CurdComponent\";\n\nvar columns = function columns(params) {\n  return [{\n    title: \"序号\",\n    dataIndex: \"userName\",\n    key: \"userName\"\n  }, {\n    title: \"IP地址\",\n    dataIndex: \"accountId\",\n    key: \"accountId\"\n  }];\n};\n\nvar getInsertFormFields = function getInsertFormFields() {\n  return [{\n    label: \"IP地址\",\n    id: \"userName\",\n    initialValue: \"\",\n    rules: [{\n      required: true,\n      message: \"参数不能为空\"\n    }, {\n      validator: checkLength(20),\n      trigger: [\"change\", \"blur\"]\n    }],\n    component: React.createElement(_Input, {\n      placeholder: \"\\u8BF7\\u8F93\\u5165IP\\u5730\\u5740\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    })\n  }];\n};\n\nvar getUpdateFormFields = function getUpdateFormFields() {\n  return [{\n    label: \"IP地址\",\n    id: \"userName\",\n    initialValue: \"\",\n    rules: [{\n      required: true,\n      message: \"参数不能为空\"\n    }, {\n      validator: checkLength(20),\n      trigger: [\"change\", \"blur\"]\n    }],\n    component: React.createElement(_Input, {\n      placeholder: \"\\u8BF7\\u8F93\\u5165IP\\u5730\\u5740\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    })\n  }];\n};\n\nvar getSearchFormFields = function getSearchFormFields() {\n  return [{\n    label: \"IP地址\",\n    id: \"userName\",\n    component: React.createElement(_Input, {\n      placeholder: \"\\u8BF7\\u8F93\\u5165IP\\u5730\\u5740\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    })\n  }];\n};\n\nvar uoeSetting =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(uoeSetting, _React$PureComponent);\n\n  function uoeSetting() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, uoeSetting);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(uoeSetting)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      searchLoading: false,\n      selectRow: [],\n      info: [],\n      pagination: {\n        total: 0\n      }\n    };\n\n    _this.handleInsertRecord = function (fromData) {\n      console.log(\"新增接口\", fromData);\n      var params = {\n        UserName: fromData.userName,\n        AccountId: fromData.accountId,\n        Market: fromData.market / 1,\n        AccountType: fromData.accountType / 1,\n        AccountStatus: fromData.accountStatus / 1,\n        AssetAccount: fromData.assetAccount,\n        CustOrgid: fromData.custOrgid,\n        CustBranchid: fromData.custBranchid\n      };\n      http.post({\n        url: \"/stockHolder/addStockHolderInfo\",\n        data: params\n      }).then(function (res) {\n        var msg = res.message;\n\n        if (res.code == 0) {\n          message.success(msg); // this.getData();\n        } else if (res.code == 20000) {\n          message.error(msg.substring(msg.indexOf(\"[\") + 1, msg.lastIndexOf(\"]\")));\n        } else {\n          message.error(msg);\n        }\n\n        _this.isAction = true;\n      });\n    };\n\n    _this.handleUpdateRecord = function (_ref) {\n      var form = _ref.form;\n      console.log(form.getFieldsValue()); // return;\n\n      var fromData = form.getFieldsValue();\n      var params = {\n        Id: _this.record.id,\n        UserName: fromData.userName,\n        UuserId: _this.record.uuserId,\n        AccountId: fromData.accountId,\n        Market: fromData.market / 1,\n        AccountType: fromData.accountType / 1,\n        AccountStatus: fromData.accountStatus / 1,\n        AssetAccount: fromData.assetAccount,\n        CustOrgid: fromData.custOrgid,\n        CustBranchid: fromData.custBranchid\n      }; // 发送更新请求\n\n      http.post({\n        url: \"/stockHolder/updateStockHolderInfo\",\n        data: params\n      }).then(function (res) {\n        var msg = res.message;\n\n        if (res.code == 0) {\n          message.success(msg); // this.getData();\n        } else if (res.code == 20000) {\n          message.error(msg.substring(msg.indexOf(\"[\") + 1, msg.lastIndexOf(\"]\")));\n        } else {\n          message.error(msg);\n        }\n\n        _this.isAction = true;\n      });\n    };\n\n    _this.handleDeleteRecord = function (record) {\n      console.log(\"删除记录 \", record);\n    };\n\n    _this.setUpdateModal = function (_ref2) {\n      var form = _ref2.form,\n          record = _ref2.record;\n      // console.log(record, form);\n      _this.record = record;\n      form.setFieldsValue({\n        userName: record.userName,\n        market: record.market + \"\",\n        accountType: record.accountType + \"\",\n        accountId: record.accountId,\n        accountStatus: record.accountStatus + \"\",\n        assetAccount: record.assetAccount,\n        custOrgid: record.custOrgid,\n        custBranchid: record.custBranchid\n      });\n    };\n\n    _this.getData = function () {\n      var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var pagination = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n        current: 1,\n        pageSize: 13\n      };\n      params = _objectSpread({}, params, {\n        pageId: pagination.current,\n        pageNum: pagination.pageSize\n      });\n      http.post({\n        // url: \"/option/assetInfo/selectList\",\n        url: \"/stockHolder/list\",\n        data: params\n      }).then(function (res) {\n        console.log(res); //解析数据字典\n\n        if (res.data.records && res.data.records.length > 0) {\n          //parseDict(res.data.records);\n          parseDictValue(res.data.records);\n        } else {\n          message.info(\"查询结果为空\");\n        }\n\n        var pgn = {\n          current: res.data.current,\n          pageSize: pagination.pageSize,\n          total: res.data.total || 0\n        };\n\n        _this.setState({\n          info: res.data.records,\n          pagination: pgn\n        });\n      });\n    };\n\n    _this.handleSearch = function (params, pagination) {\n      _this.getData(params, pagination);\n    };\n\n    return _this;\n  }\n\n  _createClass(uoeSetting, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getData();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var scroll = {\n        x: 1000,\n        y: 445\n      };\n      var info = this.state.info;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }, React.createElement(CurdComponent // rowKey={\"index\"}\n      // isShowSearchForm={false}\n      // btnText2=\"查全部\"\n      , {\n        onSearchClick: this.handleSearch,\n        getSearchFormFields: getSearchFormFields // searchLoading={this.state.searchLoading}\n        ,\n        insertBtnText: \"新增\" // 不传 就没新增按钮\n        ,\n        getInsertFormFields: getInsertFormFields,\n        insertRecord: this.handleInsertRecord // col=\"2\"\n        ,\n        width: \"789px\",\n        pagination: this.state.pagination,\n        getUpdateFormFields: getUpdateFormFields,\n        setUpdateModal: this.setUpdateModal,\n        updateRecord: this.handleUpdateRecord // 不传 就没编辑\n        ,\n        deleteRecord: this.handleDeleteRecord // 不传 就没删除\n        ,\n        centered: true,\n        columns: columns,\n        dataSource: info,\n        scroll: scroll // rowSelection={rowSelection} //批量选择 操作\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        urlPrefix: \"/stockHolder\",\n        title: \"\\u80A1\\u4E1C\\u4FE1\\u606F\",\n        sucCallback: this.getData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return uoeSetting;\n}(React.PureComponent);\n\nexport { uoeSetting as default };","map":{"version":3,"sources":["D:/company/algo-manage/src/algo/modules/oper_manage/pages/blacklist/index.js"],"names":["React","CurdComponent","columns","params","title","dataIndex","key","getInsertFormFields","label","id","initialValue","rules","required","message","validator","checkLength","trigger","component","getUpdateFormFields","getSearchFormFields","uoeSetting","state","searchLoading","selectRow","info","pagination","total","handleInsertRecord","fromData","console","log","UserName","userName","AccountId","accountId","Market","market","AccountType","accountType","AccountStatus","accountStatus","AssetAccount","assetAccount","CustOrgid","custOrgid","CustBranchid","custBranchid","http","post","url","data","then","res","msg","code","success","error","substring","indexOf","lastIndexOf","isAction","handleUpdateRecord","form","getFieldsValue","Id","record","UuserId","uuserId","handleDeleteRecord","setUpdateModal","setFieldsValue","getData","current","pageSize","pageId","pageNum","records","length","parseDictValue","pgn","setState","handleSearch","scroll","x","y","PureComponent"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport CurdComponent from \"@/components/CurdComponent\";\r\nimport { Input } from \"antd\";\r\n\r\nconst columns = (params) => {\r\n    return [\r\n        {\r\n            title: \"序号\",\r\n            dataIndex: \"userName\",\r\n            key: \"userName\",\r\n        },\r\n        {\r\n            title: \"IP地址\",\r\n            dataIndex: \"accountId\",\r\n            key: \"accountId\",\r\n        },\r\n    ];\r\n};\r\nconst getInsertFormFields = () => {\r\n    return [\r\n        {\r\n            label: \"IP地址\",\r\n            id: \"userName\",\r\n            initialValue: \"\",\r\n            rules: [\r\n                {\r\n                    required: true,\r\n                    message: \"参数不能为空\",\r\n                },\r\n                {\r\n                    validator: checkLength(20),\r\n                    trigger: [\"change\", \"blur\"],\r\n                },\r\n            ],\r\n            component: <Input placeholder=\"请输入IP地址\" />,\r\n        },\r\n    ];\r\n};\r\nconst getUpdateFormFields = () => {\r\n    return [\r\n        {\r\n            label: \"IP地址\",\r\n            id: \"userName\",\r\n            initialValue: \"\",\r\n            rules: [\r\n                {\r\n                    required: true,\r\n                    message: \"参数不能为空\",\r\n                },\r\n                {\r\n                    validator: checkLength(20),\r\n                    trigger: [\"change\", \"blur\"],\r\n                },\r\n            ],\r\n            component: <Input placeholder=\"请输入IP地址\" />,\r\n        },\r\n    ];\r\n};\r\nlet getSearchFormFields = () => {\r\n    return [\r\n        {\r\n            label: \"IP地址\",\r\n            id: \"userName\",\r\n            component: <Input placeholder=\"请输入IP地址\" />,\r\n        },\r\n    ];\r\n};\r\nexport default class uoeSetting extends React.PureComponent {\r\n    state = {\r\n        searchLoading: false,\r\n        selectRow: [],\r\n        info: [],\r\n        pagination: { total: 0 },\r\n    };\r\n\r\n    //新增接口\r\n    handleInsertRecord = (fromData) => {\r\n        console.log(\"新增接口\", fromData);\r\n        let params = {\r\n            UserName: fromData.userName,\r\n            AccountId: fromData.accountId,\r\n            Market: fromData.market / 1,\r\n            AccountType: fromData.accountType / 1,\r\n            AccountStatus: fromData.accountStatus / 1,\r\n            AssetAccount: fromData.assetAccount,\r\n            CustOrgid: fromData.custOrgid,\r\n            CustBranchid: fromData.custBranchid,\r\n        };\r\n        http.post({\r\n            url: \"/stockHolder/addStockHolderInfo\",\r\n            data: params,\r\n        }).then((res) => {\r\n            let msg = res.message;\r\n            if (res.code == 0) {\r\n                message.success(msg);\r\n                // this.getData();\r\n            } else if (res.code == 20000) {\r\n                message.error(\r\n                    msg.substring(msg.indexOf(\"[\") + 1, msg.lastIndexOf(\"]\"))\r\n                );\r\n            } else {\r\n                message.error(msg);\r\n            }\r\n            this.isAction = true;\r\n        });\r\n    };\r\n    //更新记录\r\n    handleUpdateRecord = ({ form }) => {\r\n        console.log(form.getFieldsValue());\r\n        // return;\r\n        let fromData = form.getFieldsValue();\r\n        let params = {\r\n            Id: this.record.id,\r\n            UserName: fromData.userName,\r\n            UuserId: this.record.uuserId,\r\n            AccountId: fromData.accountId,\r\n            Market: fromData.market / 1,\r\n            AccountType: fromData.accountType / 1,\r\n            AccountStatus: fromData.accountStatus / 1,\r\n            AssetAccount: fromData.assetAccount,\r\n            CustOrgid: fromData.custOrgid,\r\n            CustBranchid: fromData.custBranchid,\r\n        };\r\n        // 发送更新请求\r\n        http.post({\r\n            url: \"/stockHolder/updateStockHolderInfo\",\r\n            data: params,\r\n        }).then((res) => {\r\n            let msg = res.message;\r\n            if (res.code == 0) {\r\n                message.success(msg);\r\n                // this.getData();\r\n            } else if (res.code == 20000) {\r\n                message.error(\r\n                    msg.substring(msg.indexOf(\"[\") + 1, msg.lastIndexOf(\"]\"))\r\n                );\r\n            } else {\r\n                message.error(msg);\r\n            }\r\n            this.isAction = true;\r\n        });\r\n    };\r\n    //删除记录\r\n    handleDeleteRecord = (record) => {\r\n        console.log(\"删除记录 \", record);\r\n    };\r\n    //填入更新数据\r\n    setUpdateModal = ({ form, record }) => {\r\n        // console.log(record, form);\r\n        this.record = record;\r\n        form.setFieldsValue({\r\n            userName: record.userName,\r\n            market: record.market + \"\",\r\n            accountType: record.accountType + \"\",\r\n            accountId: record.accountId,\r\n            accountStatus: record.accountStatus + \"\",\r\n            assetAccount: record.assetAccount,\r\n            custOrgid: record.custOrgid,\r\n            custBranchid: record.custBranchid,\r\n        });\r\n    };\r\n    getData = (params = {}, pagination = { current: 1, pageSize: 13 }) => {\r\n        params = {\r\n            ...params,\r\n            pageId: pagination.current,\r\n            pageNum: pagination.pageSize,\r\n        };\r\n        http.post({\r\n            // url: \"/option/assetInfo/selectList\",\r\n            url: \"/stockHolder/list\",\r\n            data: params,\r\n        }).then((res) => {\r\n            console.log(res);\r\n            //解析数据字典\r\n            if (res.data.records && res.data.records.length > 0) {\r\n                //parseDict(res.data.records);\r\n                parseDictValue(res.data.records);\r\n            } else {\r\n                message.info(\"查询结果为空\");\r\n            }\r\n            let pgn = {\r\n                current: res.data.current,\r\n                pageSize: pagination.pageSize,\r\n                total: res.data.total || 0,\r\n            };\r\n            this.setState({\r\n                info: res.data.records,\r\n                pagination: pgn,\r\n            });\r\n        });\r\n    };\r\n    handleSearch = (params, pagination) => {\r\n        this.getData(params, pagination);\r\n    };\r\n    componentDidMount() {\r\n        this.getData();\r\n    }\r\n    render() {\r\n        let scroll = { x: 1000, y: 445 };\r\n        let info = this.state.info;\r\n        return (\r\n            <div>\r\n                <CurdComponent\r\n                    // rowKey={\"index\"}\r\n                    // isShowSearchForm={false}\r\n                    // btnText2=\"查全部\"\r\n                    onSearchClick={this.handleSearch}\r\n                    getSearchFormFields={getSearchFormFields}\r\n                    // searchLoading={this.state.searchLoading}\r\n                    insertBtnText={\"新增\"} // 不传 就没新增按钮\r\n                    getInsertFormFields={getInsertFormFields}\r\n                    insertRecord={this.handleInsertRecord}\r\n                    // col=\"2\"\r\n                    width=\"789px\"\r\n                    pagination={this.state.pagination}\r\n                    getUpdateFormFields={getUpdateFormFields}\r\n                    setUpdateModal={this.setUpdateModal}\r\n                    updateRecord={this.handleUpdateRecord} // 不传 就没编辑\r\n                    deleteRecord={this.handleDeleteRecord} // 不传 就没删除\r\n                    centered={true}\r\n                    columns={columns}\r\n                    dataSource={info}\r\n                    scroll={scroll}\r\n                    // rowSelection={rowSelection} //批量选择 操作\r\n                >\r\n                    <div\r\n                        urlPrefix=\"/stockHolder\"\r\n                        title=\"股东信息\"\r\n                        sucCallback={this.getData}\r\n                    ></div>\r\n                </CurdComponent>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}