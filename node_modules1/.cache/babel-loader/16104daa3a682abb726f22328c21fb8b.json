{"ast":null,"code":"import \"antd/lib/config-provider/style\";\nimport _ConfigProvider from \"antd/lib/config-provider\";\nimport _classCallCheck from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport \"antd/lib/message/style\";\nimport _message from \"antd/lib/message\";\nvar _jsxFileName = \"D:\\\\company\\\\algo-manage\\\\src\\\\App.js\";\nimport React from \"react\";\nimport zhCN from \"antd/es/locale/zh_CN\";\nwindow.message = _message;\n\nwindow.showTip = function (that) {\n  var text = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"查询成功\";\n\n  // console.log(that.isAction);\n  if (!that.isAction) {\n    _message.success(text);\n  }\n\n  that.isAction = false;\n}; // import store from \"./store/index\";\n\n\nimport { connect } from \"react-redux\";\nimport { HashRouter as Router, Route, Redirect, Switch } from \"react-router-dom\"; // 去除 echart 函数\n\nimport { getBarOption, getLineOption, getMulLineOption } from \"@/utils/echartOption\";\nwindow.getBarOption = getBarOption;\nwindow.getLineOption = getLineOption;\nwindow.getMulLineOption = getMulLineOption;\nimport { routeModule, parseDict } from \"@/utils/util.js\"; //引入demo项目路由 与菜单\n// import routes from \"@/config/routes.js\";\n// import menus from \"@/config/menus\";\n//引入 期权项目管理系统 的路由 与菜单、字典!\n\nimport routes from \"@/algo/config/routes.js\";\nimport menus from \"@/algo/config/menus\";\nimport dict from \"@/algo/config/data_dictionary.js\";\n\nif (typeof dict != \"undefined\") {\n  window.dict = dict;\n  window.parseDic = parseDict(dict);\n} // console.log(routes);\n\n\nwindow.menus = menus;\nwindow.routes = routes;\nimport \"@/style/loading.less\"; //给每个路由加  module 属性\n\nrouteModule(\"/main\", routes);\n\nvar App =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(App, _React$Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.renderRoute = function (routes) {\n      var _this$props = _this.props,\n          enterRoute = _this$props.enterRoute,\n          popOtherTab = _this$props.popOtherTab;\n      var res = routes.map(function (route, idx) {\n        // console.log(route);\n        if (route.children) {\n          return React.createElement(Route, {\n            key: idx,\n            path: route.path,\n            exact: route.exact,\n            render: function render(props) {\n              // console.log(\"嵌套路由 \", route);\n              // console.log(\"props \", props);\n              var _props$location = props.location,\n                  pathname = _props$location.pathname,\n                  search = _props$location.search;\n              enterRoute(pathname); // setTimeout(() => {\n              //     popOtherTab(pathname);\n              // }, 100);\n\n              setTimeout(function () {\n                popOtherTab(pathname);\n              }, 20);\n              var Component = route.component,\n                  routeTitle = route.title;\n              document.title = routeTitle; // console.log(this.renderRoute(route.children));\n\n              return React.createElement(Component, Object.assign({}, props, {\n                title: route.title,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 81\n                },\n                __self: this\n              }), React.createElement(Switch, {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 82\n                },\n                __self: this\n              }, _this.renderRoute(route.children)));\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 61\n            },\n            __self: this\n          });\n        } else {\n          return React.createElement(Route, {\n            key: idx,\n            path: route.path,\n            exact: route.exact,\n            title: route.title // routeArr={routeArr}\n            ,\n            render: function render(props) {\n              // console.log(\"无嵌套路由 :\", route);\n              var history = props.history,\n                  location = props.location,\n                  match = props.match;\n              var pathname = location.pathname,\n                  search = location.search; // console.log(\"prop111 :\", props);\n\n              var Component = route.component,\n                  routeTitle = route.title;\n              document.title = routeTitle;\n              return React.createElement(Component, Object.assign({}, props, {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 106\n                },\n                __self: this\n              }));\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 92\n            },\n            __self: this\n          });\n        }\n      });\n      return res;\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {// console.log(\"App componentDidMount\");\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      // console.log(\"App  tabs: \", this.props.tabs);\n      return React.createElement(_ConfigProvider, {\n        locale: zhCN,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(Router, {\n        style: {\n          height: \"100%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(Switch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, this.renderRoute(routes), React.createElement(Redirect, {\n        to: \"/login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state, ownProps) {\n  return {\n    routes: state.RouterModel.routes // tabs: state.RouterModel.tabs\n\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch, ownProps) {\n  return {\n    enterRoute: function enterRoute(pathname) {\n      //dispatch({ type: \"ENTER_ROUTE\", payload: { path: pathname , routes } });\n      dispatch({\n        type: \"ENTER_ROUTE\",\n        payload: {\n          path: pathname\n        }\n      });\n    },\n    popOtherTab: function popOtherTab(pathname) {\n      dispatch({\n        type: \"POP_OTHER_TAB\",\n        payload: pathname\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["D:/company/algo-manage/src/App.js"],"names":["React","zhCN","window","message","showTip","that","text","isAction","success","connect","HashRouter","Router","Route","Redirect","Switch","getBarOption","getLineOption","getMulLineOption","routeModule","parseDict","routes","menus","dict","parseDic","App","renderRoute","props","enterRoute","popOtherTab","res","map","route","idx","children","path","exact","location","pathname","search","setTimeout","Component","component","routeTitle","title","document","history","match","height","mapStateToProps","state","ownProps","RouterModel","mapDispatchToProps","dispatch","type","payload"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { ConfigProvider } from \"antd\";\r\nimport zhCN from \"antd/es/locale/zh_CN\";\r\nimport { message } from \"antd\";\r\nwindow.message = message;\r\nwindow.showTip = (that, text = \"查询成功\") => {\r\n    // console.log(that.isAction);\r\n    if (!that.isAction) {\r\n        message.success(text);\r\n    }\r\n    that.isAction = false;\r\n};\r\n\r\n// import store from \"./store/index\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n    HashRouter as Router,\r\n    Route,\r\n    Redirect,\r\n    Switch,\r\n} from \"react-router-dom\";\r\n// 去除 echart 函数\r\nimport {\r\n    getBarOption,\r\n    getLineOption,\r\n    getMulLineOption,\r\n} from \"@/utils/echartOption\";\r\nwindow.getBarOption = getBarOption;\r\nwindow.getLineOption = getLineOption;\r\nwindow.getMulLineOption = getMulLineOption;\r\nimport { routeModule, parseDict } from \"@/utils/util.js\";\r\n\r\n//引入demo项目路由 与菜单\r\n// import routes from \"@/config/routes.js\";\r\n// import menus from \"@/config/menus\";\r\n//引入 期权项目管理系统 的路由 与菜单、字典!\r\nimport routes from \"@/algo/config/routes.js\";\r\nimport menus from \"@/algo/config/menus\";\r\nimport dict from \"@/algo/config/data_dictionary.js\";\r\n\r\nif (typeof dict != \"undefined\") {\r\n    window.dict = dict;\r\n    window.parseDic = parseDict(dict);\r\n}\r\n// console.log(routes);\r\nwindow.menus = menus;\r\nwindow.routes = routes;\r\n\r\nimport \"@/style/loading.less\";\r\n\r\n//给每个路由加  module 属性\r\nrouteModule(\"/main\", routes);\r\n\r\nclass App extends React.Component {\r\n    renderRoute = (routes) => {\r\n        let { enterRoute, popOtherTab } = this.props;\r\n        let res = routes.map((route, idx) => {\r\n            // console.log(route);\r\n            if (route.children) {\r\n                return (\r\n                    <Route\r\n                        key={idx}\r\n                        path={route.path}\r\n                        exact={route.exact}\r\n                        render={(props) => {\r\n                            // console.log(\"嵌套路由 \", route);\r\n                            // console.log(\"props \", props);\r\n                            let { pathname, search } = props.location;\r\n                            enterRoute(pathname);\r\n                            // setTimeout(() => {\r\n                            //     popOtherTab(pathname);\r\n                            // }, 100);\r\n                            setTimeout(() => {\r\n                                popOtherTab(pathname);\r\n                            }, 20);\r\n                            let { component: Component, title: routeTitle } =\r\n                                route;\r\n                            document.title = routeTitle;\r\n                            // console.log(this.renderRoute(route.children));\r\n                            return (\r\n                                <Component {...props} title={route.title}>\r\n                                    <Switch>\r\n                                        {this.renderRoute(route.children)}\r\n                                    </Switch>\r\n                                </Component>\r\n                            );\r\n                        }}\r\n                    ></Route>\r\n                );\r\n            } else {\r\n                return (\r\n                    <Route\r\n                        key={idx}\r\n                        path={route.path}\r\n                        exact={route.exact}\r\n                        title={route.title}\r\n                        // routeArr={routeArr}\r\n                        render={(props) => {\r\n                            // console.log(\"无嵌套路由 :\", route);\r\n                            let { history, location, match } = props;\r\n                            let { pathname, search } = location;\r\n                            // console.log(\"prop111 :\", props);\r\n                            let { component: Component, title: routeTitle } =\r\n                                route;\r\n                            document.title = routeTitle;\r\n                            return <Component {...props}></Component>;\r\n                        }}\r\n                    ></Route>\r\n                );\r\n            }\r\n        });\r\n\r\n        return res;\r\n    };\r\n    componentDidMount() {\r\n        // console.log(\"App componentDidMount\");\r\n    }\r\n    render() {\r\n        // console.log(\"App  tabs: \", this.props.tabs);\r\n        return (\r\n            <ConfigProvider locale={zhCN}>\r\n                <Router style={{ height: \"100%\" }}>\r\n                    <Switch>\r\n                        {/* <Route path=\"/admin\" component={Admin}></Route>\r\n            <Route path=\"/login\" component={Login}></Route>\r\n            <Route path=\"/404\" component={NotFound}></Route> */}\r\n                        {/* <Switch>\r\n              <Route\r\n                path=\"/main\"\r\n                render={() => (\r\n                  <Main>\r\n                    <Route path=\"/main/test4\" component={Test4}></Route>\r\n                    <Route path=\"/main/test\" component={Test}></Route>\r\n                  </Main>\r\n                )}\r\n              ></Route>\r\n            </Switch> \r\n            <Route path=\"/login\" component={Login}></Route>*/}\r\n                        {this.renderRoute(routes)}\r\n                        <Redirect to=\"/login\"></Redirect>\r\n                    </Switch>\r\n                </Router>\r\n            </ConfigProvider>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        routes: state.RouterModel.routes,\r\n        // tabs: state.RouterModel.tabs\r\n    };\r\n};\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n        enterRoute: (pathname) => {\r\n            //dispatch({ type: \"ENTER_ROUTE\", payload: { path: pathname , routes } });\r\n            dispatch({ type: \"ENTER_ROUTE\", payload: { path: pathname } });\r\n        },\r\n        popOtherTab: (pathname) => {\r\n            dispatch({ type: \"POP_OTHER_TAB\", payload: pathname });\r\n        },\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n"]},"metadata":{},"sourceType":"module"}