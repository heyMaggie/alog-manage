{"ast":null,"code":"import _classCallCheck from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\company\\\\algo-manage\\\\src\\\\algo\\\\modules\\\\chart\\\\pages\\\\orderCancel\\\\index.js\";\nimport React from \"react\"; // import { DatePicker, Select } from \"antd\";\n\nimport ChartComponent from \"@/components/ChartComponent\";\nimport SelectOption from \"@/components/SelectOption\";\nvar secArr = [{\n  key: \"0\",\n  value: \"全部\"\n}, {\n  key: \"1\",\n  value: \"买入\"\n}, {\n  key: \"2\",\n  value: \"卖出\"\n}];\n\nvar orderCancel =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(orderCancel, _React$PureComponent);\n\n  function orderCancel() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, orderCancel);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(orderCancel)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      info: {},\n      formArr: [{\n        label: \"买卖方向\",\n        id: \"side\",\n        initialValue: \"0\",\n        component: SelectOption(secArr, {\n          width: \"200px\"\n        })\n      }]\n    };\n\n    _this.getSearchList = function (params, form) {\n      if (params.side == 0) {\n        params.side = \"\";\n      }\n\n      console.log(params);\n\n      _this.getData(params);\n    };\n\n    _this.getData = function (params) {\n      var count = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      http.post({\n        url: \"/option/orderCancel/countGroup\",\n        data: params\n      }).then(function (res) {\n        // console.log(res);\n        var list = res.data;\n        var params = {\n          theme: \"light\",\n          // title: {\n          //     text: \"当前时刻总订单数：\" + count,\n          // },\n          data: list,\n          xAxis: {\n            name: \"时间\"\n          },\n          yAxis: {\n            name: \"数量\"\n          },\n          // xSeriesUnit:\"\",  //x轴单位\n          ySeriesUnit: \"笔\",\n          gridRight: \"10%\" // level:[200,400,600,800,1000]\n\n        };\n        var option = getLineOption(params); // console.log(option);\n\n        _this.setState({\n          info: option\n        });\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(orderCancel, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getData();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var info = this.state.info;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(ChartComponent // isShowSearchForm={false}\n      , {\n        getSearchFormFields: this.state.formArr,\n        getSearchList: this.getSearchList,\n        dataSource: this.state.info,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return orderCancel;\n}(React.PureComponent);\n\nexport { orderCancel as default };","map":{"version":3,"sources":["D:/company/algo-manage/src/algo/modules/chart/pages/orderCancel/index.js"],"names":["React","ChartComponent","SelectOption","secArr","key","value","orderCancel","state","info","formArr","label","id","initialValue","component","width","getSearchList","params","form","side","console","log","getData","count","http","post","url","data","then","res","list","theme","xAxis","name","yAxis","ySeriesUnit","gridRight","option","getLineOption","setState","PureComponent"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAOC,cAAP,MAA2B,6BAA3B;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AAEA,IAAIC,MAAM,GAAG,CACT;AAAEC,EAAAA,GAAG,EAAE,GAAP;AAAYC,EAAAA,KAAK,EAAE;AAAnB,CADS,EAET;AAAED,EAAAA,GAAG,EAAE,GAAP;AAAYC,EAAAA,KAAK,EAAE;AAAnB,CAFS,EAGT;AAAED,EAAAA,GAAG,EAAE,GAAP;AAAYC,EAAAA,KAAK,EAAE;AAAnB,CAHS,CAAb;;IAKqBC,W;;;;;;;;;;;;;;;;;UACjBC,K,GAAQ;AACJC,MAAAA,IAAI,EAAE,EADF;AAEJC,MAAAA,OAAO,EAAE,CACL;AACIC,QAAAA,KAAK,EAAE,MADX;AAEIC,QAAAA,EAAE,EAAE,MAFR;AAGIC,QAAAA,YAAY,EAAE,GAHlB;AAIIC,QAAAA,SAAS,EAAEX,YAAY,CAACC,MAAD,EAAS;AAAEW,UAAAA,KAAK,EAAE;AAAT,SAAT;AAJ3B,OADK;AAFL,K;;UAWRC,a,GAAgB,UAACC,MAAD,EAASC,IAAT,EAAkB;AAC9B,UAAID,MAAM,CAACE,IAAP,IAAe,CAAnB,EAAsB;AAClBF,QAAAA,MAAM,CAACE,IAAP,GAAc,EAAd;AACH;;AACDC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAZ;;AACA,YAAKK,OAAL,CAAaL,MAAb;AACH,K;;UACDK,O,GAAU,UAACL,MAAD,EAAuB;AAAA,UAAdM,KAAc,uEAAN,CAAM;AAC7BC,MAAAA,IAAI,CAACC,IAAL,CAAU;AACNC,QAAAA,GAAG,EAAE,gCADC;AAENC,QAAAA,IAAI,EAAEV;AAFA,OAAV,EAGGW,IAHH,CAGQ,UAACC,GAAD,EAAS;AACb;AACA,YAAIC,IAAI,GAAGD,GAAG,CAACF,IAAf;AACA,YAAIV,MAAM,GAAG;AACTc,UAAAA,KAAK,EAAE,OADE;AAET;AACA;AACA;AACAJ,UAAAA,IAAI,EAAEG,IALG;AAMTE,UAAAA,KAAK,EAAE;AACHC,YAAAA,IAAI,EAAE;AADH,WANE;AASTC,UAAAA,KAAK,EAAE;AACHD,YAAAA,IAAI,EAAE;AADH,WATE;AAYT;AACAE,UAAAA,WAAW,EAAE,GAbJ;AAcTC,UAAAA,SAAS,EAAE,KAdF,CAeT;;AAfS,SAAb;AAiBA,YAAIC,MAAM,GAAGC,aAAa,CAACrB,MAAD,CAA1B,CApBa,CAqBb;;AACA,cAAKsB,QAAL,CAAc;AACV9B,UAAAA,IAAI,EAAE4B;AADI,SAAd;AAGH,OA5BD;AA6BH,K;;;;;;;wCACmB;AAChB,WAAKf,OAAL;AACH;;;6BAEQ;AACL,UAAIb,IAAI,GAAG,KAAKD,KAAL,CAAWC,IAAtB;AACA,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,cAAD,CACI;AADJ;AAEI,QAAA,mBAAmB,EAAE,KAAKD,KAAL,CAAWE,OAFpC;AAGI,QAAA,aAAa,EAAE,KAAKM,aAHxB;AAII,QAAA,UAAU,EAAE,KAAKR,KAAL,CAAWC,IAJ3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ;AAUH;;;;EAlEoCR,KAAK,CAACuC,a;;SAA1BjC,W","sourcesContent":["import React from \"react\";\r\n// import { DatePicker, Select } from \"antd\";\r\nimport ChartComponent from \"@/components/ChartComponent\";\r\nimport SelectOption from \"@/components/SelectOption\";\r\n\r\nlet secArr = [\r\n    { key: \"0\", value: \"全部\" },\r\n    { key: \"1\", value: \"买入\" },\r\n    { key: \"2\", value: \"卖出\" },\r\n];\r\nexport default class orderCancel extends React.PureComponent {\r\n    state = {\r\n        info: {},\r\n        formArr: [\r\n            {\r\n                label: \"买卖方向\",\r\n                id: \"side\",\r\n                initialValue: \"0\",\r\n                component: SelectOption(secArr, { width: \"200px\" }),\r\n            },\r\n        ],\r\n    };\r\n    getSearchList = (params, form) => {\r\n        if (params.side == 0) {\r\n            params.side = \"\";\r\n        }\r\n        console.log(params);\r\n        this.getData(params);\r\n    };\r\n    getData = (params, count = 0) => {\r\n        http.post({\r\n            url: \"/option/orderCancel/countGroup\",\r\n            data: params,\r\n        }).then((res) => {\r\n            // console.log(res);\r\n            let list = res.data;\r\n            let params = {\r\n                theme: \"light\",\r\n                // title: {\r\n                //     text: \"当前时刻总订单数：\" + count,\r\n                // },\r\n                data: list,\r\n                xAxis: {\r\n                    name: \"时间\",\r\n                },\r\n                yAxis: {\r\n                    name: \"数量\",\r\n                },\r\n                // xSeriesUnit:\"\",  //x轴单位\r\n                ySeriesUnit: \"笔\",\r\n                gridRight: \"10%\",\r\n                // level:[200,400,600,800,1000]\r\n            };\r\n            let option = getLineOption(params);\r\n            // console.log(option);\r\n            this.setState({\r\n                info: option,\r\n            });\r\n        });\r\n    };\r\n    componentDidMount() {\r\n        this.getData();\r\n    }\r\n\r\n    render() {\r\n        let info = this.state.info;\r\n        return (\r\n            <div>\r\n                <ChartComponent\r\n                    // isShowSearchForm={false}\r\n                    getSearchFormFields={this.state.formArr}\r\n                    getSearchList={this.getSearchList}\r\n                    dataSource={this.state.info}\r\n                ></ChartComponent>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}