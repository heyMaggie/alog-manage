{"ast":null,"code":"import \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/form/style\";\nimport _Form from \"antd/lib/form\";\nimport _classCallCheck from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport \"antd/lib/select/style\";\nimport _Select from \"antd/lib/select\";\nimport \"antd/lib/date-picker/style\";\nimport _DatePicker from \"antd/lib/date-picker\";\nvar _jsxFileName = \"D:\\\\company\\\\algo-manage\\\\src\\\\algo\\\\modules\\\\algostatis\\\\pages\\\\algoStatis\\\\index.js\";\nimport React from \"react\";\nimport styles from \"./style.module.less\";\nimport echarts from \"echarts\";\nvar RangePicker = _DatePicker.RangePicker;\nvar Option = _Select.Option;\n\nvar Cccx =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(Cccx, _React$PureComponent);\n\n  function Cccx() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Cccx);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Cccx)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      searchLoading: false,\n      info: [],\n      pagination: {\n        total: 0\n      },\n      username: \"\"\n    };\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n\n      _this.props.form.validateFields(function (err, values) {\n        if (!err) {\n          console.log(\"Received values of form: \", values);\n        }\n      });\n    };\n\n    _this.getData2 = function (params) {\n      var count = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      var option = {\n        textStyle: {\n          color: \"#333\"\n        },\n        // title: {\n        //     text: \"折线图堆叠\",\n        // },\n        tooltip: {\n          trigger: \"axis\",\n          backgroundColor: \"#1F2329\",\n          boxShadow: \"0px 2px 8px 0px rgba(0, 0, 0, 0.15)\",\n          borderColor: \"#1F2329\",\n          textStyle: {\n            color: \"#fff\"\n          }\n        },\n        legend: {\n          data: [\"人数\", \"股票数量\"],\n          left: 0\n        },\n        grid: {\n          left: \"1%\",\n          right: \"4%\",\n          bottom: \"3%\",\n          containLabel: true\n        },\n        xAxis: {\n          type: \"category\",\n          boundaryGap: false,\n          data: [\"9-12 10:00\", \"9-13 10:00\", \"9-14 10:00\", \"9-15 10:00\", \"9-16 10:00\", \"9-17 10:00\", \"9-18 10:00\"],\n          splitLine: {\n            show: true,\n            lineStyle: {\n              color: \"#E9E9E9\",\n              type: \"dashed\"\n            }\n          },\n          axisTick: {\n            show: true,\n            //显示X轴刻度\n            lineStyle: {\n              color: \"#E9E9E9\"\n            }\n          },\n          axisLine: {\n            // 刻度线的颜色\n            show: false\n          },\n          axisPointer: {\n            type: \"line\",\n            lineStyle: {\n              color: \"red\"\n            }\n          }\n        },\n        yAxis: [{\n          type: \"value\",\n          name: \"单位：（股）\",\n          nameLocation: \"end\",\n          axisLine: {\n            show: false\n          },\n          nameTextStyle: {\n            color: \"#666\"\n          },\n          axisTick: {\n            show: false //隐藏X轴刻度\n\n          },\n          splitLine: {\n            show: true,\n            lineStyle: {\n              color: \"#E9E9E9\"\n            }\n          }\n        }, {\n          gridIndex: 0,\n          type: \"value\",\n          name: \"单位：（个）\",\n          splitLine: {\n            show: false\n          },\n          axisTick: {\n            show: false //隐藏X轴刻度\n\n          },\n          axisLine: {\n            show: false\n          },\n          min: \"0\",\n          max: \"100\"\n        }],\n        series: [{\n          name: \"人数\",\n          type: \"line\",\n          stack: \"总量\",\n          data: [120, 132, 101, 134, 90, 230, 210],\n          smooth: true,\n          showSymbol: false,\n          itemStyle: {\n            normal: {\n              color: \"#83BDFF\"\n            }\n          },\n          areaStyle: {\n            normal: {\n              color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\n                offset: 0,\n                color: \"rgba(50, 129, 255, 0.06)\"\n              }, {\n                offset: 0.8,\n                color: \"rgba(50, 129, 255, 0)\"\n              }], false),\n              shadowColor: \"rgba(0, 0, 0, 0.1)\",\n              shadowBlur: 10\n            }\n          }\n        }, {\n          name: \"股票数量\",\n          type: \"line\",\n          stack: \"总量\",\n          data: [220, 182, 191, 234, 290, 330, 310],\n          smooth: true,\n          showSymbol: false,\n          itemStyle: {\n            normal: {\n              color: \"#FFD747\"\n            }\n          },\n          areaStyle: {\n            // background: linear-gradient(360deg, rgba(255, 255, 255, 0) 0%, rgba(50, 129, 255, 0.06) 100%);\n            // background: linear-gradient(360deg, rgba(255, 255, 255, 0) 0%, rgba(255, 215, 71, 0.06) 100%);\n            normal: {\n              color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\n                offset: 0,\n                color: \"rgba(255, 215, 71, 0.06)\"\n              }, {\n                offset: 0.8,\n                color: \"rgba(255, 215, 71, 0)\"\n              }], false),\n              shadowColor: \"rgba(0, 0, 0, 0.1)\",\n              shadowBlur: 10\n            }\n          }\n        }]\n      };\n      var myChart = echarts.init(document.getElementById(\"main\"));\n      myChart.setOption(option);\n    };\n\n    return _this;\n  }\n\n  _createClass(Cccx, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getData2();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      function onChange(value) {\n        console.log(\"selected \".concat(value));\n      }\n\n      function onBlur() {\n        console.log(\"blur\");\n      }\n\n      function onFocus() {\n        console.log(\"focus\");\n      }\n\n      function onSearch(val) {\n        console.log(\"search:\", val);\n      }\n\n      return React.createElement(\"div\", {\n        className: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: styles.search,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }, React.createElement(_Form, {\n        layout: \"inline\",\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }, React.createElement(_Form.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }, React.createElement(_Select, {\n        showSearch: true,\n        style: {\n          width: 200\n        },\n        placeholder: \"\\u9009\\u62E9\\u7B97\\u6CD5\",\n        optionFilterProp: \"children\",\n        onChange: onChange,\n        onFocus: onFocus,\n        onBlur: onBlur,\n        onSearch: onSearch,\n        filterOption: function filterOption(input, option) {\n          return option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }, React.createElement(Option, {\n        value: \"0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250\n        },\n        __self: this\n      }, \"\\u5168\\u90E8\"), React.createElement(Option, {\n        value: \"1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      }, \"Lucy\"), React.createElement(Option, {\n        value: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        },\n        __self: this\n      }, \"Tom\"))), React.createElement(_Form.Item, {\n        style: {\n          marginLeft: \"12px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255\n        },\n        __self: this\n      }, React.createElement(RangePicker, {\n        showTime: true,\n        format: \"YYYY-MM-DD HH:mm:ss\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256\n        },\n        __self: this\n      })), React.createElement(_Form.Item, {\n        style: {\n          float: \"right\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      }, React.createElement(_Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        },\n        __self: this\n      }, \"\\u786E\\u5B9A\")))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"main\",\n        style: {\n          width: \"100%\",\n          height: \"600px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Cccx;\n}(React.PureComponent);\n\nexport { Cccx as default };","map":{"version":3,"sources":["D:/company/algo-manage/src/algo/modules/algostatis/pages/algoStatis/index.js"],"names":["React","styles","echarts","RangePicker","Option","Cccx","state","searchLoading","info","pagination","total","username","handleSubmit","e","preventDefault","props","form","validateFields","err","values","console","log","getData2","params","count","option","textStyle","color","tooltip","trigger","backgroundColor","boxShadow","borderColor","legend","data","left","grid","right","bottom","containLabel","xAxis","type","boundaryGap","splitLine","show","lineStyle","axisTick","axisLine","axisPointer","yAxis","name","nameLocation","nameTextStyle","gridIndex","min","max","series","stack","smooth","showSymbol","itemStyle","normal","areaStyle","graphic","LinearGradient","offset","shadowColor","shadowBlur","myChart","init","document","getElementById","setOption","onChange","value","onBlur","onFocus","onSearch","val","container","search","width","input","children","toLowerCase","indexOf","marginLeft","float","height","PureComponent"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport styles from \"./style.module.less\";\r\nimport echarts from \"echarts\";\r\nimport {\r\n    SearchForm,\r\n    Input,\r\n    TimePicker,\r\n    Form,\r\n    Button,\r\n    Icon,\r\n    DatePicker,\r\n    Select,\r\n} from \"antd\";\r\n\r\nconst { RangePicker } = DatePicker;\r\nconst { Option } = Select;\r\nexport default class Cccx extends React.PureComponent {\r\n    state = {\r\n        searchLoading: false,\r\n        info: [],\r\n        pagination: { total: 0 },\r\n        username: \"\",\r\n    };\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.form.validateFields((err, values) => {\r\n            if (!err) {\r\n                console.log(\"Received values of form: \", values);\r\n            }\r\n        });\r\n    };\r\n    getData2 = (params, count = 0) => {\r\n        let option = {\r\n            textStyle: {\r\n                color: \"#333\",\r\n            },\r\n            // title: {\r\n            //     text: \"折线图堆叠\",\r\n            // },\r\n            tooltip: {\r\n                trigger: \"axis\",\r\n                backgroundColor: \"#1F2329\",\r\n                boxShadow: \"0px 2px 8px 0px rgba(0, 0, 0, 0.15)\",\r\n                borderColor: \"#1F2329\",\r\n                textStyle: {\r\n                    color: \"#fff\",\r\n                },\r\n            },\r\n            legend: {\r\n                data: [\"人数\", \"股票数量\"],\r\n                left: 0,\r\n            },\r\n            grid: {\r\n                left: \"1%\",\r\n                right: \"4%\",\r\n                bottom: \"3%\",\r\n                containLabel: true,\r\n            },\r\n            xAxis: {\r\n                type: \"category\",\r\n                boundaryGap: false,\r\n                data: [\r\n                    \"9-12 10:00\",\r\n                    \"9-13 10:00\",\r\n                    \"9-14 10:00\",\r\n                    \"9-15 10:00\",\r\n                    \"9-16 10:00\",\r\n                    \"9-17 10:00\",\r\n                    \"9-18 10:00\",\r\n                ],\r\n                splitLine: {\r\n                    show: true,\r\n                    lineStyle: {\r\n                        color: \"#E9E9E9\",\r\n                        type: \"dashed\",\r\n                    },\r\n                },\r\n                axisTick: {\r\n                    show: true, //显示X轴刻度\r\n                    lineStyle: {\r\n                        color: \"#E9E9E9\",\r\n                    },\r\n                },\r\n                axisLine: {\r\n                    // 刻度线的颜色\r\n                    show: false,\r\n                },\r\n                axisPointer: {\r\n                    type: \"line\",\r\n                    lineStyle: { color: \"red\" },\r\n                },\r\n            },\r\n            yAxis: [\r\n                {\r\n                    type: \"value\",\r\n                    name: \"单位：（股）\",\r\n                    nameLocation: \"end\",\r\n                    axisLine: {\r\n                        show: false,\r\n                    },\r\n                    nameTextStyle: {\r\n                        color: \"#666\",\r\n                    },\r\n                    axisTick: {\r\n                        show: false, //隐藏X轴刻度\r\n                    },\r\n                    splitLine: {\r\n                        show: true,\r\n                        lineStyle: {\r\n                            color: \"#E9E9E9\",\r\n                        },\r\n                    },\r\n                },\r\n                {\r\n                    gridIndex: 0,\r\n                    type: \"value\",\r\n                    name: \"单位：（个）\",\r\n                    splitLine: {\r\n                        show: false,\r\n                    },\r\n                    axisTick: {\r\n                        show: false, //隐藏X轴刻度\r\n                    },\r\n                    axisLine: {\r\n                        show: false,\r\n                    },\r\n                    min: \"0\",\r\n                    max: \"100\",\r\n                },\r\n            ],\r\n            series: [\r\n                {\r\n                    name: \"人数\",\r\n                    type: \"line\",\r\n                    stack: \"总量\",\r\n                    data: [120, 132, 101, 134, 90, 230, 210],\r\n                    smooth: true,\r\n                    showSymbol: false,\r\n                    itemStyle: {\r\n                        normal: {\r\n                            color: \"#83BDFF\",\r\n                        },\r\n                    },\r\n                    areaStyle: {\r\n                        normal: {\r\n                            color: new echarts.graphic.LinearGradient(\r\n                                0,\r\n                                0,\r\n                                0,\r\n                                1,\r\n                                [\r\n                                    {\r\n                                        offset: 0,\r\n                                        color: \"rgba(50, 129, 255, 0.06)\",\r\n                                    },\r\n                                    {\r\n                                        offset: 0.8,\r\n                                        color: \"rgba(50, 129, 255, 0)\",\r\n                                    },\r\n                                ],\r\n                                false\r\n                            ),\r\n                            shadowColor: \"rgba(0, 0, 0, 0.1)\",\r\n                            shadowBlur: 10,\r\n                        },\r\n                    },\r\n                },\r\n                {\r\n                    name: \"股票数量\",\r\n                    type: \"line\",\r\n                    stack: \"总量\",\r\n                    data: [220, 182, 191, 234, 290, 330, 310],\r\n                    smooth: true,\r\n                    showSymbol: false,\r\n                    itemStyle: {\r\n                        normal: {\r\n                            color: \"#FFD747\",\r\n                        },\r\n                    },\r\n                    areaStyle: {\r\n                        // background: linear-gradient(360deg, rgba(255, 255, 255, 0) 0%, rgba(50, 129, 255, 0.06) 100%);\r\n                        // background: linear-gradient(360deg, rgba(255, 255, 255, 0) 0%, rgba(255, 215, 71, 0.06) 100%);\r\n                        normal: {\r\n                            color: new echarts.graphic.LinearGradient(\r\n                                0,\r\n                                0,\r\n                                0,\r\n                                1,\r\n                                [\r\n                                    {\r\n                                        offset: 0,\r\n                                        color: \"rgba(255, 215, 71, 0.06)\",\r\n                                    },\r\n                                    {\r\n                                        offset: 0.8,\r\n                                        color: \"rgba(255, 215, 71, 0)\",\r\n                                    },\r\n                                ],\r\n                                false\r\n                            ),\r\n                            shadowColor: \"rgba(0, 0, 0, 0.1)\",\r\n                            shadowBlur: 10,\r\n                        },\r\n                    },\r\n                },\r\n            ],\r\n        };\r\n        var myChart = echarts.init(document.getElementById(\"main\"));\r\n        myChart.setOption(option);\r\n    };\r\n    componentDidMount() {\r\n        this.getData2();\r\n    }\r\n    render() {\r\n        function onChange(value) {\r\n            console.log(`selected ${value}`);\r\n        }\r\n\r\n        function onBlur() {\r\n            console.log(\"blur\");\r\n        }\r\n\r\n        function onFocus() {\r\n            console.log(\"focus\");\r\n        }\r\n\r\n        function onSearch(val) {\r\n            console.log(\"search:\", val);\r\n        }\r\n        return (\r\n            <div className={styles.container}>\r\n                <div className={styles.search}>\r\n                    <Form layout=\"inline\" onSubmit={this.handleSubmit}>\r\n                        <Form.Item>\r\n                            <Select\r\n                                showSearch\r\n                                style={{ width: 200 }}\r\n                                placeholder=\"选择算法\"\r\n                                optionFilterProp=\"children\"\r\n                                onChange={onChange}\r\n                                onFocus={onFocus}\r\n                                onBlur={onBlur}\r\n                                onSearch={onSearch}\r\n                                filterOption={(input, option) =>\r\n                                    option.props.children\r\n                                        .toLowerCase()\r\n                                        .indexOf(input.toLowerCase()) >= 0\r\n                                }\r\n                            >\r\n                                <Option value=\"0\">全部</Option>\r\n                                <Option value=\"1\">Lucy</Option>\r\n                                <Option value=\"2\">Tom</Option>\r\n                            </Select>\r\n                        </Form.Item>\r\n                        <Form.Item style={{ marginLeft: \"12px\" }}>\r\n                            <RangePicker\r\n                                showTime\r\n                                format=\"YYYY-MM-DD HH:mm:ss\"\r\n                            />\r\n                        </Form.Item>\r\n                        <Form.Item style={{ float: \"right\" }}>\r\n                            <Button type=\"primary\" htmlType=\"submit\">\r\n                                确定\r\n                            </Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </div>\r\n                <div>\r\n                    <div\r\n                        id=\"main\"\r\n                        style={{ width: \"100%\", height: \"600px\" }}\r\n                    ></div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}