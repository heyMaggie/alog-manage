{"ast":null,"code":"import \"antd/lib/input/style\";\nimport _Input from \"antd/lib/input\";\nimport _defineProperty from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport \"antd/lib/auto-complete/style\";\nimport _AutoComplete from \"antd/lib/auto-complete\";\nvar _jsxFileName = \"D:\\\\company\\\\algo-manage\\\\src\\\\algo\\\\modules\\\\manage\\\\pages\\\\algoBest\\\\index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport CurdComponent from \"@/components/CurdComponent\";\nimport SelectOption from \"@/components/SelectOption\";\nvar Option = _AutoComplete.Option;\n\nvar columns = function columns(params) {\n  return [{\n    title: \"ID\",\n    dataIndex: \"id\"\n  }, {\n    title: \"算法厂商\",\n    dataIndex: \"provider_name\"\n  }, {\n    title: \"算法类型\",\n    dataIndex: \"algo_typeValue\"\n  }, {\n    title: \"算法名称\",\n    dataIndex: \"algo_name\"\n  }, {\n    title: \"股票代码\",\n    dataIndex: \"sec_id\"\n  }, {\n    title: \"股票名称\",\n    dataIndex: \"sec_name\"\n  }, {\n    title: \"开仓率(%)\",\n    dataIndex: \"open_rate\"\n  }, {\n    title: \"收益率(%)\",\n    dataIndex: \"income_rate\"\n  }, {\n    title: \"基点\",\n    dataIndex: \"basis_point\"\n  }, {\n    title: \"创建时间\",\n    dataIndex: \"create_time\",\n    width: 180\n  }];\n};\n\nvar algoBest =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(algoBest, _React$PureComponent);\n\n  function algoBest() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, algoBest);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(algoBest)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      searchLoading: false,\n      selectRow: [],\n      info: [],\n      pagination: {\n        current: 1,\n        pageSize: 11,\n        total: 0\n      },\n      providerList: [],\n      algoList: [],\n      algoInfoList: [],\n      securityList: [],\n      currentDataLists: [],\n      currentDataLists2: [],\n      currentDataListsAdd: [],\n      securityObj: {},\n      uploadUrl: \"\",\n      downloadUrl: \"\"\n    };\n\n    _this.getSearchFormFields = function () {\n      var _ref;\n\n      return [{\n        label: \"算法厂商\",\n        id: \"provider_id\",\n        component: SelectOption(_this.state.providerList, {\n          placeholder: \"请选择\",\n          allowClear: true // onChange: this.inputChange,\n\n        })\n      }, (_ref = {\n        label: \"算法\"\n      }, _defineProperty(_ref, \"label\", React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, \"\\u7B97\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\u6CD5\")), _defineProperty(_ref, \"id\", \"algo_id\"), _defineProperty(_ref, \"component\", SelectOption(_this.state.algoList, {\n        placeholder: \"请选择\",\n        allowClear: true\n      })), _ref), {\n        label: \"股票代码\",\n        id: \"sec_id\",\n        // component: <Input placeholder=\"请输入：接口返回？\" />,\n        component: React.createElement(_AutoComplete, {\n          placeholder: \"\\u8BF7\\u8F93\\u5165\",\n          dataSource: _this.state.currentDataLists.map(_this.renderOption),\n          onChange: _this.handleChange,\n          allowClear: true,\n          optionLabelProp: \"text\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103\n          },\n          __self: this\n        })\n      }];\n    };\n\n    _this.renderOption = function (item) {\n      return React.createElement(Option, {\n        key: item,\n        text: item.substring(0, 6),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, item);\n    };\n\n    _this.handleChange = function (value) {\n      // console.log(value);\n      if (value) {\n        var securityList = _this.state.securityList;\n        var currentDataLists = securityList.filter(function (item) {\n          return item.toUpperCase().includes(value.toUpperCase());\n        }); // console.log(currentDataLists);\n\n        var optionArr = [];\n\n        if (currentDataLists.length > 0) {\n          optionArr = currentDataLists.length > 10 ? currentDataLists.slice(0, 10) : currentDataLists;\n        }\n\n        _this.setState({\n          currentDataLists: optionArr\n        });\n      } else {\n        var _securityList = _this.state.securityList;\n        var _currentDataLists = _securityList;\n        var _optionArr = [];\n\n        if (_currentDataLists.length > 0) {\n          _optionArr = _currentDataLists.length > 10 ? _currentDataLists.slice(0, 10) : _currentDataLists;\n        }\n\n        _this.setState({\n          currentDataLists: _optionArr\n        });\n      }\n    };\n\n    _this.handleChange2 = function (value) {\n      if (value) {\n        var securityList = _this.state.securityList;\n        var currentDataLists = securityList.filter(function (item) {\n          return item.toUpperCase().includes(value.toUpperCase());\n        }); // console.log(currentDataLists);\n\n        var optionArr = [];\n\n        if (currentDataLists.length > 0) {\n          optionArr = currentDataLists.length > 10 ? currentDataLists.slice(0, 10) : currentDataLists;\n        }\n\n        _this.setState({\n          currentDataLists2: optionArr\n        });\n      } else {\n        var _securityList2 = _this.state.securityList;\n        var _currentDataLists2 = _securityList2;\n        var _optionArr2 = [];\n\n        if (_currentDataLists2.length > 0) {\n          _optionArr2 = _currentDataLists2.length > 10 ? _currentDataLists2.slice(0, 10) : _currentDataLists2;\n        }\n\n        _this.setState({\n          currentDataLists2: _optionArr2\n        });\n      }\n    };\n\n    _this.getInsertFormFields = function () {\n      return [// {\n      //     label: \"算法厂商\",\n      //     id: \"provider_id\",\n      //     initialValue: \"\",\n      //     rules: [\n      //         {\n      //             required: true,\n      //             message: \"参数不能为空\",\n      //         },\n      //     ],\n      //     // component: <Input placeholder=\"请输入\" />,\n      //     component: SelectOption(this.state.providerList, {\n      //         placeholder: \"请选择\",\n      //         // onChange: this.inputChange,\n      //     }),\n      // },\n      {\n        label: \"算法\",\n        id: \"algo_id\",\n        initialValue: \"\",\n        rules: [{\n          required: true,\n          message: \"参数不能为空\"\n        }],\n        // component: <Input placeholder=\"请输入\" />,\n        component: SelectOption(_this.state.algoList, {\n          placeholder: \"请选择\" // onChange: this.inputChange,\n\n        })\n      }, {\n        label: \"股票代码\",\n        id: \"sec_id\",\n        // initialValue: \"000001\",\n        rules: [{\n          required: true,\n          message: \"参数不能为空\"\n        } // {\n        //     validator: checkLength(8),\n        //     trigger: [\"change\", \"blur\"],\n        // },\n        ],\n        // component: (\n        //     // <Input placeholder=\"请输入\" readOnly disabled />\n        //     <Input placeholder=\"请输入\" />\n        // ),\n        component: React.createElement(_AutoComplete, {\n          dataSource: _this.state.currentDataLists2.map(_this.renderOption) // dataSource={this.state.currentDataLists2}\n          ,\n          allowClear: true,\n          onChange: _this.handleChange2,\n          optionLabelProp: \"text\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 233\n          },\n          __self: this\n        })\n      }, {\n        label: \"开仓率\",\n        id: \"open_rate\",\n        initialValue: \"0\",\n        rules: [{\n          required: true,\n          message: \"参数不能为空\"\n        }, // {\n        //     message: \"请输入0%-100% 之间的数\",\n        //     pattern: new RegExp(\n        //         \"(^(\\\\d|[1-9]\\\\d)(\\\\.\\\\d{1,2})?$)|(^100$)\"\n        //     ),\n        // },\n        {\n          message: \"请输入数字\",\n          pattern: new RegExp(\"^\\\\d+$\")\n        }, {\n          validator: checkLength(10),\n          trigger: [\"change\", \"blur\"]\n        }],\n        component: React.createElement(_Input, {\n          placeholder: \"\\u8BF7\\u8F93\\u5165\",\n          suffix: \"%\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 268\n          },\n          __self: this\n        })\n      }, {\n        label: \"收益率\",\n        id: \"income_rate\",\n        initialValue: \"0\",\n        rules: [{\n          required: true,\n          message: \"参数不能为空\"\n        }, {\n          message: \"请输入数字\",\n          pattern: new RegExp(\"^\\\\d+$\")\n        }, {\n          validator: checkLength(10),\n          trigger: [\"change\", \"blur\"]\n        }],\n        component: React.createElement(_Input, {\n          placeholder: \"\\u8BF7\\u8F93\\u5165\",\n          suffix: \"%\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 288\n          },\n          __self: this\n        })\n      }, {\n        label: \"基点\",\n        id: \"basis_point\",\n        initialValue: \"0\",\n        rules: [{\n          required: true,\n          message: \"参数不能为空\"\n        }, {\n          message: \"请输入数字\",\n          pattern: new RegExp(\"^\\\\d+$\")\n        }, {\n          validator: checkLength(10),\n          trigger: [\"change\", \"blur\"]\n        }],\n        component: React.createElement(_Input, {\n          placeholder: \"\\u8BF7\\u8F93\\u5165\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 308\n          },\n          __self: this\n        })\n      }];\n    };\n\n    _this.getUpdateFormFields = function () {\n      return [// {\n      //     label: \"算法厂商\",\n      //     id: \"provider_id\",\n      //     initialValue: \"\",\n      //     rules: [\n      //         {\n      //             required: true,\n      //             message: \"参数不能为空\",\n      //         },\n      //     ],\n      //     // component: <Input placeholder=\"请输入\" />,\n      //     component: SelectOption(this.state.providerList, {\n      //         placeholder: \"请选择\",\n      //         // onChange: this.inputChange,\n      //     }),\n      // },\n      {\n        label: \"算法\",\n        id: \"algo_id\",\n        initialValue: \"\",\n        rules: [{\n          required: true,\n          message: \"参数不能为空\"\n        }],\n        // component: <Input placeholder=\"请输入\" />,\n        component: SelectOption(_this.state.algoList, {\n          placeholder: \"请选择\",\n          disabled: true // onChange: this.inputChange,\n\n        })\n      }, {\n        label: \"股票代码\",\n        id: \"sec_id\",\n        initialValue: \"000001\",\n        rules: [{\n          required: true,\n          message: \"参数不能为空\"\n        }],\n        component: // <Input placeholder=\"请输入\" readOnly disabled />\n        React.createElement(_Input, {\n          placeholder: \"\\u8BF7\\u8F93\\u5165\",\n          disabled: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 359\n          },\n          __self: this\n        })\n      }, {\n        label: \"开仓率\",\n        id: \"open_rate\",\n        initialValue: \"0\",\n        rules: [{\n          required: true,\n          message: \"参数不能为空\"\n        }, // {\n        //     message: \"请输入0%-100% 之间的数\",\n        //     pattern: new RegExp(\n        //         \"(^(\\\\d|[1-9]\\\\d)(\\\\.\\\\d{1,2})?$)|(^100$)\"\n        //     ),\n        // },\n        {\n          message: \"请输入数字\",\n          pattern: new RegExp(\"^\\\\d+$\")\n        }, {\n          validator: checkLength(10),\n          trigger: [\"change\", \"blur\"]\n        }],\n        component: React.createElement(_Input, {\n          placeholder: \"\\u8BF7\\u8F93\\u5165\",\n          suffix: \"%\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 386\n          },\n          __self: this\n        })\n      }, {\n        label: \"收益率\",\n        id: \"income_rate\",\n        initialValue: \"0\",\n        rules: [{\n          required: true,\n          message: \"参数不能为空\"\n        }, {\n          message: \"请输入数字\",\n          pattern: new RegExp(\"^\\\\d+$\")\n        }, {\n          validator: checkLength(10),\n          trigger: [\"change\", \"blur\"]\n        }],\n        component: React.createElement(_Input, {\n          placeholder: \"\\u8BF7\\u8F93\\u5165\",\n          suffix: \"%\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 406\n          },\n          __self: this\n        })\n      }, {\n        label: \"基点\",\n        id: \"basis_point\",\n        initialValue: \"0\",\n        rules: [{\n          required: true,\n          message: \"参数不能为空\"\n        }, {\n          message: \"请输入数字\",\n          pattern: new RegExp(\"^\\\\d+$\")\n        }, {\n          validator: checkLength(10),\n          trigger: [\"change\", \"blur\"]\n        }],\n        component: React.createElement(_Input, {\n          placeholder: \"\\u8BF7\\u8F93\\u5165\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 426\n          },\n          __self: this\n        })\n      }];\n    };\n\n    _this.handleTableChange = function (selectedRowKeys) {\n      console.log(\"批量选择\");\n\n      _this.setState({\n        selectRow: selectedRowKeys\n      });\n    };\n\n    _this.handleInsertRecord = function (fromData) {\n      console.log(\"新增接口\", fromData); // let provider = this.state.providerList.find(\n      //     (item) => item.key == fromData.provider_id\n      // );\n      // if (!provider) {\n      //     message.error(\"算法厂商名不存在\");\n      //     return;\n      // }\n\n      var algo = _this.state.algoInfoList.find(function (item) {\n        return item.id == fromData.algo_id;\n      });\n\n      console.log(algo);\n\n      if (!algo) {\n        message.error(\"算法不存在\");\n        return;\n      }\n\n      if (fromData.sec_id.length > 6) {\n        fromData.sec_id = fromData.sec_id.substring(0, 6);\n      } // console.log(fromData.sec_id);\n\n\n      var sec = _this.state.securityList.find(function (item) {\n        return item.includes(fromData.sec_id);\n      }); // console.log(this.state.securityList, sec);\n\n\n      if (!sec) {\n        message.error(\"股票代码不存在\");\n        return;\n      }\n\n      var params = {\n        provider_id: algo.uuserId / 1,\n        provider_name: algo.algoName,\n        sec_id: fromData.sec_id,\n        sec_name: _this.securityObj[fromData.sec_id],\n        algo_id: algo.id / 1,\n        algo_type: algo.algorithmType / 1,\n        algo_name: algo.algoName,\n        open_rate: fromData.open_rate / 1,\n        income_rate: fromData.income_rate / 1,\n        basis_point: fromData.basis_point / 1\n      }; // console.log(params);\n      // return;\n\n      pfhttp.post({\n        url: \"/algo-assess/v1/assess/add-optimize-base\",\n        data: params // baseUrl: window.pfBaseUrl,\n\n      }).then(function (res) {\n        console.log(res);\n        var msg = res.msg;\n\n        if (res.code == 0) {\n          message.success(msg); // this.getData();\n        } else if (res.code == 20000) {\n          message.error(msg.substring(msg.indexOf(\"[\") + 1, msg.lastIndexOf(\"]\")));\n        } else {\n          message.error(msg);\n        }\n\n        _this.isAction = true;\n      });\n    };\n\n    _this.handleUpdateRecord = function (_ref2) {\n      var form = _ref2.form;\n      // console.log(form.getFieldsValue());\n      // console.log(this.record);\n      var formData = form.getFieldsValue();\n      var params = {\n        id: _this.record.id,\n        provider_id: _this.record.provider_id / 1,\n        provider_name: _this.record.provider_name,\n        sec_id: _this.record.sec_id,\n        sec_name: _this.record.sec_name,\n        algo_id: _this.record.algo_id / 1,\n        algo_type: _this.record.algo_type / 1,\n        algo_name: _this.record.algo_name,\n        open_rate: formData.open_rate / 1,\n        income_rate: formData.income_rate / 1,\n        basis_point: formData.basis_point / 1\n      }; // console.log(params);\n      // return;\n      // 发送更新请求\n\n      pfhttp.post({\n        url: \"/algo-assess/v1/assess/update-optimize-base\",\n        data: params // baseUrl: window.pfBaseUrl,\n\n      }).then(function (res) {\n        var msg = res.msg;\n\n        if (res.code == 0) {\n          message.success(msg); // this.getData();\n        } else if (res.code == 20000) {\n          message.error(msg.substring(msg.indexOf(\"[\") + 1, msg.lastIndexOf(\"]\")));\n        } else {\n          message.error(msg);\n        }\n\n        _this.isAction = true;\n      });\n    };\n\n    _this.handleDeleteRecord = function (record) {\n      console.log(\"删除记录 \", record);\n    };\n\n    _this.setUpdateModal = function (_ref3) {\n      var form = _ref3.form,\n          record = _ref3.record;\n      _this.record = record;\n      form.setFieldsValue({\n        // provider_id: record.uuserId / 1,\n        // provider_name: record.algoName,\n        sec_id: record.sec_id,\n        // sec_name: record.sec_name,\n        algo_id: record.algo_id,\n        // algo_type: record.algo_id,\n        // algo_name: record.algo_id,\n        open_rate: record.open_rate,\n        income_rate: record.income_rate,\n        basis_point: record.basis_point\n      });\n    };\n\n    _this.getData = function () {\n      var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var pagination = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n        current: 1,\n        pageSize: 13\n      };\n\n      if (!params.provider_id) {\n        params.provider_id = 0;\n      }\n\n      if (!params.algo_id) {\n        params.algo_id = 0;\n      }\n\n      if (!params.sec_id) {\n        params.sec_id = \"\";\n      }\n\n      if (params.sec_id.length > 6) {\n        params.sec_id = params.sec_id.substring(0, 6);\n      } // console.log(params.sec_id);\n\n\n      params.provider_id = params.provider_id / 1;\n      params.algo_id = params.algo_id / 1;\n      params.algo_type = 1;\n      params = _objectSpread({}, params, {\n        page: pagination.current / 1,\n        limit: pagination.pageSize / 1\n      }); // console.log(params);\n\n      pfhttp.post({\n        // url: \"/risk/queryRisk\",\n        url: \"/algo-assess/v1/assess/select-optimize-base\",\n        data: params // baseUrl: window.pfBaseUrl,\n\n      }).then(function (res) {\n        // console.log(res);\n        // return;\n        //解析数据字典\n        if (res.data && res.data.length > 0) {\n          // parseDict(res.data.records);\n          parseArrDictValue(res.data, \"algo_type\", \"algorithmType\"); // parseDictValue(res.data);\n          // showTip(this);\n        } else {\n          message.info(\"查询结果为空\");\n        }\n\n        var pgn = {\n          // current: res.data.current,\n          // pageSize: pagination.pageSize,\n          current: pagination.current,\n          pageSize: pagination.pageSize,\n          total: res.total || 0\n        };\n        var resArr = res.data;\n\n        if (!res.data) {\n          resArr = [];\n        }\n\n        _this.setState({\n          info: resArr,\n          pagination: pgn\n        });\n      });\n    };\n\n    _this.getProvider = function () {\n      var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      // return;\n      http.get({\n        // url: \"/risk/queryRisk\",\n        url: \"/algo/listProvider\",\n        data: params\n      }).then(function (res) {\n        // console.log(res);\n        var idArr = [];\n\n        if (res.data && res.data.length > 0) {\n          var dataArr = res.data;\n\n          if (dataArr.length > 0) {\n            idArr = dataArr.map(function (item) {\n              var obj = {}; // obj.key = item.providerName + \"-\" + item.uuserId;\n              // obj.value = item.providerName + \"-\" + item.uuserId;\n\n              obj.key = item.id; // obj.value = item.userName + \"-\" + item.id;\n\n              obj.value = item.userName;\n              return obj;\n            }); // console.log(idArr);\n          }\n        }\n\n        _this.setState({\n          providerList: idArr\n        });\n      });\n    };\n\n    _this.getT0AlgoList = function () {\n      var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      // return;\n      http.get({\n        // url: \"/risk/queryRisk\",\n        url: \"/algo/listAll\",\n        data: params\n      }).then(function (res) {\n        // console.log(res);\n        var idArr = [];\n        var infoArr = [];\n\n        if (res.data && res.data.length > 0) {\n          var dataArr = res.data.filter(function (item) {\n            return item.algorithmType == 1;\n          });\n\n          if (dataArr.length > 0) {\n            infoArr = dataArr;\n            idArr = dataArr.map(function (item) {\n              var obj = {};\n              obj.key = item.id;\n              obj.value = item.algoName;\n              return obj;\n            }); // console.log(idArr);\n          }\n        }\n\n        _this.setState({\n          algoList: idArr,\n          algoInfoList: infoArr\n        });\n      });\n    };\n\n    _this.getSecurityList = function () {\n      var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      // return;\n      http.get({\n        // url: \"/risk/queryRisk\",\n        url: \"/security/listAll\",\n        data: params\n      }).then(function (res) {\n        console.log(\"获取所有股票\", res);\n        var optionArr = [];\n        var securityIdArr = [];\n        _this.securityObj = {};\n\n        if (res.data && res.data.length > 0) {\n          var dataArr = res.data;\n\n          if (dataArr.length > 0) {\n            dataArr.forEach(function (item, i) {\n              var sec = item.securityId.trim();\n\n              if (!securityIdArr.includes(sec) && sec.length > 0) {\n                // securityIdArr.push(sec);\n                securityIdArr.push(sec + \" \" + item.securityName.trim());\n                _this.securityObj[sec] = item.securityName;\n              }\n            });\n\n            if (securityIdArr.length > 0) {\n              optionArr = securityIdArr.length > 10 ? securityIdArr.slice(0, 10) : securityIdArr;\n            }\n          }\n        }\n\n        _this.setState({\n          securityList: securityIdArr,\n          currentDataLists: optionArr,\n          currentDataLists2: optionArr\n        });\n      });\n    };\n\n    _this.handleSearch = function (params, pagination) {\n      _this.getData(params, pagination);\n    };\n\n    _this.getPfUrl = function (sucCallback) {\n      // return;\n      // http.get({\n      //     // url: \"/risk/queryRisk\",\n      //     url: \"/connect/getConnect\",\n      //     // data: {},\n      // }).then((res) => {\n      //     if (\n      //         res.assessOperateConnect &&\n      //         res.assessOperateConnect.ip &&\n      //         res.assessOperateConnect.port\n      //     ) {\n      //         window.pfBaseUrl =\n      //             res.assessOperateConnect.ip +\n      //             \":\" +\n      //             res.assessOperateConnect.port;\n      //         if (window.pfBaseUrl.indexOf(\"http://\") < 0) {\n      //             window.pfBaseUrl = \"http://\" + window.pfBaseUrl;\n      //         }\n      //         this.setState({\n      //             uploadUrl:\n      //                 window.pfBaseUrl +\n      //                 \"/algo-assess/v1/assess/upload-optimize-base\",\n      //             downloadUrl:\n      //                 window.pfBaseUrl +\n      //                 \"/algo-assess/v1/assess/download-optimize-base\",\n      //         });\n      //         if (sucCallback) {\n      //             sucCallback();\n      //         }\n      //     }\n      // });\n      _this.setState({\n        uploadUrl: \"/assess\" + \"/algo-assess/v1/assess/upload-optimize-base\",\n        downloadUrl: \"/assess\" + \"/algo-assess/v1/assess/download-optimize-base\"\n      });\n\n      if (sucCallback) {\n        sucCallback();\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(algoBest, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.getProvider();\n      this.getT0AlgoList();\n      this.getSecurityList();\n\n      var sucCallback = function sucCallback() {\n        _this2.getData();\n      };\n\n      this.getPfUrl(sucCallback);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var scroll = {\n        x: 1200,\n        y: 445\n      };\n      var info = this.state.info; //批量\n      // let { selectRow } = this.state;\n      // const rowSelection = {\n      //     selectRow,\n      //     onChange: this.handleTableChange,\n      // };\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 797\n        },\n        __self: this\n      }, React.createElement(CurdComponent // rowKey={\"index\"}\n      // btnText2=\"查全部\"\n      // isShowSearchForm={false}\n      , {\n        onSearchClick: this.handleSearch,\n        getSearchFormFields: this.getSearchFormFields // searchLoading={this.state.searchLoading}\n        ,\n        insertBtnText: \"新增\" // 不传 就没新增按钮\n        ,\n        getInsertFormFields: this.getInsertFormFields,\n        insertRecord: this.handleInsertRecord // col=\"2\"\n        ,\n        width: \"600px\",\n        pagination: this.state.pagination,\n        getUpdateFormFields: this.getUpdateFormFields,\n        setUpdateModal: this.setUpdateModal,\n        updateRecord: this.handleUpdateRecord // 不传 就没编辑\n        // deleteRecord={this.handleDeleteRecord} // 不传 就没删除\n        ,\n        insertModalText: \"\\u65B0\\u589ET0\\u4F18\\u9009\\u7B97\\u6CD5\",\n        updateModalText: \"\\u4FEE\\u6539T0\\u4F18\\u9009\\u7B97\\u6CD5\",\n        centered: true,\n        columns: columns,\n        dataSource: info,\n        scroll: scroll // rowSelection={rowSelection} //批量选择 操作\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 798\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        urlPrefix: \"/algo-assess/v1/assess/download-optimize-base\",\n        title: \"\\u7B97\\u6CD5\\u4F18\\u9009\",\n        downloadUrl: this.state.downloadUrl,\n        uploadUrl: this.state.uploadUrl,\n        sucCallback: this.getData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 823\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return algoBest;\n}(React.PureComponent);\n\nexport { algoBest as default };","map":{"version":3,"sources":["D:/company/algo-manage/src/algo/modules/manage/pages/algoBest/index.js"],"names":["React","CurdComponent","SelectOption","Option","columns","params","title","dataIndex","width","algoBest","state","searchLoading","selectRow","info","pagination","current","pageSize","total","providerList","algoList","algoInfoList","securityList","currentDataLists","currentDataLists2","currentDataListsAdd","securityObj","uploadUrl","downloadUrl","getSearchFormFields","label","id","component","placeholder","allowClear","map","renderOption","handleChange","item","substring","value","filter","toUpperCase","includes","optionArr","length","slice","setState","handleChange2","getInsertFormFields","initialValue","rules","required","message","pattern","RegExp","validator","checkLength","trigger","getUpdateFormFields","disabled","handleTableChange","selectedRowKeys","console","log","handleInsertRecord","fromData","algo","find","algo_id","error","sec_id","sec","provider_id","uuserId","provider_name","algoName","sec_name","algo_type","algorithmType","algo_name","open_rate","income_rate","basis_point","pfhttp","post","url","data","then","res","msg","code","success","indexOf","lastIndexOf","isAction","handleUpdateRecord","form","formData","getFieldsValue","record","handleDeleteRecord","setUpdateModal","setFieldsValue","getData","page","limit","parseArrDictValue","pgn","resArr","getProvider","http","get","idArr","dataArr","obj","key","userName","getT0AlgoList","infoArr","getSecurityList","securityIdArr","forEach","i","securityId","trim","push","securityName","handleSearch","getPfUrl","sucCallback","scroll","x","y","PureComponent"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport CurdComponent from \"@/components/CurdComponent\";\r\nimport SelectOption from \"@/components/SelectOption\";\r\nimport { Input, AutoComplete } from \"antd\";\r\nconst { Option } = AutoComplete;\r\n\r\nlet columns = (params) => {\r\n    return [\r\n        {\r\n            title: \"ID\",\r\n            dataIndex: \"id\",\r\n        },\r\n        {\r\n            title: \"算法厂商\",\r\n            dataIndex: \"provider_name\",\r\n        },\r\n        {\r\n            title: \"算法类型\",\r\n            dataIndex: \"algo_typeValue\",\r\n        },\r\n        {\r\n            title: \"算法名称\",\r\n            dataIndex: \"algo_name\",\r\n        },\r\n        {\r\n            title: \"股票代码\",\r\n            dataIndex: \"sec_id\",\r\n        },\r\n        {\r\n            title: \"股票名称\",\r\n            dataIndex: \"sec_name\",\r\n        },\r\n        {\r\n            title: \"开仓率(%)\",\r\n            dataIndex: \"open_rate\",\r\n        },\r\n        {\r\n            title: \"收益率(%)\",\r\n            dataIndex: \"income_rate\",\r\n        },\r\n        {\r\n            title: \"基点\",\r\n            dataIndex: \"basis_point\",\r\n        },\r\n        {\r\n            title: \"创建时间\",\r\n            dataIndex: \"create_time\",\r\n            width: 180,\r\n        },\r\n    ];\r\n};\r\n\r\nexport default class algoBest extends React.PureComponent {\r\n    state = {\r\n        searchLoading: false,\r\n        selectRow: [],\r\n        info: [],\r\n        pagination: { current: 1, pageSize: 11, total: 0 },\r\n        providerList: [],\r\n        algoList: [],\r\n        algoInfoList: [],\r\n        securityList: [],\r\n        currentDataLists: [],\r\n        currentDataLists2: [],\r\n        currentDataListsAdd: [],\r\n        securityObj: {},\r\n        uploadUrl: \"\",\r\n        downloadUrl: \"\",\r\n    };\r\n    getSearchFormFields = () => {\r\n        return [\r\n            {\r\n                label: \"算法厂商\",\r\n                id: \"provider_id\",\r\n                component: SelectOption(this.state.providerList, {\r\n                    placeholder: \"请选择\",\r\n                    allowClear: true,\r\n                    // onChange: this.inputChange,\r\n                }),\r\n            },\r\n            // {\r\n            //     label: \"算法类型\",\r\n            //     id: \"algo_type\",\r\n            //     component: SelectOption(dict.algorithmType, {\r\n            //         placeholder: \"请选择\",\r\n            //         allowClear: true,\r\n            //     }),\r\n            // },\r\n            {\r\n                label: \"算法\",\r\n                label: <span>算&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;法</span>,\r\n                id: \"algo_id\",\r\n                component: SelectOption(this.state.algoList, {\r\n                    placeholder: \"请选择\",\r\n                    allowClear: true,\r\n                }),\r\n            },\r\n            {\r\n                label: \"股票代码\",\r\n                id: \"sec_id\",\r\n                // component: <Input placeholder=\"请输入：接口返回？\" />,\r\n                component: (\r\n                    <AutoComplete\r\n                        placeholder=\"请输入\"\r\n                        dataSource={this.state.currentDataLists.map(\r\n                            this.renderOption\r\n                        )}\r\n                        onChange={this.handleChange}\r\n                        allowClear={true}\r\n                        optionLabelProp=\"text\"\r\n                    />\r\n                ),\r\n            },\r\n        ];\r\n    };\r\n    renderOption = (item) => {\r\n        return (\r\n            <Option key={item} text={item.substring(0, 6)}>\r\n                {item}\r\n            </Option>\r\n        );\r\n    };\r\n    handleChange = (value) => {\r\n        // console.log(value);\r\n        if (value) {\r\n            const { securityList } = this.state;\r\n            let currentDataLists = securityList.filter((item) =>\r\n                item.toUpperCase().includes(value.toUpperCase())\r\n            );\r\n            // console.log(currentDataLists);\r\n            let optionArr = [];\r\n            if (currentDataLists.length > 0) {\r\n                optionArr =\r\n                    currentDataLists.length > 10\r\n                        ? currentDataLists.slice(0, 10)\r\n                        : currentDataLists;\r\n            }\r\n            this.setState({ currentDataLists: optionArr });\r\n        } else {\r\n            const { securityList } = this.state;\r\n            let currentDataLists = securityList;\r\n            let optionArr = [];\r\n            if (currentDataLists.length > 0) {\r\n                optionArr =\r\n                    currentDataLists.length > 10\r\n                        ? currentDataLists.slice(0, 10)\r\n                        : currentDataLists;\r\n            }\r\n            this.setState({ currentDataLists: optionArr });\r\n        }\r\n    };\r\n    handleChange2 = (value) => {\r\n        if (value) {\r\n            const { securityList } = this.state;\r\n            let currentDataLists = securityList.filter((item) =>\r\n                item.toUpperCase().includes(value.toUpperCase())\r\n            );\r\n            // console.log(currentDataLists);\r\n            let optionArr = [];\r\n            if (currentDataLists.length > 0) {\r\n                optionArr =\r\n                    currentDataLists.length > 10\r\n                        ? currentDataLists.slice(0, 10)\r\n                        : currentDataLists;\r\n            }\r\n            this.setState({ currentDataLists2: optionArr });\r\n        } else {\r\n            const { securityList } = this.state;\r\n            let currentDataLists = securityList;\r\n            let optionArr = [];\r\n            if (currentDataLists.length > 0) {\r\n                optionArr =\r\n                    currentDataLists.length > 10\r\n                        ? currentDataLists.slice(0, 10)\r\n                        : currentDataLists;\r\n            }\r\n            this.setState({ currentDataLists2: optionArr });\r\n        }\r\n    };\r\n    getInsertFormFields = () => {\r\n        return [\r\n            // {\r\n            //     label: \"算法厂商\",\r\n            //     id: \"provider_id\",\r\n            //     initialValue: \"\",\r\n            //     rules: [\r\n            //         {\r\n            //             required: true,\r\n            //             message: \"参数不能为空\",\r\n            //         },\r\n            //     ],\r\n            //     // component: <Input placeholder=\"请输入\" />,\r\n            //     component: SelectOption(this.state.providerList, {\r\n            //         placeholder: \"请选择\",\r\n            //         // onChange: this.inputChange,\r\n            //     }),\r\n            // },\r\n            {\r\n                label: \"算法\",\r\n                id: \"algo_id\",\r\n                initialValue: \"\",\r\n                rules: [\r\n                    {\r\n                        required: true,\r\n                        message: \"参数不能为空\",\r\n                    },\r\n                ],\r\n                // component: <Input placeholder=\"请输入\" />,\r\n                component: SelectOption(this.state.algoList, {\r\n                    placeholder: \"请选择\",\r\n                    // onChange: this.inputChange,\r\n                }),\r\n            },\r\n            {\r\n                label: \"股票代码\",\r\n                id: \"sec_id\",\r\n                // initialValue: \"000001\",\r\n                rules: [\r\n                    {\r\n                        required: true,\r\n                        message: \"参数不能为空\",\r\n                    },\r\n                    // {\r\n                    //     validator: checkLength(8),\r\n                    //     trigger: [\"change\", \"blur\"],\r\n                    // },\r\n                ],\r\n                // component: (\r\n                //     // <Input placeholder=\"请输入\" readOnly disabled />\r\n                //     <Input placeholder=\"请输入\" />\r\n                // ),\r\n                component: (\r\n                    <AutoComplete\r\n                        dataSource={this.state.currentDataLists2.map(\r\n                            this.renderOption\r\n                        )}\r\n                        // dataSource={this.state.currentDataLists2}\r\n                        allowClear={true}\r\n                        onChange={this.handleChange2}\r\n                        optionLabelProp=\"text\"\r\n                    />\r\n                ),\r\n            },\r\n            {\r\n                label: \"开仓率\",\r\n                id: \"open_rate\",\r\n                initialValue: \"0\",\r\n                rules: [\r\n                    {\r\n                        required: true,\r\n                        message: \"参数不能为空\",\r\n                    },\r\n                    // {\r\n                    //     message: \"请输入0%-100% 之间的数\",\r\n                    //     pattern: new RegExp(\r\n                    //         \"(^(\\\\d|[1-9]\\\\d)(\\\\.\\\\d{1,2})?$)|(^100$)\"\r\n                    //     ),\r\n                    // },\r\n                    {\r\n                        message: \"请输入数字\",\r\n                        pattern: new RegExp(\"^\\\\d+$\"),\r\n                    },\r\n                    {\r\n                        validator: checkLength(10),\r\n                        trigger: [\"change\", \"blur\"],\r\n                    },\r\n                ],\r\n                component: <Input placeholder=\"请输入\" suffix=\"%\" />,\r\n            },\r\n            {\r\n                label: \"收益率\",\r\n                id: \"income_rate\",\r\n                initialValue: \"0\",\r\n                rules: [\r\n                    {\r\n                        required: true,\r\n                        message: \"参数不能为空\",\r\n                    },\r\n                    {\r\n                        message: \"请输入数字\",\r\n                        pattern: new RegExp(\"^\\\\d+$\"),\r\n                    },\r\n                    {\r\n                        validator: checkLength(10),\r\n                        trigger: [\"change\", \"blur\"],\r\n                    },\r\n                ],\r\n                component: <Input placeholder=\"请输入\" suffix=\"%\" />,\r\n            },\r\n            {\r\n                label: \"基点\",\r\n                id: \"basis_point\",\r\n                initialValue: \"0\",\r\n                rules: [\r\n                    {\r\n                        required: true,\r\n                        message: \"参数不能为空\",\r\n                    },\r\n                    {\r\n                        message: \"请输入数字\",\r\n                        pattern: new RegExp(\"^\\\\d+$\"),\r\n                    },\r\n                    {\r\n                        validator: checkLength(10),\r\n                        trigger: [\"change\", \"blur\"],\r\n                    },\r\n                ],\r\n                component: <Input placeholder=\"请输入\" />,\r\n            },\r\n        ];\r\n    };\r\n    getUpdateFormFields = () => {\r\n        return [\r\n            // {\r\n            //     label: \"算法厂商\",\r\n            //     id: \"provider_id\",\r\n            //     initialValue: \"\",\r\n            //     rules: [\r\n            //         {\r\n            //             required: true,\r\n            //             message: \"参数不能为空\",\r\n            //         },\r\n            //     ],\r\n            //     // component: <Input placeholder=\"请输入\" />,\r\n            //     component: SelectOption(this.state.providerList, {\r\n            //         placeholder: \"请选择\",\r\n            //         // onChange: this.inputChange,\r\n            //     }),\r\n            // },\r\n            {\r\n                label: \"算法\",\r\n                id: \"algo_id\",\r\n                initialValue: \"\",\r\n                rules: [\r\n                    {\r\n                        required: true,\r\n                        message: \"参数不能为空\",\r\n                    },\r\n                ],\r\n                // component: <Input placeholder=\"请输入\" />,\r\n                component: SelectOption(this.state.algoList, {\r\n                    placeholder: \"请选择\",\r\n                    disabled: true,\r\n                    // onChange: this.inputChange,\r\n                }),\r\n            },\r\n            {\r\n                label: \"股票代码\",\r\n                id: \"sec_id\",\r\n                initialValue: \"000001\",\r\n                rules: [\r\n                    {\r\n                        required: true,\r\n                        message: \"参数不能为空\",\r\n                    },\r\n                ],\r\n                component: (\r\n                    // <Input placeholder=\"请输入\" readOnly disabled />\r\n                    <Input placeholder=\"请输入\" disabled />\r\n                ),\r\n            },\r\n            {\r\n                label: \"开仓率\",\r\n                id: \"open_rate\",\r\n                initialValue: \"0\",\r\n                rules: [\r\n                    {\r\n                        required: true,\r\n                        message: \"参数不能为空\",\r\n                    },\r\n                    // {\r\n                    //     message: \"请输入0%-100% 之间的数\",\r\n                    //     pattern: new RegExp(\r\n                    //         \"(^(\\\\d|[1-9]\\\\d)(\\\\.\\\\d{1,2})?$)|(^100$)\"\r\n                    //     ),\r\n                    // },\r\n                    {\r\n                        message: \"请输入数字\",\r\n                        pattern: new RegExp(\"^\\\\d+$\"),\r\n                    },\r\n                    {\r\n                        validator: checkLength(10),\r\n                        trigger: [\"change\", \"blur\"],\r\n                    },\r\n                ],\r\n                component: <Input placeholder=\"请输入\" suffix=\"%\" />,\r\n            },\r\n            {\r\n                label: \"收益率\",\r\n                id: \"income_rate\",\r\n                initialValue: \"0\",\r\n                rules: [\r\n                    {\r\n                        required: true,\r\n                        message: \"参数不能为空\",\r\n                    },\r\n                    {\r\n                        message: \"请输入数字\",\r\n                        pattern: new RegExp(\"^\\\\d+$\"),\r\n                    },\r\n                    {\r\n                        validator: checkLength(10),\r\n                        trigger: [\"change\", \"blur\"],\r\n                    },\r\n                ],\r\n                component: <Input placeholder=\"请输入\" suffix=\"%\" />,\r\n            },\r\n            {\r\n                label: \"基点\",\r\n                id: \"basis_point\",\r\n                initialValue: \"0\",\r\n                rules: [\r\n                    {\r\n                        required: true,\r\n                        message: \"参数不能为空\",\r\n                    },\r\n                    {\r\n                        message: \"请输入数字\",\r\n                        pattern: new RegExp(\"^\\\\d+$\"),\r\n                    },\r\n                    {\r\n                        validator: checkLength(10),\r\n                        trigger: [\"change\", \"blur\"],\r\n                    },\r\n                ],\r\n                component: <Input placeholder=\"请输入\" />,\r\n            },\r\n        ];\r\n    };\r\n    //批量选择\r\n    handleTableChange = (selectedRowKeys) => {\r\n        console.log(\"批量选择\");\r\n        this.setState({\r\n            selectRow: selectedRowKeys,\r\n        });\r\n    };\r\n\r\n    handleInsertRecord = (fromData) => {\r\n        console.log(\"新增接口\", fromData);\r\n        // let provider = this.state.providerList.find(\r\n        //     (item) => item.key == fromData.provider_id\r\n        // );\r\n        // if (!provider) {\r\n        //     message.error(\"算法厂商名不存在\");\r\n        //     return;\r\n        // }\r\n        let algo = this.state.algoInfoList.find(\r\n            (item) => item.id == fromData.algo_id\r\n        );\r\n        console.log(algo);\r\n        if (!algo) {\r\n            message.error(\"算法不存在\");\r\n            return;\r\n        }\r\n        if (fromData.sec_id.length > 6) {\r\n            fromData.sec_id = fromData.sec_id.substring(0, 6);\r\n        }\r\n        // console.log(fromData.sec_id);\r\n        let sec = this.state.securityList.find((item) =>\r\n            item.includes(fromData.sec_id)\r\n        );\r\n        // console.log(this.state.securityList, sec);\r\n        if (!sec) {\r\n            message.error(\"股票代码不存在\");\r\n            return;\r\n        }\r\n        let params = {\r\n            provider_id: algo.uuserId / 1,\r\n            provider_name: algo.algoName,\r\n            sec_id: fromData.sec_id,\r\n            sec_name: this.securityObj[fromData.sec_id],\r\n            algo_id: algo.id / 1,\r\n            algo_type: algo.algorithmType / 1,\r\n            algo_name: algo.algoName,\r\n            open_rate: fromData.open_rate / 1,\r\n            income_rate: fromData.income_rate / 1,\r\n            basis_point: fromData.basis_point / 1,\r\n        };\r\n        // console.log(params);\r\n        // return;\r\n        pfhttp\r\n            .post({\r\n                url: \"/algo-assess/v1/assess/add-optimize-base\",\r\n                data: params,\r\n                // baseUrl: window.pfBaseUrl,\r\n            })\r\n            .then((res) => {\r\n                console.log(res);\r\n                let msg = res.msg;\r\n                if (res.code == 0) {\r\n                    message.success(msg);\r\n                    // this.getData();\r\n                } else if (res.code == 20000) {\r\n                    message.error(\r\n                        msg.substring(\r\n                            msg.indexOf(\"[\") + 1,\r\n                            msg.lastIndexOf(\"]\")\r\n                        )\r\n                    );\r\n                } else {\r\n                    message.error(msg);\r\n                }\r\n                this.isAction = true;\r\n            });\r\n    };\r\n    //更新记录\r\n    handleUpdateRecord = ({ form }) => {\r\n        // console.log(form.getFieldsValue());\r\n        // console.log(this.record);\r\n        let formData = form.getFieldsValue();\r\n        let params = {\r\n            id: this.record.id,\r\n            provider_id: this.record.provider_id / 1,\r\n            provider_name: this.record.provider_name,\r\n            sec_id: this.record.sec_id,\r\n            sec_name: this.record.sec_name,\r\n            algo_id: this.record.algo_id / 1,\r\n            algo_type: this.record.algo_type / 1,\r\n            algo_name: this.record.algo_name,\r\n            open_rate: formData.open_rate / 1,\r\n            income_rate: formData.income_rate / 1,\r\n            basis_point: formData.basis_point / 1,\r\n        };\r\n        // console.log(params);\r\n        // return;\r\n        // 发送更新请求\r\n        pfhttp\r\n            .post({\r\n                url: \"/algo-assess/v1/assess/update-optimize-base\",\r\n                data: params,\r\n                // baseUrl: window.pfBaseUrl,\r\n            })\r\n            .then((res) => {\r\n                let msg = res.msg;\r\n                if (res.code == 0) {\r\n                    message.success(msg);\r\n                    // this.getData();\r\n                } else if (res.code == 20000) {\r\n                    message.error(\r\n                        msg.substring(\r\n                            msg.indexOf(\"[\") + 1,\r\n                            msg.lastIndexOf(\"]\")\r\n                        )\r\n                    );\r\n                } else {\r\n                    message.error(msg);\r\n                }\r\n                this.isAction = true;\r\n            });\r\n    };\r\n    //删除记录\r\n    handleDeleteRecord = (record) => {\r\n        console.log(\"删除记录 \", record);\r\n    };\r\n    //填入更新数据\r\n    setUpdateModal = ({ form, record }) => {\r\n        this.record = record;\r\n        form.setFieldsValue({\r\n            // provider_id: record.uuserId / 1,\r\n            // provider_name: record.algoName,\r\n            sec_id: record.sec_id,\r\n            // sec_name: record.sec_name,\r\n            algo_id: record.algo_id,\r\n            // algo_type: record.algo_id,\r\n            // algo_name: record.algo_id,\r\n            open_rate: record.open_rate,\r\n            income_rate: record.income_rate,\r\n            basis_point: record.basis_point,\r\n        });\r\n    };\r\n    getData = (params = {}, pagination = { current: 1, pageSize: 13 }) => {\r\n        if (!params.provider_id) {\r\n            params.provider_id = 0;\r\n        }\r\n        if (!params.algo_id) {\r\n            params.algo_id = 0;\r\n        }\r\n        if (!params.sec_id) {\r\n            params.sec_id = \"\";\r\n        }\r\n        if (params.sec_id.length > 6) {\r\n            params.sec_id = params.sec_id.substring(0, 6);\r\n        }\r\n        // console.log(params.sec_id);\r\n        params.provider_id = params.provider_id / 1;\r\n        params.algo_id = params.algo_id / 1;\r\n        params.algo_type = 1;\r\n        params = {\r\n            ...params,\r\n            page: pagination.current / 1,\r\n            limit: pagination.pageSize / 1,\r\n        };\r\n        // console.log(params);\r\n        pfhttp\r\n            .post({\r\n                // url: \"/risk/queryRisk\",\r\n                url: \"/algo-assess/v1/assess/select-optimize-base\",\r\n                data: params,\r\n                // baseUrl: window.pfBaseUrl,\r\n            })\r\n            .then((res) => {\r\n                // console.log(res);\r\n                // return;\r\n                //解析数据字典\r\n                if (res.data && res.data.length > 0) {\r\n                    // parseDict(res.data.records);\r\n                    parseArrDictValue(res.data, \"algo_type\", \"algorithmType\");\r\n                    // parseDictValue(res.data);\r\n                    // showTip(this);\r\n                } else {\r\n                    message.info(\"查询结果为空\");\r\n                }\r\n                let pgn = {\r\n                    // current: res.data.current,\r\n                    // pageSize: pagination.pageSize,\r\n                    current: pagination.current,\r\n                    pageSize: pagination.pageSize,\r\n                    total: res.total || 0,\r\n                };\r\n                let resArr = res.data;\r\n                if (!res.data) {\r\n                    resArr = [];\r\n                }\r\n                this.setState({\r\n                    info: resArr,\r\n                    pagination: pgn,\r\n                });\r\n            });\r\n    };\r\n    //获取所有厂商\r\n    getProvider = (params = {}) => {\r\n        // return;\r\n        http.get({\r\n            // url: \"/risk/queryRisk\",\r\n            url: \"/algo/listProvider\",\r\n            data: params,\r\n        }).then((res) => {\r\n            // console.log(res);\r\n            let idArr = [];\r\n            if (res.data && res.data.length > 0) {\r\n                let dataArr = res.data;\r\n                if (dataArr.length > 0) {\r\n                    idArr = dataArr.map((item) => {\r\n                        let obj = {};\r\n                        // obj.key = item.providerName + \"-\" + item.uuserId;\r\n                        // obj.value = item.providerName + \"-\" + item.uuserId;\r\n                        obj.key = item.id;\r\n                        // obj.value = item.userName + \"-\" + item.id;\r\n                        obj.value = item.userName;\r\n                        return obj;\r\n                    });\r\n                    // console.log(idArr);\r\n                }\r\n            }\r\n            this.setState({\r\n                providerList: idArr,\r\n            });\r\n        });\r\n    };\r\n    //获取所有T0算法\r\n    getT0AlgoList = (params = {}) => {\r\n        // return;\r\n        http.get({\r\n            // url: \"/risk/queryRisk\",\r\n            url: \"/algo/listAll\",\r\n            data: params,\r\n        }).then((res) => {\r\n            // console.log(res);\r\n            let idArr = [];\r\n            let infoArr = [];\r\n            if (res.data && res.data.length > 0) {\r\n                let dataArr = res.data.filter(\r\n                    (item) => item.algorithmType == 1\r\n                );\r\n                if (dataArr.length > 0) {\r\n                    infoArr = dataArr;\r\n                    idArr = dataArr.map((item) => {\r\n                        let obj = {};\r\n                        obj.key = item.id;\r\n                        obj.value = item.algoName;\r\n                        return obj;\r\n                    });\r\n                    // console.log(idArr);\r\n                }\r\n            }\r\n            this.setState({\r\n                algoList: idArr,\r\n                algoInfoList: infoArr,\r\n            });\r\n        });\r\n    };\r\n    //获取所有股票\r\n    getSecurityList = (params = {}) => {\r\n        // return;\r\n        http.get({\r\n            // url: \"/risk/queryRisk\",\r\n            url: \"/security/listAll\",\r\n            data: params,\r\n        }).then((res) => {\r\n            console.log(\"获取所有股票\", res);\r\n            let optionArr = [];\r\n            let securityIdArr = [];\r\n            this.securityObj = {};\r\n            if (res.data && res.data.length > 0) {\r\n                let dataArr = res.data;\r\n                if (dataArr.length > 0) {\r\n                    dataArr.forEach((item, i) => {\r\n                        let sec = item.securityId.trim();\r\n                        if (!securityIdArr.includes(sec) && sec.length > 0) {\r\n                            // securityIdArr.push(sec);\r\n                            securityIdArr.push(\r\n                                sec + \" \" + item.securityName.trim()\r\n                            );\r\n                            this.securityObj[sec] = item.securityName;\r\n                        }\r\n                    });\r\n                    if (securityIdArr.length > 0) {\r\n                        optionArr =\r\n                            securityIdArr.length > 10\r\n                                ? securityIdArr.slice(0, 10)\r\n                                : securityIdArr;\r\n                    }\r\n                }\r\n            }\r\n            this.setState({\r\n                securityList: securityIdArr,\r\n                currentDataLists: optionArr,\r\n                currentDataLists2: optionArr,\r\n            });\r\n        });\r\n    };\r\n    handleSearch = (params, pagination) => {\r\n        this.getData(params, pagination);\r\n    };\r\n    getPfUrl = (sucCallback) => {\r\n        // return;\r\n        // http.get({\r\n        //     // url: \"/risk/queryRisk\",\r\n        //     url: \"/connect/getConnect\",\r\n        //     // data: {},\r\n        // }).then((res) => {\r\n        //     if (\r\n        //         res.assessOperateConnect &&\r\n        //         res.assessOperateConnect.ip &&\r\n        //         res.assessOperateConnect.port\r\n        //     ) {\r\n        //         window.pfBaseUrl =\r\n        //             res.assessOperateConnect.ip +\r\n        //             \":\" +\r\n        //             res.assessOperateConnect.port;\r\n        //         if (window.pfBaseUrl.indexOf(\"http://\") < 0) {\r\n        //             window.pfBaseUrl = \"http://\" + window.pfBaseUrl;\r\n        //         }\r\n        //         this.setState({\r\n        //             uploadUrl:\r\n        //                 window.pfBaseUrl +\r\n        //                 \"/algo-assess/v1/assess/upload-optimize-base\",\r\n        //             downloadUrl:\r\n        //                 window.pfBaseUrl +\r\n        //                 \"/algo-assess/v1/assess/download-optimize-base\",\r\n        //         });\r\n        //         if (sucCallback) {\r\n        //             sucCallback();\r\n        //         }\r\n        //     }\r\n        // });\r\n        this.setState({\r\n            uploadUrl:\r\n                \"/assess\" + \"/algo-assess/v1/assess/upload-optimize-base\",\r\n            downloadUrl:\r\n                \"/assess\" + \"/algo-assess/v1/assess/download-optimize-base\",\r\n        });\r\n        if (sucCallback) {\r\n            sucCallback();\r\n        }\r\n    };\r\n    componentDidMount() {\r\n        this.getProvider();\r\n        this.getT0AlgoList();\r\n        this.getSecurityList();\r\n        let sucCallback = () => {\r\n            this.getData();\r\n        };\r\n        this.getPfUrl(sucCallback);\r\n    }\r\n\r\n    render() {\r\n        let scroll = { x: 1200, y: 445 };\r\n        let info = this.state.info;\r\n        //批量\r\n        // let { selectRow } = this.state;\r\n        // const rowSelection = {\r\n        //     selectRow,\r\n        //     onChange: this.handleTableChange,\r\n        // };\r\n        return (\r\n            <div>\r\n                <CurdComponent\r\n                    // rowKey={\"index\"}\r\n                    // btnText2=\"查全部\"\r\n                    // isShowSearchForm={false}\r\n                    onSearchClick={this.handleSearch}\r\n                    getSearchFormFields={this.getSearchFormFields}\r\n                    // searchLoading={this.state.searchLoading}\r\n                    insertBtnText={\"新增\"} // 不传 就没新增按钮\r\n                    getInsertFormFields={this.getInsertFormFields}\r\n                    insertRecord={this.handleInsertRecord}\r\n                    // col=\"2\"\r\n                    width=\"600px\"\r\n                    pagination={this.state.pagination}\r\n                    getUpdateFormFields={this.getUpdateFormFields}\r\n                    setUpdateModal={this.setUpdateModal}\r\n                    updateRecord={this.handleUpdateRecord} // 不传 就没编辑\r\n                    // deleteRecord={this.handleDeleteRecord} // 不传 就没删除\r\n                    insertModalText=\"新增T0优选算法\"\r\n                    updateModalText=\"修改T0优选算法\"\r\n                    centered={true}\r\n                    columns={columns}\r\n                    dataSource={info}\r\n                    scroll={scroll}\r\n                    // rowSelection={rowSelection} //批量选择 操作\r\n                >\r\n                    <div\r\n                        urlPrefix=\"/algo-assess/v1/assess/download-optimize-base\"\r\n                        title=\"算法优选\"\r\n                        downloadUrl={this.state.downloadUrl}\r\n                        uploadUrl={this.state.uploadUrl}\r\n                        sucCallback={this.getData}\r\n                    ></div>\r\n                </CurdComponent>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}