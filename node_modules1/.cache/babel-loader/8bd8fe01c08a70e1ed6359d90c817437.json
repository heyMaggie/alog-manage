{"ast":null,"code":"import _defineProperty from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport \"antd/lib/input/style\";\nimport _Input from \"antd/lib/input\";\nvar _jsxFileName = \"D:\\\\company\\\\algo-manage\\\\src\\\\algo\\\\modules\\\\manage\\\\pages\\\\counterInfo\\\\index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport CurdComponent from \"@/components/CurdComponent\"; // import SelectOption from \"@/components/SelectOption\";\n\nvar columns = function columns(params) {\n  return [{\n    title: \"ID\",\n    dataIndex: \"id\"\n  }, {\n    title: \"券商编码\",\n    dataIndex: \"brokerCode\",\n    key: \"brokerCode\"\n  }, {\n    title: \"支持业务类型\",\n    dataIndex: \"supportTypeValue\"\n  }, {\n    title: \"柜台地址\",\n    dataIndex: \"gwAddr\",\n    key: \"gwAddr\"\n  }, {\n    title: \"柜台版本号\",\n    dataIndex: \"version\",\n    key: \"version\"\n  }, {\n    title: \"柜台状态\",\n    dataIndex: \"statusValue\"\n  }];\n};\n\nvar getSearchFormFields = function getSearchFormFields() {\n  return [{\n    label: \"柜台地址\",\n    id: \"gwAddr\",\n    component: React.createElement(_Input, {\n      placeholder: \"\\u8BF7\\u8F93\\u5165\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    })\n  }];\n};\n\nvar getInsertFormFields = function getInsertFormFields() {\n  return [{\n    label: \"券商编码\",\n    id: \"brokerCode\",\n    initialValue: \"\",\n    rules: [{\n      required: true,\n      message: \"参数不能为空\"\n    }],\n    component: // <Input placeholder=\"请输入\" readOnly disabled />\n    React.createElement(_Input, {\n      placeholder: \"\\u8BF7\\u8F93\\u5165\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    })\n  }, {\n    label: \"支持业务类型\",\n    id: \"supportType\",\n    initialValue: \"\",\n    rules: [{\n      required: true,\n      message: \"参数不能为空\"\n    }],\n    component: // <Input placeholder=\"请输入\" readOnly disabled />\n    React.createElement(_Input, {\n      placeholder: \"\\u8BF7\\u8F93\\u5165\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    })\n  }, {\n    label: \"柜台地址\",\n    id: \"gwAddr\",\n    initialValue: \"\",\n    rules: [{\n      required: true,\n      message: \"IP地址不能为空\"\n    }],\n    component: React.createElement(_Input, {\n      placeholder: \"\\u8BF7\\u8F93\\u5165\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    })\n  }, {\n    label: \"柜台版本号\",\n    id: \"version\",\n    initialValue: \"\",\n    rules: [{\n      required: true,\n      message: \"参数不能为空\"\n    }],\n    component: // <Input placeholder=\"请输入\" readOnly disabled />\n    React.createElement(_Input, {\n      placeholder: \"\\u8BF7\\u8F93\\u5165\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    })\n  }, {\n    label: \"柜台状态\",\n    id: \"status\",\n    initialValue: \"\",\n    rules: [{\n      required: true,\n      message: \"IP地址不能为空\"\n    }],\n    component: React.createElement(_Input, {\n      placeholder: \"\\u8BF7\\u8F93\\u5165\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    })\n  }];\n};\n\nvar getUpdateFormFields = function getUpdateFormFields() {\n  return [{\n    label: \"ID\",\n    id: \"id\",\n    initialValue: \"\",\n    rules: [{\n      required: true,\n      message: \"参数不能为空\"\n    }],\n    component: React.createElement(_Input, {\n      placeholder: \"\\u8BF7\\u8F93\\u5165\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    })\n  }, {\n    label: \"券商编码\",\n    id: \"brokerCode\",\n    initialValue: \"\",\n    rules: [{\n      required: true,\n      message: \"参数不能为空\"\n    }],\n    component: // <Input placeholder=\"请输入\" readOnly disabled />\n    React.createElement(_Input, {\n      placeholder: \"\\u8BF7\\u8F93\\u5165\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    })\n  }, {\n    label: \"支持业务类型\",\n    id: \"supportType\",\n    initialValue: \"\",\n    rules: [{\n      required: true,\n      message: \"参数不能为空\"\n    }],\n    component: // <Input placeholder=\"请输入\" readOnly disabled />\n    React.createElement(_Input, {\n      placeholder: \"\\u8BF7\\u8F93\\u5165\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    })\n  }, {\n    label: \"柜台地址\",\n    id: \"gwAddr\",\n    initialValue: \"\",\n    rules: [{\n      required: true,\n      message: \"IP地址不能为空\"\n    }],\n    component: React.createElement(_Input, {\n      placeholder: \"\\u8BF7\\u8F93\\u5165\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    })\n  }, {\n    label: \"柜台版本号\",\n    id: \"version\",\n    initialValue: \"\",\n    rules: [{\n      required: true,\n      message: \"参数不能为空\"\n    }],\n    component: // <Input placeholder=\"请输入\" readOnly disabled />\n    React.createElement(_Input, {\n      placeholder: \"\\u8BF7\\u8F93\\u5165\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    })\n  }, {\n    label: \"柜台状态\",\n    id: \"status\",\n    initialValue: \"\",\n    rules: [{\n      required: true,\n      message: \"IP地址不能为空\"\n    }],\n    component: React.createElement(_Input, {\n      placeholder: \"\\u8BF7\\u8F93\\u5165\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    })\n  }];\n};\n\nvar uoeSetting =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(uoeSetting, _React$PureComponent);\n\n  function uoeSetting() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, uoeSetting);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(uoeSetting)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      searchLoading: false,\n      selectRow: [],\n      info: [],\n      pagination: {\n        total: 0\n      }\n    };\n\n    _this.handleTableChange = function (selectedRowKeys) {\n      console.log(\"批量选择\");\n\n      _this.setState({\n        selectRow: selectedRowKeys\n      });\n    };\n\n    _this.handleInsertRecord = function (fromData) {\n      console.log(\"新增接口\", fromData);\n      var params = {\n        BrokerCode: fromData.brokerCode,\n        BrokerName: fromData.brokerName,\n        SupportType: fromData.supportType / 1,\n        GwAddr: fromData.gwAddr,\n        Version: fromData.version,\n        Status: fromData.status / 1\n      };\n      http.post({\n        url: \"/counter-info/addCounterInfo\",\n        data: params\n      }).then(function (res) {\n        if (res.code == 0) {\n          message.success(res.message);\n          _this.isAction = true;\n\n          _this.getData();\n        } else {\n          message.error(\"新增柜台信息失败\");\n          _this.isAction = true;\n        }\n      });\n    };\n\n    _this.handleUpdateRecord = function (_ref) {\n      var form = _ref.form;\n      console.log(form.getFieldsValue()); // return;\n\n      var fromData = form.getFieldsValue();\n      var params = {\n        BrokerCode: fromData.brokerCode,\n        BrokerName: fromData.brokerName,\n        SupportType: fromData.supportType / 1,\n        GwAddr: fromData.gwAddr,\n        Version: fromData.version,\n        Status: fromData.status / 1\n      }; // 发送更新请求\n\n      http.post({\n        url: \"/counter-info/updateCounterInfo\",\n        data: params\n      }).then(function (res) {\n        if (res.code == 0) {\n          message.success(res.message);\n          _this.isAction = true;\n\n          _this.getData();\n        } else {\n          message.error(\"新增柜台信息失败\");\n          _this.isAction = true;\n        }\n      });\n    };\n\n    _this.handleDeleteRecord = function (record) {\n      console.log(\"删除记录 \", record);\n    };\n\n    _this.setUpdateModal = function (_ref2) {\n      var form = _ref2.form,\n          record = _ref2.record;\n      // console.log(record, form);\n      _this.record = record;\n      form.setFieldsValue({\n        id: record.id,\n        brokerCode: record.brokerCode,\n        supportType: record.supportType / 1,\n        gwAddr: record.gwAddr,\n        version: record.version,\n        status: record.status / 1\n      });\n    };\n\n    _this.getData = function () {\n      var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var pagination = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n        current: 1,\n        pageSize: 11\n      };\n      params = _objectSpread({}, params, {\n        pageId: pagination.current,\n        pageNum: pagination.pageSize\n      });\n      http.post({\n        // url: \"/option/assetInfo/selectList\",\n        url: \"/counter/list\",\n        data: params\n      }).then(function (res) {\n        console.log(res); //解析数据字典\n\n        if (res.data.records && res.data.records.length > 0) {\n          parseArrDictValue(res.data.records, \"status\", \"counterStatus\");\n          parseArrDictValue(res.data.records, \"supportType\", \"supportType\");\n        } else {\n          message.info(\"查询结果为空\");\n        }\n\n        var pgn = {\n          current: pagination.current,\n          pageSize: pagination.pageSize,\n          total: res.data.total || 0\n        };\n\n        _this.setState({\n          info: res.data.records,\n          pagination: pgn\n        });\n      });\n    };\n\n    _this.handleSearch = function (params, pagination) {\n      _this.getData(params, pagination);\n    };\n\n    return _this;\n  }\n\n  _createClass(uoeSetting, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getData();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var scroll = {\n        x: 1200,\n        y: 445\n      };\n      var info = this.state.info; //批量\n      // let { selectRow } = this.state;\n      // const rowSelection = {\n      //     selectRow,\n      //     onChange: this.handleTableChange,\n      // };\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 338\n        },\n        __self: this\n      }, React.createElement(CurdComponent // rowKey={\"index\"}\n      // btnText2=\"查全部\"\n      // isShowSearchForm={false}\n      , {\n        onSearchClick: this.handleSearch,\n        getSearchFormFields: getSearchFormFields // searchLoading={this.state.searchLoading}\n        ,\n        insertBtnText: \"新增\" // 不传 就没新增按钮\n        ,\n        getInsertFormFields: getInsertFormFields,\n        insertRecord: this.handleInsertRecord // col=\"2\"\n        ,\n        width: \"600px\",\n        pagination: this.state.pagination,\n        getUpdateFormFields: getUpdateFormFields,\n        setUpdateModal: this.setUpdateModal,\n        updateRecord: this.handleUpdateRecord // 不传 就没编辑\n        // deleteRecord={this.handleDeleteRecord} // 不传 就没删除\n        ,\n        centered: true,\n        columns: columns,\n        dataSource: info,\n        scroll: scroll // rowSelection={rowSelection} //批量选择 操作\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 339\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        urlPrefix: \"/counter\" // noUpload={true}\n        ,\n        title: \"\\u67DC\\u53F0\\u4FE1\\u606F\",\n        sucCallback: this.getData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 362\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return uoeSetting;\n}(React.PureComponent);\n\nexport { uoeSetting as default };","map":{"version":3,"sources":["D:/company/algo-manage/src/algo/modules/manage/pages/counterInfo/index.js"],"names":["React","CurdComponent","columns","params","title","dataIndex","key","getSearchFormFields","label","id","component","getInsertFormFields","initialValue","rules","required","message","getUpdateFormFields","uoeSetting","state","searchLoading","selectRow","info","pagination","total","handleTableChange","selectedRowKeys","console","log","setState","handleInsertRecord","fromData","BrokerCode","brokerCode","BrokerName","brokerName","SupportType","supportType","GwAddr","gwAddr","Version","version","Status","status","http","post","url","data","then","res","code","success","isAction","getData","error","handleUpdateRecord","form","getFieldsValue","handleDeleteRecord","record","setUpdateModal","setFieldsValue","current","pageSize","pageId","pageNum","records","length","parseArrDictValue","pgn","handleSearch","scroll","x","y","PureComponent"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport CurdComponent from \"@/components/CurdComponent\";\r\n// import SelectOption from \"@/components/SelectOption\";\r\nimport { Input } from \"antd\";\r\n\r\nconst columns = (params) => {\r\n    return [\r\n        {\r\n            title: \"ID\",\r\n            dataIndex: \"id\",\r\n        },\r\n        {\r\n            title: \"券商编码\",\r\n            dataIndex: \"brokerCode\",\r\n            key: \"brokerCode\",\r\n        },\r\n        {\r\n            title: \"支持业务类型\",\r\n            dataIndex: \"supportTypeValue\",\r\n        },\r\n        {\r\n            title: \"柜台地址\",\r\n            dataIndex: \"gwAddr\",\r\n            key: \"gwAddr\",\r\n        },\r\n        {\r\n            title: \"柜台版本号\",\r\n            dataIndex: \"version\",\r\n            key: \"version\",\r\n        },\r\n        {\r\n            title: \"柜台状态\",\r\n            dataIndex: \"statusValue\",\r\n        },\r\n    ];\r\n};\r\nconst getSearchFormFields = () => {\r\n    return [\r\n        {\r\n            label: \"柜台地址\",\r\n            id: \"gwAddr\",\r\n            component: <Input placeholder=\"请输入\" />,\r\n        },\r\n    ];\r\n};\r\nconst getInsertFormFields = () => {\r\n    return [\r\n        {\r\n            label: \"券商编码\",\r\n            id: \"brokerCode\",\r\n            initialValue: \"\",\r\n            rules: [\r\n                {\r\n                    required: true,\r\n                    message: \"参数不能为空\",\r\n                },\r\n            ],\r\n            component: (\r\n                // <Input placeholder=\"请输入\" readOnly disabled />\r\n                <Input placeholder=\"请输入\" />\r\n            ),\r\n        },\r\n        {\r\n            label: \"支持业务类型\",\r\n            id: \"supportType\",\r\n            initialValue: \"\",\r\n            rules: [\r\n                {\r\n                    required: true,\r\n                    message: \"参数不能为空\",\r\n                },\r\n            ],\r\n            component: (\r\n                // <Input placeholder=\"请输入\" readOnly disabled />\r\n                <Input placeholder=\"请输入\" />\r\n            ),\r\n        },\r\n        {\r\n            label: \"柜台地址\",\r\n            id: \"gwAddr\",\r\n            initialValue: \"\",\r\n            rules: [\r\n                {\r\n                    required: true,\r\n                    message: \"IP地址不能为空\",\r\n                },\r\n            ],\r\n            component: <Input placeholder=\"请输入\" />,\r\n        },\r\n        {\r\n            label: \"柜台版本号\",\r\n            id: \"version\",\r\n            initialValue: \"\",\r\n            rules: [\r\n                {\r\n                    required: true,\r\n                    message: \"参数不能为空\",\r\n                },\r\n            ],\r\n            component: (\r\n                // <Input placeholder=\"请输入\" readOnly disabled />\r\n                <Input placeholder=\"请输入\" />\r\n            ),\r\n        },\r\n        {\r\n            label: \"柜台状态\",\r\n            id: \"status\",\r\n            initialValue: \"\",\r\n            rules: [\r\n                {\r\n                    required: true,\r\n                    message: \"IP地址不能为空\",\r\n                },\r\n            ],\r\n            component: <Input placeholder=\"请输入\" />,\r\n        },\r\n    ];\r\n};\r\nconst getUpdateFormFields = () => {\r\n    return [\r\n        {\r\n            label: \"ID\",\r\n            id: \"id\",\r\n            initialValue: \"\",\r\n            rules: [\r\n                {\r\n                    required: true,\r\n                    message: \"参数不能为空\",\r\n                },\r\n            ],\r\n            component: <Input placeholder=\"请输入\" />,\r\n        },\r\n        {\r\n            label: \"券商编码\",\r\n            id: \"brokerCode\",\r\n            initialValue: \"\",\r\n            rules: [\r\n                {\r\n                    required: true,\r\n                    message: \"参数不能为空\",\r\n                },\r\n            ],\r\n            component: (\r\n                // <Input placeholder=\"请输入\" readOnly disabled />\r\n                <Input placeholder=\"请输入\" />\r\n            ),\r\n        },\r\n        {\r\n            label: \"支持业务类型\",\r\n            id: \"supportType\",\r\n            initialValue: \"\",\r\n            rules: [\r\n                {\r\n                    required: true,\r\n                    message: \"参数不能为空\",\r\n                },\r\n            ],\r\n            component: (\r\n                // <Input placeholder=\"请输入\" readOnly disabled />\r\n                <Input placeholder=\"请输入\" />\r\n            ),\r\n        },\r\n        {\r\n            label: \"柜台地址\",\r\n            id: \"gwAddr\",\r\n            initialValue: \"\",\r\n            rules: [\r\n                {\r\n                    required: true,\r\n                    message: \"IP地址不能为空\",\r\n                },\r\n            ],\r\n            component: <Input placeholder=\"请输入\" />,\r\n        },\r\n        {\r\n            label: \"柜台版本号\",\r\n            id: \"version\",\r\n            initialValue: \"\",\r\n            rules: [\r\n                {\r\n                    required: true,\r\n                    message: \"参数不能为空\",\r\n                },\r\n            ],\r\n            component: (\r\n                // <Input placeholder=\"请输入\" readOnly disabled />\r\n                <Input placeholder=\"请输入\" />\r\n            ),\r\n        },\r\n        {\r\n            label: \"柜台状态\",\r\n            id: \"status\",\r\n            initialValue: \"\",\r\n            rules: [\r\n                {\r\n                    required: true,\r\n                    message: \"IP地址不能为空\",\r\n                },\r\n            ],\r\n            component: <Input placeholder=\"请输入\" />,\r\n        },\r\n    ];\r\n};\r\nexport default class uoeSetting extends React.PureComponent {\r\n    state = {\r\n        searchLoading: false,\r\n        selectRow: [],\r\n        info: [],\r\n        pagination: { total: 0 },\r\n    };\r\n    //批量选择\r\n    handleTableChange = (selectedRowKeys) => {\r\n        console.log(\"批量选择\");\r\n        this.setState({\r\n            selectRow: selectedRowKeys,\r\n        });\r\n    };\r\n\r\n    handleInsertRecord = (fromData) => {\r\n        console.log(\"新增接口\", fromData);\r\n        let params = {\r\n            BrokerCode: fromData.brokerCode,\r\n            BrokerName: fromData.brokerName,\r\n            SupportType: fromData.supportType / 1,\r\n            GwAddr: fromData.gwAddr,\r\n            Version: fromData.version,\r\n            Status: fromData.status / 1,\r\n        };\r\n        http.post({\r\n            url: \"/counter-info/addCounterInfo\",\r\n            data: params,\r\n        }).then((res) => {\r\n            if (res.code == 0) {\r\n                message.success(res.message);\r\n                this.isAction = true;\r\n                this.getData();\r\n            } else {\r\n                message.error(\"新增柜台信息失败\");\r\n                this.isAction = true;\r\n            }\r\n        });\r\n    };\r\n    //更新记录\r\n    handleUpdateRecord = ({ form }) => {\r\n        console.log(form.getFieldsValue());\r\n        // return;\r\n        let fromData = form.getFieldsValue();\r\n        let params = {\r\n            BrokerCode: fromData.brokerCode,\r\n            BrokerName: fromData.brokerName,\r\n            SupportType: fromData.supportType / 1,\r\n            GwAddr: fromData.gwAddr,\r\n            Version: fromData.version,\r\n            Status: fromData.status / 1,\r\n        };\r\n        // 发送更新请求\r\n        http.post({\r\n            url: \"/counter-info/updateCounterInfo\",\r\n            data: params,\r\n        }).then((res) => {\r\n            if (res.code == 0) {\r\n                message.success(res.message);\r\n                this.isAction = true;\r\n                this.getData();\r\n            } else {\r\n                message.error(\"新增柜台信息失败\");\r\n                this.isAction = true;\r\n            }\r\n        });\r\n    };\r\n    //删除记录\r\n    handleDeleteRecord = (record) => {\r\n        console.log(\"删除记录 \", record);\r\n    };\r\n    //填入更新数据\r\n    setUpdateModal = ({ form, record }) => {\r\n        // console.log(record, form);\r\n        this.record = record;\r\n        form.setFieldsValue({\r\n            id: record.id,\r\n            brokerCode: record.brokerCode,\r\n            supportType: record.supportType / 1,\r\n            gwAddr: record.gwAddr,\r\n            version: record.version,\r\n            status: record.status / 1,\r\n        });\r\n    };\r\n    getData = (params = {}, pagination = { current: 1, pageSize: 11 }) => {\r\n        params = {\r\n            ...params,\r\n            pageId: pagination.current,\r\n            pageNum: pagination.pageSize,\r\n        };\r\n        http.post({\r\n            // url: \"/option/assetInfo/selectList\",\r\n            url: \"/counter/list\",\r\n            data: params,\r\n        }).then((res) => {\r\n            console.log(res);\r\n            //解析数据字典\r\n            if (res.data.records && res.data.records.length > 0) {\r\n                parseArrDictValue(res.data.records, \"status\", \"counterStatus\");\r\n                parseArrDictValue(\r\n                    res.data.records,\r\n                    \"supportType\",\r\n                    \"supportType\"\r\n                );\r\n            } else {\r\n                message.info(\"查询结果为空\");\r\n            }\r\n            let pgn = {\r\n                current: pagination.current,\r\n                pageSize: pagination.pageSize,\r\n                total: res.data.total || 0,\r\n            };\r\n            this.setState({\r\n                info: res.data.records,\r\n                pagination: pgn,\r\n            });\r\n        });\r\n    };\r\n    handleSearch = (params, pagination) => {\r\n        this.getData(params, pagination);\r\n    };\r\n    componentDidMount() {\r\n        this.getData();\r\n    }\r\n    render() {\r\n        let scroll = { x: 1200, y: 445 };\r\n        let info = this.state.info;\r\n        //批量\r\n        // let { selectRow } = this.state;\r\n        // const rowSelection = {\r\n        //     selectRow,\r\n        //     onChange: this.handleTableChange,\r\n        // };\r\n        return (\r\n            <div>\r\n                <CurdComponent\r\n                    // rowKey={\"index\"}\r\n                    // btnText2=\"查全部\"\r\n                    // isShowSearchForm={false}\r\n                    onSearchClick={this.handleSearch}\r\n                    getSearchFormFields={getSearchFormFields}\r\n                    // searchLoading={this.state.searchLoading}\r\n                    insertBtnText={\"新增\"} // 不传 就没新增按钮\r\n                    getInsertFormFields={getInsertFormFields}\r\n                    insertRecord={this.handleInsertRecord}\r\n                    // col=\"2\"\r\n                    width=\"600px\"\r\n                    pagination={this.state.pagination}\r\n                    getUpdateFormFields={getUpdateFormFields}\r\n                    setUpdateModal={this.setUpdateModal}\r\n                    updateRecord={this.handleUpdateRecord} // 不传 就没编辑\r\n                    // deleteRecord={this.handleDeleteRecord} // 不传 就没删除\r\n                    centered={true}\r\n                    columns={columns}\r\n                    dataSource={info}\r\n                    scroll={scroll}\r\n                    // rowSelection={rowSelection} //批量选择 操作\r\n                >\r\n                    <div\r\n                        urlPrefix=\"/counter\"\r\n                        // noUpload={true}\r\n                        title=\"柜台信息\"\r\n                        sucCallback={this.getData}\r\n                    ></div>\r\n                </CurdComponent>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}