{"ast":null,"code":"import \"antd/lib/upload/style\";\nimport _Upload from \"antd/lib/upload\";\nimport \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/icon/style\";\nimport _Icon from \"antd/lib/icon\";\nimport _classCallCheck from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\company\\\\algo-manage\\\\src\\\\components\\\\UploadWrap\\\\index.js\";\nimport React from \"react\"; // import styles from \"./index.module.less\";\n\nvar UploadWrap =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(UploadWrap, _React$PureComponent);\n\n  function UploadWrap() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, UploadWrap);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(UploadWrap)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.handleDownload = function () {\n      if (_this.props.handleDownload) {\n        _this.props.handleDownload();\n      } else {\n        window.location.href = window.baseURL + _this.props.urlPrefix + \"/download\";\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(UploadWrap, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var uploadOption = this.props.uploadOption;\n\n      if (!uploadOption) {\n        uploadOption = {\n          name: \"file\",\n          accept: \".xml\",\n          showUploadList: false,\n          action: window.baseURL + this.props.urlPrefix + \"/upload\",\n          onChange: function onChange(info) {\n            if (info.file.status !== \"uploading\") {// console.log(info.file, info.fileList);\n            }\n\n            if (info.file.status === \"done\") {\n              if (info.file.response.code == 0) {\n                message.success(\"\".concat(info.file.name, \" \\u4E0A\\u4F20\\u6210\\u529F\"));\n                console.log(_this2.props.sucCallback);\n\n                if (_this2.props.sucCallback) {\n                  _this2.props.sucCallback();\n                }\n              } else {\n                message.error(\"\".concat(info.file.response.message));\n              }\n            } else if (info.file.status === \"error\") {\n              message.error(\"\".concat(info.file.name, \" \\u4E0A\\u4F20\\u5931\\u8D25\"));\n            }\n          }\n        };\n      }\n\n      var _this$props = this.props,\n          _this$props$title = _this$props.title,\n          title = _this$props$title === void 0 ? \"\" : _this$props$title,\n          noUpload = _this$props.noUpload,\n          noDownload = _this$props.noDownload; // noUpload 没有上传按钮\n\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, !noUpload && React.createElement(_Upload, Object.assign({}, uploadOption, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }), React.createElement(_Button, {\n        type: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(_Icon, {\n        type: \"upload\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }), \" \", \"\".concat(title, \"\\u4E0A\\u4F20\"))), !noDownload && React.createElement(_Button, {\n        type: \"primary\",\n        onClick: this.handleDownload,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(_Icon, {\n        type: \"download\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }), \" \", \"\".concat(title, \"\\u5BFC\\u51FA\")));\n    }\n  }]);\n\n  return UploadWrap;\n}(React.PureComponent);\n\nexport { UploadWrap as default };","map":{"version":3,"sources":["D:/company/algo-manage/src/components/UploadWrap/index.js"],"names":["React","UploadWrap","handleDownload","props","window","location","href","baseURL","urlPrefix","uploadOption","name","accept","showUploadList","action","onChange","info","file","status","response","code","message","success","console","log","sucCallback","error","title","noUpload","noDownload","PureComponent"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;IAGqBC,U;;;;;;;;;;;;;;;;;;UACjBC,c,GAAiB,YAAM;AACnB,UAAI,MAAKC,KAAL,CAAWD,cAAf,EAA+B;AAC3B,cAAKC,KAAL,CAAWD,cAAX;AACH,OAFD,MAEO;AACHE,QAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GACIF,MAAM,CAACG,OAAP,GAAiB,MAAKJ,KAAL,CAAWK,SAA5B,GAAwC,WAD5C;AAEH;AACJ,K;;;;;;;6BACQ;AAAA;;AACL,UAAIC,YAAY,GAAG,KAAKN,KAAL,CAAWM,YAA9B;;AACA,UAAI,CAACA,YAAL,EAAmB;AACfA,QAAAA,YAAY,GAAG;AACXC,UAAAA,IAAI,EAAE,MADK;AAEXC,UAAAA,MAAM,EAAE,MAFG;AAGXC,UAAAA,cAAc,EAAE,KAHL;AAIXC,UAAAA,MAAM,EAAET,MAAM,CAACG,OAAP,GAAiB,KAAKJ,KAAL,CAAWK,SAA5B,GAAwC,SAJrC;AAKXM,UAAAA,QAAQ,EAAE,kBAACC,IAAD,EAAU;AAChB,gBAAIA,IAAI,CAACC,IAAL,CAAUC,MAAV,KAAqB,WAAzB,EAAsC,CAClC;AACH;;AACD,gBAAIF,IAAI,CAACC,IAAL,CAAUC,MAAV,KAAqB,MAAzB,EAAiC;AAC7B,kBAAIF,IAAI,CAACC,IAAL,CAAUE,QAAV,CAAmBC,IAAnB,IAA2B,CAA/B,EAAkC;AAC9BC,gBAAAA,OAAO,CAACC,OAAR,WAAmBN,IAAI,CAACC,IAAL,CAAUN,IAA7B;AACAY,gBAAAA,OAAO,CAACC,GAAR,CAAY,MAAI,CAACpB,KAAL,CAAWqB,WAAvB;;AACA,oBAAI,MAAI,CAACrB,KAAL,CAAWqB,WAAf,EAA4B;AACxB,kBAAA,MAAI,CAACrB,KAAL,CAAWqB,WAAX;AACH;AACJ,eAND,MAMO;AACHJ,gBAAAA,OAAO,CAACK,KAAR,WAAiBV,IAAI,CAACC,IAAL,CAAUE,QAAV,CAAmBE,OAApC;AACH;AACJ,aAVD,MAUO,IAAIL,IAAI,CAACC,IAAL,CAAUC,MAAV,KAAqB,OAAzB,EAAkC;AACrCG,cAAAA,OAAO,CAACK,KAAR,WAAiBV,IAAI,CAACC,IAAL,CAAUN,IAA3B;AACH;AACJ;AAtBU,SAAf;AAwBH;;AA3BI,wBA4BsC,KAAKP,KA5B3C;AAAA,0CA4BCuB,KA5BD;AAAA,UA4BCA,KA5BD,kCA4BS,EA5BT;AAAA,UA4BaC,QA5Bb,eA4BaA,QA5Bb;AAAA,UA4BuBC,UA5BvB,eA4BuBA,UA5BvB,EA6BL;;AACA,aACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,CAACD,QAAD,IACG,+CAAYlB,YAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UACI;AAAQ,QAAA,IAAI,EAAC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAM,QAAA,IAAI,EAAC,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,iBAC+BiB,KAD/B,kBADJ,CAFR,EAQK,CAACE,UAAD,IACG;AAAQ,QAAA,IAAI,EAAC,SAAb;AAAuB,QAAA,OAAO,EAAE,KAAK1B,cAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAM,QAAA,IAAI,EAAC,UAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,iBACiCwB,KADjC,kBATR,CADJ;AAgBH;;;;EAvDmC1B,KAAK,CAAC6B,a;;SAAzB5B,U","sourcesContent":["import React from \"react\";\r\n// import styles from \"./index.module.less\";\r\nimport { Button, Upload, Icon } from \"antd\";\r\n\r\nexport default class UploadWrap extends React.PureComponent {\r\n    handleDownload = () => {\r\n        if (this.props.handleDownload) {\r\n            this.props.handleDownload();\r\n        } else {\r\n            window.location.href =\r\n                window.baseURL + this.props.urlPrefix + \"/download\";\r\n        }\r\n    };\r\n    render() {\r\n        let uploadOption = this.props.uploadOption;\r\n        if (!uploadOption) {\r\n            uploadOption = {\r\n                name: \"file\",\r\n                accept: \".xml\",\r\n                showUploadList: false,\r\n                action: window.baseURL + this.props.urlPrefix + \"/upload\",\r\n                onChange: (info) => {\r\n                    if (info.file.status !== \"uploading\") {\r\n                        // console.log(info.file, info.fileList);\r\n                    }\r\n                    if (info.file.status === \"done\") {\r\n                        if (info.file.response.code == 0) {\r\n                            message.success(`${info.file.name} 上传成功`);\r\n                            console.log(this.props.sucCallback);\r\n                            if (this.props.sucCallback) {\r\n                                this.props.sucCallback();\r\n                            }\r\n                        } else {\r\n                            message.error(`${info.file.response.message}`);\r\n                        }\r\n                    } else if (info.file.status === \"error\") {\r\n                        message.error(`${info.file.name} 上传失败`);\r\n                    }\r\n                },\r\n            };\r\n        }\r\n        let { title = \"\", noUpload, noDownload } = this.props;\r\n        // noUpload 没有上传按钮\r\n        return (\r\n            <React.Fragment>\r\n                {!noUpload && (\r\n                    <Upload {...uploadOption}>\r\n                        <Button type=\"primary\">\r\n                            <Icon type=\"upload\" /> {`${title}上传`}\r\n                        </Button>\r\n                    </Upload>\r\n                )}\r\n                {!noDownload && (\r\n                    <Button type=\"primary\" onClick={this.handleDownload}>\r\n                        <Icon type=\"download\" /> {`${title}导出`}\r\n                    </Button>\r\n                )}\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}