{"ast":null,"code":"import \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nimport _objectWithoutProperties from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport \"antd/lib/popconfirm/style\";\nimport _Popconfirm from \"antd/lib/popconfirm\";\nimport _regeneratorRuntime from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _toConsumableArray from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\company\\\\algo-manage\\\\src\\\\components\\\\CurdComponent\\\\index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport styles from \"./index.module.less\";\nimport SearchForm from \"@/components/SearchForm\";\nimport DynamicModal from \"@/components/DynamicModal\";\nimport Table from \"@/components/Table\";\nimport DynamicDescriptions from \"@/components/DynamicDescriptions\"; // import SplitPane from \"react-split-pane\";\n\nimport UploadWrap from \"@/components/UploadWrap\";\n\nvar CurdComponent =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(CurdComponent, _React$PureComponent);\n\n  function CurdComponent() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CurdComponent);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CurdComponent)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      insertModalVisible: false,\n      updateModalVisible: false,\n      detailModalVisible: false,\n      scroll: _this.props.scroll\n    };\n\n    _this.handleInsertBtn = function () {\n      _this.setState({\n        insertModalVisible: true // updateModalVisible: true\n\n      });\n\n      _this.insertForm.resetFields();\n    };\n\n    _this.handleInsertModalReady = function (_ref) {\n      var form = _ref.form;\n      _this.insertForm = form;\n      var onInsertModalReady = _this.props.onInsertModalReady;\n\n      if (typeof onInsertModalReady == \"function\") {\n        onInsertModalReady({\n          form: form\n        });\n      }\n    };\n\n    _this.handleInsertModalOk = function () {\n      var insertRecord = _this.props.insertRecord;\n\n      if (typeof insertRecord == \"function\") {\n        // insertRecord({ form: this.insertForm });\n        _this.insertForm.validateFields(function (err, values) {\n          if (!err) {\n            var formData = _this.getInsertFormValue();\n\n            for (var key in formData) {\n              if (!formData[key]) {\n                formData[key] = \"\";\n              }\n            }\n\n            insertRecord(formData);\n            setTimeout(function () {\n              _this.props.onSearchClick(_this.getSearchFormValue(), _this.props.pagination);\n            }, 200);\n\n            _this.insertForm.resetFields();\n\n            _this.setState({\n              insertModalVisible: false\n            });\n          }\n        });\n      }\n    };\n\n    _this.handleInsertModalCancel = function () {\n      _this.setState({\n        insertModalVisible: false\n      });\n    };\n\n    _this.handleUpdateModalReady = function (_ref2) {\n      var form = _ref2.form;\n      // console.log(\"handleUpdateModalReady\");\n      _this.updateForm = form;\n      var onUpdateModalReady = _this.props.onUpdateModalReady;\n\n      if (typeof onUpdateModalReady == \"function\") {\n        onUpdateModalReady({\n          form: form\n        });\n      }\n    };\n\n    _this.handleUpdateModalOk = function () {\n      var updateRecord = _this.props.updateRecord;\n\n      if (typeof updateRecord == \"function\") {\n        // updateRecord({ form: this.updateForm });\n        _this.updateForm.validateFields(function (err, values) {\n          if (!err) {\n            updateRecord({\n              form: _this.updateForm\n            }); // this.insertForm.resetFields();\n\n            setTimeout(function () {\n              _this.props.onSearchClick(_this.getSearchFormValue(), _this.props.pagination);\n            }, 200);\n\n            _this.setState({\n              updateModalVisible: false\n            });\n          }\n        });\n      } // this.setState({\n      //     updateModalVisible: false,\n      // });\n\n    };\n\n    _this.handleUpdateModalCancel = function () {\n      _this.setState({\n        updateModalVisible: false\n      });\n    };\n\n    _this.handleDetailModalCancel = function () {\n      _this.setState({\n        detailModalVisible: false\n      });\n    };\n\n    _this.addUpdateDeleteColumns = function (columns) {\n      var newCol = columns;\n      var _this$props = _this.props,\n          updateRecord = _this$props.updateRecord,\n          deleteRecord = _this$props.deleteRecord,\n          setUpdateModal = _this$props.setUpdateModal;\n      columns.forEach(function (item) {\n        return item.ellipsis = true;\n      }); // if (updateRecord || deleteRecord) {\n      //增加只读权限\n\n      if ((updateRecord || deleteRecord) && sessionStorage.userPrivilege != 2) {\n        newCol = [].concat(_toConsumableArray(columns), [{\n          title: \"操作\",\n          key: \"action\",\n          align: \"left\",\n          fixed: \"right\",\n          width: 144,\n          render: function render(text, record) {\n            return React.createElement(\"div\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 128\n              },\n              __self: this\n            }, updateRecord && React.createElement(\"a\", {\n              style: {\n                color: \"#3281ff\"\n              },\n              onClick: function onClick() {\n                _this.setState({\n                  updateModalVisible: true\n                });\n\n                if (_this.updateForm) {\n                  setUpdateModal({\n                    form: _this.updateForm,\n                    record: record\n                  });\n                } else {\n                  //第一次 updateModal 需要创建 动态表单\n                  setTimeout(function () {\n                    setUpdateModal({\n                      form: _this.updateForm,\n                      record: record\n                    });\n                  }, 0);\n                }\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 130\n              },\n              __self: this\n            }, \"\\u7F16\\u8F91\"), deleteRecord && React.createElement(_Popconfirm, {\n              title: \"\\u662F\\u5426\\u786E\\u8BA4\\u5220\\u9664?\",\n              onConfirm:\n              /*#__PURE__*/\n              _asyncToGenerator(\n              /*#__PURE__*/\n              _regeneratorRuntime.mark(function _callee() {\n                return _regeneratorRuntime.wrap(function _callee$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        return _context.abrupt(\"return\", deleteRecord(record));\n\n                      case 1:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, _callee);\n              })),\n              okText: \"\\u786E\\u8BA4\",\n              cancelText: \"\\u53D6\\u6D88\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 156\n              },\n              __self: this\n            }, React.createElement(\"a\", {\n              style: {\n                color: \"rgba(240, 95, 94, 1)\",\n                margin: \"0 0 0 24px\"\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 164\n              },\n              __self: this\n            }, \"\\u5220\\u9664\")));\n          }\n        }]);\n      }\n\n      return newCol;\n    };\n\n    _this.computeTableY = function () {\n      var pageWraper = document.querySelector(\".pageId\" + _this.pageId);\n      var thHeight = pageWraper.querySelector(\".ant-table-thead\").offsetHeight;\n      var pagiDiv = pageWraper.querySelector(\".ant-pagination.ant-table-pagination\");\n\n      if (pagiDiv) {\n        var pagiHeight = pagiDiv.offsetHeight;\n        var pagiMt = getComputedStyle(pagiDiv).marginTop.replace(/px/, \"\") / 1;\n        var pagiMb = getComputedStyle(pagiDiv).marginBottom.replace(/px/, \"\") / 1; // console.log(thHeight + pagiHeight + pagiMt + pagiMb);\n\n        var computeY = _this.refs.tableWrap.clientHeight - thHeight - pagiHeight - pagiMt - pagiMb;\n\n        _this.setState({\n          scroll: Object.assign({}, _this.state.scroll, {\n            y: computeY\n          })\n        }, function () {\n          _this.refs.tableWrap.querySelector(\".ant-table-body\").style.height = computeY + \"px\";\n        });\n      } else {\n        _this.setState({\n          scroll: Object.assign({}, _this.state.scroll, {\n            y: 0\n          })\n        }, function () {\n          _this.refs.tableWrap.querySelector(\".ant-table-body\").style.height = \"54px\";\n        });\n      }\n    };\n\n    _this.getInsertFormFields = function () {\n      if (typeof _this.props.getInsertFormFields == \"function\") {\n        var dataArr = _this.props.getInsertFormFields();\n\n        for (var i = 0; i < dataArr.length; i++) {\n          var item = dataArr[i];\n\n          if (!_this.insertId) {\n            _this.insertId = parseInt(Math.random() * 100000000);\n          }\n\n          item.id = item.id + \"_add\" + _this.insertId;\n        }\n\n        console.log(dataArr, \"dataArrdataArrdataArr\");\n        return dataArr;\n      }\n    };\n\n    _this.getInsertFormValue = function () {\n      var formData = _this.insertForm.getFieldsValue();\n\n      var newData = {};\n\n      for (var key in formData) {\n        if (formData.hasOwnProperty(key)) {\n          var newKey = key.replace(/_add.*/, \"\");\n          newData[newKey] = formData[key];\n        }\n      }\n\n      return newData;\n    };\n\n    _this.onSearchReady = function (_ref4) {\n      var form = _ref4.form;\n      _this.searchForm = form;\n    };\n\n    _this.getSearchFormFields = function () {\n      var dataArr;\n\n      if (typeof _this.props.getSearchFormFields == \"function\") {\n        dataArr = _this.props.getSearchFormFields();\n      }\n\n      if (Array.isArray(_this.props.getSearchFormFields)) {\n        dataArr = _this.props.getSearchFormFields;\n      }\n\n      for (var i = 0; i < dataArr.length; i++) {\n        var item = dataArr[i];\n\n        if (!_this.searchId) {\n          _this.searchId = parseInt(Math.random() * 100000000);\n        }\n\n        item.id = item.id + \"_search\" + _this.searchId;\n      }\n\n      return dataArr;\n    };\n\n    _this.handleSearch = function () {\n      var params = _this.getSearchFormValue(); // window.searchFun = this.getSearchFormValue;\n\n\n      if (_this.props.pagination) {\n        var newPag = _objectSpread({}, _this.props.pagination);\n\n        newPag.current = 1;\n\n        _this.props.onSearchClick(params, newPag);\n      } else {\n        _this.props.onSearchClick(params);\n      } // this.props.onSearchClick(params);\n\n    };\n\n    _this.getSearchFormValue = function () {\n      var formData = _this.searchForm.getFieldsValue();\n\n      var newData = {};\n\n      for (var key in formData) {\n        var newKey = key.replace(/_search.*/, \"\");\n\n        if (formData[key] != null) {\n          newData[newKey] = formData[key];\n\n          if (newKey == \"startTime\" || newKey == \"endTime\") {\n            newData[newKey] = formData[key].unix();\n          }\n        } else {\n          newData[newKey] = \"\";\n        }\n      }\n\n      return newData;\n    };\n\n    _this.handlePagination = function (pagination) {\n      // console.log(\"手动分页 \", pagination);\n      var params = _this.getSearchFormValue(pagination);\n\n      _this.props.onSearchClick(params, pagination);\n    };\n\n    _this.handleResize = function () {\n      if (_this.timer) {\n        clearTimeout(_this.timer);\n      }\n\n      _this.timer = setTimeout(function () {\n        _this.computeTableY();\n      }, 30);\n    };\n\n    _this.onDoubleClick = function (record, event) {\n      // console.log(record);\n      _this.record = record;\n\n      _this.setState({\n        detailModalVisible: true\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(CurdComponent, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // this.computeTableY();\n      window.addEventListener(\"resize\", this.handleResize);\n      window.searchFun = this.getSearchFormValue; // this.handleResize();\n    } // static getDerivedStateFromProps(nextProps, prevState) {\n    //     console.log(\"getDerivedStateFromProps\");\n    //     return null;\n    // }\n\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      if (prevProps.dataSource.length != this.props.dataSource.length) {\n        // console.log(\"handleResize\");\n        this.handleResize();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      // console.log(\"componentWillUnmount\");\n      window.removeEventListener(\"resize\", this.handleResize);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          _this$props2$rowKey = _this$props2.rowKey,\n          rowKey = _this$props2$rowKey === void 0 ? \"id\" : _this$props2$rowKey,\n          _this$props2$isShowSe = _this$props2.isShowSearchForm,\n          isShowSearchForm = _this$props2$isShowSe === void 0 ? true : _this$props2$isShowSe,\n          getSearchFormFields = _this$props2.getSearchFormFields,\n          onSearchClick = _this$props2.onSearchClick,\n          searchLoading = _this$props2.searchLoading,\n          _this$props2$insertBt = _this$props2.insertBtnText,\n          insertBtnText = _this$props2$insertBt === void 0 ? \"\" : _this$props2$insertBt,\n          _this$props2$insertMo = _this$props2.insertModalText,\n          insertModalText = _this$props2$insertMo === void 0 ? \"新增记录\" : _this$props2$insertMo,\n          _this$props2$getInser = _this$props2.getInsertFormFields,\n          getInsertFormFields = _this$props2$getInser === void 0 ? function () {} : _this$props2$getInser,\n          _this$props2$updateBt = _this$props2.updateBtnText,\n          updateBtnText = _this$props2$updateBt === void 0 ? \"编辑\" : _this$props2$updateBt,\n          _this$props2$updateMo = _this$props2.updateModalText,\n          updateModalText = _this$props2$updateMo === void 0 ? \"修改记录\" : _this$props2$updateMo,\n          _this$props2$getUpdat = _this$props2.getUpdateFormFields,\n          getUpdateFormFields = _this$props2$getUpdat === void 0 ? function () {} : _this$props2$getUpdat,\n          columns = _this$props2.columns,\n          dataSource = _this$props2.dataSource,\n          scroll = _this$props2.scroll,\n          _this$props2$addBtnAr = _this$props2.addBtnArr,\n          addBtnArr = _this$props2$addBtnAr === void 0 ? null : _this$props2$addBtnAr,\n          rowSelection = _this$props2.rowSelection,\n          _this$props2$dtColumn = _this$props2.dtColumns,\n          dtColumns = _this$props2$dtColumn === void 0 ? [] : _this$props2$dtColumn,\n          detailTitle = _this$props2.detailTitle,\n          rest = _objectWithoutProperties(_this$props2, [\"rowKey\", \"isShowSearchForm\", \"getSearchFormFields\", \"onSearchClick\", \"searchLoading\", \"insertBtnText\", \"insertModalText\", \"getInsertFormFields\", \"updateBtnText\", \"updateModalText\", \"getUpdateFormFields\", \"columns\", \"dataSource\", \"scroll\", \"addBtnArr\", \"rowSelection\", \"dtColumns\", \"detailTitle\"]); // this.pageId = window.pageId++;\n\n\n      if (!this.pageId) {\n        if (!window.pageId) {\n          window.pageId = 1;\n        }\n\n        this.pageId = window.pageId++;\n      }\n\n      if (this.props.onRef) {\n        //如果父组件传来该方法 则调用方法将子组件this指针传过去\n        this.props.onRef(this);\n      }\n\n      var pageSize = 0; // let hasInsert = this.props.hasSlot && sessionStorage.userPrivilege == 0;\n\n      var hasInsert = this.props.children && sessionStorage.userPrivilege == 0; // console.log(hasInsert);\n\n      if (insertBtnText || hasInsert) {\n        pageSize = 12;\n      }\n\n      if (this.props.getSearchFormFields && this.props.getSearchFormFields().length > 0) {\n        // if (this.props.isShowSearchForm) {\n        pageSize = 12;\n\n        if (insertBtnText || hasInsert) {\n          pageSize = 11;\n        }\n      }\n\n      if (this.props.pageSize) {\n        pageSize = this.props.pageSize;\n      }\n\n      pageSize = pageSize + 2; // console.log(\"CurdComponent 渲染 \", this.pageId);\n      // console.log(\"insertBtnText\", insertBtnText);\n      // console.log(\"hasSlot\", this.props.hasSlot);\n\n      return React.createElement(\"div\", {\n        className: styles.curdComponent + \" curdWraper\" + \" pageId\" + this.pageId,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 406\n        },\n        __self: this\n      }, hasInsert && React.createElement(\"div\", {\n        className: styles.insertWrap,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 420\n        },\n        __self: this\n      }, React.createElement(UploadWrap, Object.assign({}, this.props.children.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 421\n        },\n        __self: this\n      }))), isShowSearchForm && React.createElement(\"div\", {\n        className: styles.searchWrap,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 425\n        },\n        __self: this\n      }, React.createElement(SearchForm // fields={this.getSearchFormFields()}\n      , {\n        fields: this.props.getSearchFormFields(),\n        onSearchClick: this.handleSearch,\n        insertBtnText: insertBtnText,\n        searchLoading: searchLoading,\n        pageId: this.pageId,\n        onReady: this.onSearchReady,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 426\n        },\n        __self: this\n      }, !this.props.hasSearchSlot && hasInsert && insertBtnText && React.createElement(_Button, {\n        type: \"primary\",\n        icon: \"plus\",\n        onClick: this.handleInsertBtn,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 438\n        },\n        __self: this\n      }, insertBtnText), this.props.hasSearchSlot && sessionStorage.userPrivilege != 2 && React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 448\n        },\n        __self: this\n      }, this.props.addBtn))), React.createElement(\"div\", {\n        className: styles.pad22,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 483\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        ref: \"tableWrap\",\n        className: styles.tableWrap,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 484\n        },\n        __self: this\n      }, React.createElement(Table, {\n        rowKey: rowKey,\n        columns: this.addUpdateDeleteColumns(columns()),\n        dataSource: dataSource,\n        scroll: this.state.scroll,\n        rowSelection: rowSelection,\n        handlePagination: this.handlePagination,\n        pagination: this.props.pagination,\n        pageSize: pageSize,\n        onDoubleClick: this.onDoubleClick,\n        showDetail: dtColumns.length > 0,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 485\n        },\n        __self: this\n      })), React.createElement(DynamicModal, Object.assign({\n        title: insertModalText,\n        visible: this.state.insertModalVisible,\n        fields: this.getInsertFormFields(),\n        onOk: this.handleInsertModalOk,\n        onCancel: this.handleInsertModalCancel,\n        onReady: this.handleInsertModalReady\n      }, rest, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 498\n        },\n        __self: this\n      })), React.createElement(DynamicModal, Object.assign({\n        title: updateModalText,\n        visible: this.state.updateModalVisible,\n        fields: getUpdateFormFields(),\n        onOk: this.handleUpdateModalOk,\n        onCancel: this.handleUpdateModalCancel,\n        onReady: this.handleUpdateModalReady // col=\"2\"\n        // width=\"600px\"\n\n      }, rest, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 507\n        },\n        __self: this\n      })), React.createElement(DynamicDescriptions, Object.assign({\n        title: detailTitle,\n        visible: this.state.detailModalVisible,\n        onCancel: this.handleDetailModalCancel,\n        fields: dtColumns,\n        record: this.record,\n        onReady: this.handleUpdateModalReady,\n        column: this.props.dtCol\n      }, rest, {\n        width: this.props.dtWidth,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 518\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return CurdComponent;\n}(React.PureComponent);\n\nexport default CurdComponent;","map":{"version":3,"sources":["D:/company/algo-manage/src/components/CurdComponent/index.js"],"names":["React","styles","SearchForm","DynamicModal","Table","DynamicDescriptions","UploadWrap","CurdComponent","state","insertModalVisible","updateModalVisible","detailModalVisible","scroll","props","handleInsertBtn","setState","insertForm","resetFields","handleInsertModalReady","form","onInsertModalReady","handleInsertModalOk","insertRecord","validateFields","err","values","formData","getInsertFormValue","key","setTimeout","onSearchClick","getSearchFormValue","pagination","handleInsertModalCancel","handleUpdateModalReady","updateForm","onUpdateModalReady","handleUpdateModalOk","updateRecord","handleUpdateModalCancel","handleDetailModalCancel","addUpdateDeleteColumns","columns","newCol","deleteRecord","setUpdateModal","forEach","item","ellipsis","sessionStorage","userPrivilege","title","align","fixed","width","render","text","record","color","margin","computeTableY","pageWraper","document","querySelector","pageId","thHeight","offsetHeight","pagiDiv","pagiHeight","pagiMt","getComputedStyle","marginTop","replace","pagiMb","marginBottom","computeY","refs","tableWrap","clientHeight","Object","assign","y","style","height","getInsertFormFields","dataArr","i","length","insertId","parseInt","Math","random","id","console","log","getFieldsValue","newData","hasOwnProperty","newKey","onSearchReady","searchForm","getSearchFormFields","Array","isArray","searchId","handleSearch","params","newPag","current","unix","handlePagination","handleResize","timer","clearTimeout","onDoubleClick","event","window","addEventListener","searchFun","prevProps","prevState","dataSource","removeEventListener","rowKey","isShowSearchForm","searchLoading","insertBtnText","insertModalText","updateBtnText","updateModalText","getUpdateFormFields","addBtnArr","rowSelection","dtColumns","detailTitle","rest","onRef","pageSize","hasInsert","children","curdComponent","insertWrap","searchWrap","hasSearchSlot","addBtn","pad22","dtCol","dtWidth","PureComponent"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Button, Popconfirm } from \"antd\";\r\nimport styles from \"./index.module.less\";\r\nimport SearchForm from \"@/components/SearchForm\";\r\nimport DynamicModal from \"@/components/DynamicModal\";\r\nimport Table from \"@/components/Table\";\r\nimport DynamicDescriptions from \"@/components/DynamicDescriptions\";\r\n// import SplitPane from \"react-split-pane\";\r\nimport UploadWrap from \"@/components/UploadWrap\";\r\n\r\nclass CurdComponent extends React.PureComponent {\r\n    state = {\r\n        insertModalVisible: false,\r\n        updateModalVisible: false,\r\n        detailModalVisible: false,\r\n        scroll: this.props.scroll,\r\n    };\r\n    handleInsertBtn = () => {\r\n        this.setState({\r\n            insertModalVisible: true,\r\n            // updateModalVisible: true\r\n        });\r\n        this.insertForm.resetFields();\r\n    };\r\n    handleInsertModalReady = ({ form }) => {\r\n        this.insertForm = form;\r\n        let { onInsertModalReady } = this.props;\r\n        if (typeof onInsertModalReady == \"function\") {\r\n            onInsertModalReady({ form });\r\n        }\r\n    };\r\n    handleInsertModalOk = () => {\r\n        let { insertRecord } = this.props;\r\n        if (typeof insertRecord == \"function\") {\r\n            // insertRecord({ form: this.insertForm });\r\n            this.insertForm.validateFields((err, values) => {\r\n                if (!err) {\r\n                    let formData = this.getInsertFormValue();\r\n                    for (let key in formData) {\r\n                        if (!formData[key]) {\r\n                            formData[key] = \"\";\r\n                        }\r\n                    }\r\n                    insertRecord(formData);\r\n                    setTimeout(() => {\r\n                        this.props.onSearchClick(\r\n                            this.getSearchFormValue(),\r\n                            this.props.pagination\r\n                        );\r\n                    }, 200);\r\n                    this.insertForm.resetFields();\r\n                    this.setState({\r\n                        insertModalVisible: false,\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n    handleInsertModalCancel = () => {\r\n        this.setState({\r\n            insertModalVisible: false,\r\n        });\r\n    };\r\n    //更新\r\n    handleUpdateModalReady = ({ form }) => {\r\n        // console.log(\"handleUpdateModalReady\");\r\n        this.updateForm = form;\r\n        let { onUpdateModalReady } = this.props;\r\n        if (typeof onUpdateModalReady == \"function\") {\r\n            onUpdateModalReady({ form });\r\n        }\r\n    };\r\n    handleUpdateModalOk = () => {\r\n        let { updateRecord } = this.props;\r\n        if (typeof updateRecord == \"function\") {\r\n            // updateRecord({ form: this.updateForm });\r\n            this.updateForm.validateFields((err, values) => {\r\n                if (!err) {\r\n                    updateRecord({ form: this.updateForm });\r\n                    // this.insertForm.resetFields();\r\n                    setTimeout(() => {\r\n                        this.props.onSearchClick(\r\n                            this.getSearchFormValue(),\r\n                            this.props.pagination\r\n                        );\r\n                    }, 200);\r\n                    this.setState({\r\n                        updateModalVisible: false,\r\n                    });\r\n                }\r\n            });\r\n        }\r\n        // this.setState({\r\n        //     updateModalVisible: false,\r\n        // });\r\n    };\r\n    handleUpdateModalCancel = () => {\r\n        this.setState({\r\n            updateModalVisible: false,\r\n        });\r\n    };\r\n    handleDetailModalCancel = () => {\r\n        this.setState({\r\n            detailModalVisible: false,\r\n        });\r\n    };\r\n    // 增加 操作 按钮\r\n    addUpdateDeleteColumns = (columns) => {\r\n        let newCol = columns;\r\n        let { updateRecord, deleteRecord, setUpdateModal } = this.props;\r\n        columns.forEach((item) => (item.ellipsis = true));\r\n        // if (updateRecord || deleteRecord) {\r\n        //增加只读权限\r\n        if (\r\n            (updateRecord || deleteRecord) &&\r\n            sessionStorage.userPrivilege != 2\r\n        ) {\r\n            newCol = [\r\n                ...columns,\r\n                {\r\n                    title: \"操作\",\r\n                    key: \"action\",\r\n                    align: \"left\",\r\n                    fixed: \"right\",\r\n                    width: 144,\r\n                    render: (text, record) => {\r\n                        return (\r\n                            <div>\r\n                                {updateRecord && (\r\n                                    <a\r\n                                        style={{ color: \"#3281ff\" }}\r\n                                        onClick={() => {\r\n                                            this.setState({\r\n                                                updateModalVisible: true,\r\n                                            });\r\n                                            if (this.updateForm) {\r\n                                                setUpdateModal({\r\n                                                    form: this.updateForm,\r\n                                                    record,\r\n                                                });\r\n                                            } else {\r\n                                                //第一次 updateModal 需要创建 动态表单\r\n                                                setTimeout(() => {\r\n                                                    setUpdateModal({\r\n                                                        form: this.updateForm,\r\n                                                        record,\r\n                                                    });\r\n                                                }, 0);\r\n                                            }\r\n                                        }}\r\n                                    >\r\n                                        编辑\r\n                                    </a>\r\n                                )}\r\n                                {deleteRecord && (\r\n                                    <Popconfirm\r\n                                        title=\"是否确认删除?\"\r\n                                        onConfirm={async () =>\r\n                                            deleteRecord(record)\r\n                                        }\r\n                                        okText=\"确认\"\r\n                                        cancelText=\"取消\"\r\n                                    >\r\n                                        <a\r\n                                            style={{\r\n                                                color: \"rgba(240, 95, 94, 1)\",\r\n                                                margin: \"0 0 0 24px\",\r\n                                            }}\r\n                                        >\r\n                                            删除\r\n                                        </a>\r\n                                    </Popconfirm>\r\n                                )}\r\n                            </div>\r\n                        );\r\n                    },\r\n                },\r\n            ];\r\n        }\r\n        return newCol;\r\n    };\r\n    //计算table scroll 纵向高度\r\n    computeTableY = () => {\r\n        let pageWraper = document.querySelector(\".pageId\" + this.pageId);\r\n        let thHeight =\r\n            pageWraper.querySelector(\".ant-table-thead\").offsetHeight;\r\n        let pagiDiv = pageWraper.querySelector(\r\n            \".ant-pagination.ant-table-pagination\"\r\n        );\r\n        if (pagiDiv) {\r\n            let pagiHeight = pagiDiv.offsetHeight;\r\n            let pagiMt =\r\n                getComputedStyle(pagiDiv).marginTop.replace(/px/, \"\") / 1;\r\n            let pagiMb =\r\n                getComputedStyle(pagiDiv).marginBottom.replace(/px/, \"\") / 1;\r\n            // console.log(thHeight + pagiHeight + pagiMt + pagiMb);\r\n            let computeY =\r\n                this.refs.tableWrap.clientHeight -\r\n                thHeight -\r\n                pagiHeight -\r\n                pagiMt -\r\n                pagiMb;\r\n            this.setState(\r\n                {\r\n                    scroll: Object.assign({}, this.state.scroll, {\r\n                        y: computeY,\r\n                    }),\r\n                },\r\n                () => {\r\n                    this.refs.tableWrap.querySelector(\r\n                        \".ant-table-body\"\r\n                    ).style.height = computeY + \"px\";\r\n                }\r\n            );\r\n        } else {\r\n            this.setState(\r\n                {\r\n                    scroll: Object.assign({}, this.state.scroll, {\r\n                        y: 0,\r\n                    }),\r\n                },\r\n                () => {\r\n                    this.refs.tableWrap.querySelector(\r\n                        \".ant-table-body\"\r\n                    ).style.height = \"54px\";\r\n                }\r\n            );\r\n        }\r\n    };\r\n    //添加随机id\r\n    getInsertFormFields = () => {\r\n        if (typeof this.props.getInsertFormFields == \"function\") {\r\n            let dataArr = this.props.getInsertFormFields();\r\n            for (let i = 0; i < dataArr.length; i++) {\r\n                const item = dataArr[i];\r\n                if (!this.insertId) {\r\n                    this.insertId = parseInt(Math.random() * 100000000);\r\n                }\r\n                item.id = item.id + \"_add\" + this.insertId;\r\n            }\r\n            console.log(dataArr, \"dataArrdataArrdataArr\");\r\n            return dataArr;\r\n        }\r\n    };\r\n    //处理InsertForm结果\r\n    getInsertFormValue = () => {\r\n        let formData = this.insertForm.getFieldsValue();\r\n        let newData = {};\r\n        for (const key in formData) {\r\n            if (formData.hasOwnProperty(key)) {\r\n                let newKey = key.replace(/_add.*/, \"\");\r\n                newData[newKey] = formData[key];\r\n            }\r\n        }\r\n        return newData;\r\n    };\r\n\r\n    onSearchReady = ({ form }) => {\r\n        this.searchForm = form;\r\n    };\r\n    //添加随机id\r\n    getSearchFormFields = () => {\r\n        let dataArr;\r\n        if (typeof this.props.getSearchFormFields == \"function\") {\r\n            dataArr = this.props.getSearchFormFields();\r\n        }\r\n        if (Array.isArray(this.props.getSearchFormFields)) {\r\n            dataArr = this.props.getSearchFormFields;\r\n        }\r\n        for (let i = 0; i < dataArr.length; i++) {\r\n            const item = dataArr[i];\r\n            if (!this.searchId) {\r\n                this.searchId = parseInt(Math.random() * 100000000);\r\n            }\r\n            item.id = item.id + \"_search\" + this.searchId;\r\n        }\r\n        return dataArr;\r\n    };\r\n    handleSearch = () => {\r\n        let params = this.getSearchFormValue();\r\n        // window.searchFun = this.getSearchFormValue;\r\n        if (this.props.pagination) {\r\n            let newPag = { ...this.props.pagination };\r\n            newPag.current = 1;\r\n            this.props.onSearchClick(params, newPag);\r\n        } else {\r\n            this.props.onSearchClick(params);\r\n        }\r\n        // this.props.onSearchClick(params);\r\n    };\r\n    //处理SearchForm结果\r\n    getSearchFormValue = () => {\r\n        let formData = this.searchForm.getFieldsValue();\r\n        let newData = {};\r\n        for (const key in formData) {\r\n            let newKey = key.replace(/_search.*/, \"\");\r\n            if (formData[key] != null) {\r\n                newData[newKey] = formData[key];\r\n                if (newKey == \"startTime\" || newKey == \"endTime\") {\r\n                    newData[newKey] = formData[key].unix();\r\n                }\r\n            } else {\r\n                newData[newKey] = \"\";\r\n            }\r\n        }\r\n        return newData;\r\n    };\r\n    handlePagination = (pagination) => {\r\n        // console.log(\"手动分页 \", pagination);\r\n        let params = this.getSearchFormValue(pagination);\r\n        this.props.onSearchClick(params, pagination);\r\n    };\r\n    //handleResize 窗口尺寸变化时触发事件\r\n    handleResize = () => {\r\n        if (this.timer) {\r\n            clearTimeout(this.timer);\r\n        }\r\n        this.timer = setTimeout(() => {\r\n            this.computeTableY();\r\n        }, 30);\r\n    };\r\n    onDoubleClick = (record, event) => {\r\n        // console.log(record);\r\n        this.record = record;\r\n        this.setState({ detailModalVisible: true });\r\n    };\r\n    componentDidMount() {\r\n        // this.computeTableY();\r\n        window.addEventListener(\"resize\", this.handleResize);\r\n        window.searchFun = this.getSearchFormValue;\r\n        // this.handleResize();\r\n    }\r\n    // static getDerivedStateFromProps(nextProps, prevState) {\r\n    //     console.log(\"getDerivedStateFromProps\");\r\n    //     return null;\r\n    // }\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.dataSource.length != this.props.dataSource.length) {\r\n            // console.log(\"handleResize\");\r\n            this.handleResize();\r\n        }\r\n    }\r\n    componentWillUnmount() {\r\n        // console.log(\"componentWillUnmount\");\r\n        window.removeEventListener(\"resize\", this.handleResize);\r\n    }\r\n    render() {\r\n        let {\r\n            rowKey = \"id\",\r\n            isShowSearchForm = true, //是否显示 搜索框\r\n            getSearchFormFields, //搜索框的搜索列表\r\n            onSearchClick, //搜索按钮点击事件\r\n            searchLoading, //搜索按钮loading状态\r\n            insertBtnText = \"\", //新增按钮内容\r\n            insertModalText = \"新增记录\", //新增弹框标题\r\n            getInsertFormFields = () => {}, //新增弹框表单内容\r\n            updateBtnText = \"编辑\", //更新按钮内容\r\n            updateModalText = \"修改记录\", //更新弹框标题\r\n            getUpdateFormFields = () => {}, //更新弹框表单内容\r\n            columns, //table 表头\r\n            dataSource, //table 数据源,\r\n            scroll, // table 滚动距离\r\n            addBtnArr = null, //按钮组\r\n            rowSelection, //批量选择\r\n            dtColumns = [], //详情列表\r\n            detailTitle, //详情标题\r\n            ...rest\r\n        } = this.props;\r\n        // this.pageId = window.pageId++;\r\n        if (!this.pageId) {\r\n            if (!window.pageId) {\r\n                window.pageId = 1;\r\n            }\r\n            this.pageId = window.pageId++;\r\n        }\r\n        if (this.props.onRef) {\r\n            //如果父组件传来该方法 则调用方法将子组件this指针传过去\r\n            this.props.onRef(this);\r\n        }\r\n        let pageSize = 0;\r\n        // let hasInsert = this.props.hasSlot && sessionStorage.userPrivilege == 0;\r\n        let hasInsert =\r\n            this.props.children && sessionStorage.userPrivilege == 0;\r\n        // console.log(hasInsert);\r\n        if (insertBtnText || hasInsert) {\r\n            pageSize = 12;\r\n        }\r\n        if (\r\n            this.props.getSearchFormFields &&\r\n            this.props.getSearchFormFields().length > 0\r\n        ) {\r\n            // if (this.props.isShowSearchForm) {\r\n            pageSize = 12;\r\n            if (insertBtnText || hasInsert) {\r\n                pageSize = 11;\r\n            }\r\n        }\r\n        if (this.props.pageSize) {\r\n            pageSize = this.props.pageSize;\r\n        }\r\n        pageSize = pageSize + 2;\r\n        // console.log(\"CurdComponent 渲染 \", this.pageId);\r\n        // console.log(\"insertBtnText\", insertBtnText);\r\n        // console.log(\"hasSlot\", this.props.hasSlot);\r\n        return (\r\n            <div\r\n                className={\r\n                    styles.curdComponent +\r\n                    \" curdWraper\" +\r\n                    \" pageId\" +\r\n                    this.pageId\r\n                }\r\n            >\r\n                {/* {hasInsert && (\r\n                    <div className={styles.insertWrap}>\r\n                        {this.props.children}\r\n                    </div>\r\n                )} */}\r\n                {hasInsert && (\r\n                    <div className={styles.insertWrap}>\r\n                        <UploadWrap {...this.props.children.props}></UploadWrap>\r\n                    </div>\r\n                )}\r\n                {isShowSearchForm && (\r\n                    <div className={styles.searchWrap}>\r\n                        <SearchForm\r\n                            // fields={this.getSearchFormFields()}\r\n                            fields={this.props.getSearchFormFields()}\r\n                            onSearchClick={this.handleSearch}\r\n                            insertBtnText={insertBtnText}\r\n                            searchLoading={searchLoading}\r\n                            pageId={this.pageId}\r\n                            onReady={this.onSearchReady}\r\n                        >\r\n                            {!this.props.hasSearchSlot &&\r\n                                hasInsert &&\r\n                                insertBtnText && (\r\n                                    <Button\r\n                                        type=\"primary\"\r\n                                        icon=\"plus\"\r\n                                        onClick={this.handleInsertBtn}\r\n                                    >\r\n                                        {insertBtnText}\r\n                                    </Button>\r\n                                )}\r\n                            {this.props.hasSearchSlot &&\r\n                                sessionStorage.userPrivilege != 2 && (\r\n                                    <React.Fragment>\r\n                                        {this.props.addBtn}\r\n                                    </React.Fragment>\r\n                                )}\r\n                        </SearchForm>\r\n                        {/* <div\r\n                            style={{\r\n                                position: \"relative\",\r\n                            }}\r\n                        >\r\n                            <div\r\n                                style={{\r\n                                    position: \"absolute\",\r\n                                    width: \"100%\",\r\n                                    height: \"1px\",\r\n                                    background: \"#EBEBEB\",\r\n                                    top: \"-1px\",\r\n                                }}\r\n                            ></div>\r\n                        </div> */}\r\n                    </div>\r\n                )}\r\n                {/* {insertBtnText != \"\" && (\r\n                    <div className={styles.insertWrap}>\r\n                        {insertBtnText && (\r\n                            <Button\r\n                                type=\"primary\"\r\n                                icon=\"plus\"\r\n                                onClick={this.handleInsertBtn}\r\n                            >\r\n                                {insertBtnText}\r\n                            </Button>\r\n                        )}\r\n                    </div>\r\n                )} */}\r\n                <div className={styles.pad22}></div>\r\n                <div ref=\"tableWrap\" className={styles.tableWrap}>\r\n                    <Table\r\n                        rowKey={rowKey}\r\n                        columns={this.addUpdateDeleteColumns(columns())}\r\n                        dataSource={dataSource}\r\n                        scroll={this.state.scroll}\r\n                        rowSelection={rowSelection}\r\n                        handlePagination={this.handlePagination}\r\n                        pagination={this.props.pagination}\r\n                        pageSize={pageSize}\r\n                        onDoubleClick={this.onDoubleClick}\r\n                        showDetail={dtColumns.length > 0}\r\n                    ></Table>\r\n                </div>\r\n                <DynamicModal\r\n                    title={insertModalText}\r\n                    visible={this.state.insertModalVisible}\r\n                    fields={this.getInsertFormFields()}\r\n                    onOk={this.handleInsertModalOk}\r\n                    onCancel={this.handleInsertModalCancel}\r\n                    onReady={this.handleInsertModalReady}\r\n                    {...rest}\r\n                ></DynamicModal>\r\n                <DynamicModal\r\n                    title={updateModalText}\r\n                    visible={this.state.updateModalVisible}\r\n                    fields={getUpdateFormFields()}\r\n                    onOk={this.handleUpdateModalOk}\r\n                    onCancel={this.handleUpdateModalCancel}\r\n                    onReady={this.handleUpdateModalReady}\r\n                    // col=\"2\"\r\n                    // width=\"600px\"\r\n                    {...rest}\r\n                ></DynamicModal>\r\n                <DynamicDescriptions\r\n                    title={detailTitle}\r\n                    visible={this.state.detailModalVisible}\r\n                    onCancel={this.handleDetailModalCancel}\r\n                    fields={dtColumns}\r\n                    record={this.record}\r\n                    onReady={this.handleUpdateModalReady}\r\n                    column={this.props.dtCol}\r\n                    {...rest}\r\n                    width={this.props.dtWidth}\r\n                ></DynamicDescriptions>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default CurdComponent;\r\n"]},"metadata":{},"sourceType":"module"}