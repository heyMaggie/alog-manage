{"ast":null,"code":"import \"antd/lib/form/style\";\nimport _Form from \"antd/lib/form\";\nimport _defineProperty from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport \"antd/lib/message/style\";\nimport _message from \"antd/lib/message\";\nimport _classCallCheck from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport \"antd/lib/input/style\";\nimport _Input from \"antd/lib/input\";\nvar _jsxFileName = \"D:\\\\company\\\\algo-manage\\\\src\\\\algo\\\\modules\\\\manage\\\\pages\\\\fileOrder\\\\index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport CurdComponent from \"@/components/CurdComponent\";\nimport SelectOption from \"@/components/SelectOption\";\nimport Table from \"@/components/Table\";\n\nvar getSearchFormFields = function getSearchFormFields() {\n  return [{\n    label: \"文件类型\",\n    id: \"type\",\n    component: SelectOption(dict.fileTypeList, {\n      placeholder: \"请选择文件类型\",\n      allowClear: true // onChange: this.inputChange,\n\n    })\n  }, {\n    label: \"用户ID\",\n    id: \"userId\",\n    component: React.createElement(_Input, {\n      placeholder: \"\\u8BF7\\u8F93\\u5165\\u7528\\u6237ID\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    })\n  }];\n};\n\nvar FileOrder =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(FileOrder, _React$PureComponent);\n\n  function FileOrder() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, FileOrder);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(FileOrder)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.columns = function (params) {\n      return [{\n        title: \"用户ID\",\n        dataIndex: \"userId\",\n        width: 150\n      }, {\n        title: \"文件名\",\n        dataIndex: \"fileName\"\n      }, {\n        title: \"创建时间\",\n        dataIndex: \"updateTime\",\n        width: 220\n      }, {\n        title: \"错误信息\",\n        dataIndex: \"errCode\"\n      }, {\n        title: \"下载\",\n        key: \"operation\",\n        fixed: \"right\",\n        width: 100,\n        render: function render(text, record) {\n          return record.fileType == 0 ? null : React.createElement(\"a\", {\n            onClick: function onClick(e) {\n              _this.handleUpdateBtn(record);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 54\n            },\n            __self: this\n          }, \"\\u4E0B\\u8F7D\");\n        }\n      }];\n    };\n\n    _this.state = {\n      searchLoading: false,\n      selectedRowKeys: [],\n      info: [],\n      updateArr: [],\n      updateModalVisible: false // fileTypeList: [],\n\n    };\n\n    _this.handleUpdateBtn = function (record) {\n      console.log(\"下载按钮\", record);\n      _this.record = record;\n      var downFilePath = \"\".concat(window.baseURL, \"/file-scan/downloadFileScan?fileName=\").concat(record.fileName, \"&filePath=\").concat(record.filePath);\n      downFilePath = downFilePath.replace(/\\\\/g, \"%\"); // window.location.href = downFilePath;\n\n      console.log(downFilePath); // window.baseURL + this.props.urlPrefix + \"/download\";\n      // window.location.href =\n      //     \"http://192.168.2.105:20010/file-scan/downloadFileScan?fileName=2022_aUser0000085_order.csv&filePath=group1%2FM00%2F00%2F00%2FwKgBVWMXE2qABX6yAAAB7gEuZ_c866.csv\";\n      // this.getDownLoadFile(record);\n    };\n\n    _this.getDownLoadFile = function (record) {\n      var params = {\n        fileName: record.fileName,\n        filePath: record.filePath\n      };\n      http.get({\n        url: \"/file-scan/downloadFileScan\",\n        data: params\n      }).then(function (res) {\n        var blob = new Blob([res], {\n          type: \"application/vnd.ms-excel\" // 这边的类型需要改\n\n        });\n        var url = window.URL.createObjectURL(blob);\n        var link = document.createElement(\"a\");\n        link.style.display = \"none\";\n        link.download = record.fileName; //  这边的名字需要改\n\n        link.href = url;\n        document.body.appendChild(link);\n        link.click();\n      }).catch(function (e) {\n        _message.error(\"下载失败\");\n      });\n    };\n\n    _this.getData = function () {\n      var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var pagination = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n        current: 1,\n        pageSize: 11\n      };\n      params = _objectSpread({}, params, {\n        pageId: pagination.current,\n        pageNum: pagination.pageSize\n      });\n      http.post({\n        url: \"/file-scan/pageList\",\n        data: params\n      }).then(function (res) {\n        console.log(res); //解析数据字典\n\n        if (res.data.records && res.data.records.length > 0) {\n          parseArrDict(res.data.records, \"errCode\", \"retCode\");\n        } else {\n          _message.info(\"查询结果为空\");\n        }\n\n        var pgn = {\n          current: res.data.current,\n          pageSize: pagination.pageSize,\n          total: res.data.total || 0\n        };\n\n        _this.setState({\n          info: res.data.records,\n          pagination: pgn\n        });\n      });\n    };\n\n    _this.handleSearch = function (params, pagination) {\n      _this.searchParam = params;\n      console.log(params, \"params\");\n\n      _this.getData(params, pagination);\n    };\n\n    return _this;\n  }\n\n  _createClass(FileOrder, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getData();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var scroll = {\n        x: 1000,\n        y: 445\n      };\n      var info = this.state.info;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, React.createElement(CurdComponent, {\n        onSearchClick: this.handleSearch,\n        getSearchFormFields: getSearchFormFields,\n        width: \"600px\",\n        pagination: this.state.pagination,\n        centered: true,\n        columns: this.columns,\n        dataSource: info,\n        scroll: scroll,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        upLoadCSvUrl: \"/file-scan/uploadFile\",\n        noDownload: true,\n        title: \"\\u6587\\u4EF6\",\n        sucCallback: this.getData,\n        type: \".csv\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return FileOrder;\n}(React.PureComponent);\n\nexport default _Form.create()(FileOrder);","map":{"version":3,"sources":["D:/company/algo-manage/src/algo/modules/manage/pages/fileOrder/index.js"],"names":["React","CurdComponent","SelectOption","Table","getSearchFormFields","label","id","component","dict","fileTypeList","placeholder","allowClear","FileOrder","columns","params","title","dataIndex","width","key","fixed","render","text","record","fileType","e","handleUpdateBtn","state","searchLoading","selectedRowKeys","info","updateArr","updateModalVisible","console","log","downFilePath","window","baseURL","fileName","filePath","replace","getDownLoadFile","http","get","url","data","then","res","blob","Blob","type","URL","createObjectURL","link","document","createElement","style","display","download","href","body","appendChild","click","catch","error","getData","pagination","current","pageSize","pageId","pageNum","post","records","length","parseArrDict","pgn","total","setState","handleSearch","searchParam","scroll","x","y","PureComponent","create"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport CurdComponent from \"@/components/CurdComponent\";\r\nimport SelectOption from \"@/components/SelectOption\";\r\nimport { Input, Modal, Form, message, Icon, Tooltip } from \"antd\";\r\nimport Table from \"@/components/Table\";\r\n\r\nlet getSearchFormFields = () => {\r\n    return [\r\n        {\r\n            label: \"文件类型\",\r\n            id: \"type\",\r\n            component: SelectOption(dict.fileTypeList, {\r\n                placeholder: \"请选择文件类型\",\r\n                allowClear: true,\r\n                // onChange: this.inputChange,\r\n            }),\r\n        },\r\n        {\r\n            label: \"用户ID\",\r\n            id: \"userId\",\r\n            component: <Input placeholder=\"请输入用户ID\" />,\r\n        },\r\n    ];\r\n};\r\n\r\nclass FileOrder extends React.PureComponent {\r\n    columns = (params) => {\r\n        return [\r\n            {\r\n                title: \"用户ID\",\r\n                dataIndex: \"userId\",\r\n                width: 150,\r\n            },\r\n            {\r\n                title: \"文件名\",\r\n                dataIndex: \"fileName\",\r\n            },\r\n            {\r\n                title: \"创建时间\",\r\n                dataIndex: \"updateTime\",\r\n                width: 220,\r\n            },\r\n            {\r\n                title: \"错误信息\",\r\n                dataIndex: \"errCode\",\r\n            },\r\n            {\r\n                title: \"下载\",\r\n                key: \"operation\",\r\n                fixed: \"right\",\r\n                width: 100,\r\n                render: (text, record) =>\r\n                    record.fileType == 0 ? null : (\r\n                        <a\r\n                            onClick={(e) => {\r\n                                this.handleUpdateBtn(record);\r\n                            }}\r\n                        >\r\n                            下载\r\n                        </a>\r\n                    ),\r\n            },\r\n        ];\r\n    };\r\n\r\n    state = {\r\n        searchLoading: false,\r\n        selectedRowKeys: [],\r\n        info: [],\r\n        updateArr: [],\r\n        updateModalVisible: false,\r\n        // fileTypeList: [],\r\n    };\r\n\r\n    // 下载按钮点击事件\r\n    handleUpdateBtn = (record) => {\r\n        console.log(\"下载按钮\", record);\r\n        this.record = record;\r\n        let downFilePath = `${window.baseURL}/file-scan/downloadFileScan?fileName=${record.fileName}&filePath=${record.filePath}`;\r\n        downFilePath = downFilePath.replace(/\\\\/g, \"%\");\r\n        // window.location.href = downFilePath;\r\n        console.log(downFilePath);\r\n        // window.baseURL + this.props.urlPrefix + \"/download\";\r\n        // window.location.href =\r\n        //     \"http://192.168.2.105:20010/file-scan/downloadFileScan?fileName=2022_aUser0000085_order.csv&filePath=group1%2FM00%2F00%2F00%2FwKgBVWMXE2qABX6yAAAB7gEuZ_c866.csv\";\r\n        // this.getDownLoadFile(record);\r\n    };\r\n    getDownLoadFile = (record) => {\r\n        let params = {\r\n            fileName: record.fileName,\r\n            filePath: record.filePath,\r\n        };\r\n        http.get({\r\n            url: \"/file-scan/downloadFileScan\",\r\n            data: params,\r\n        })\r\n            .then((res) => {\r\n                let blob = new Blob([res], {\r\n                    type: \"application/vnd.ms-excel\", // 这边的类型需要改\r\n                });\r\n                let url = window.URL.createObjectURL(blob);\r\n                let link = document.createElement(\"a\");\r\n                link.style.display = \"none\";\r\n                link.download = record.fileName; //  这边的名字需要改\r\n                link.href = url;\r\n                document.body.appendChild(link);\r\n                link.click();\r\n            })\r\n            .catch((e) => {\r\n                message.error(\"下载失败\");\r\n            });\r\n    };\r\n    getData = (params = {}, pagination = { current: 1, pageSize: 11 }) => {\r\n        params = {\r\n            ...params,\r\n            pageId: pagination.current,\r\n            pageNum: pagination.pageSize,\r\n        };\r\n        http.post({\r\n            url: \"/file-scan/pageList\",\r\n            data: params,\r\n        }).then((res) => {\r\n            console.log(res);\r\n            //解析数据字典\r\n            if (res.data.records && res.data.records.length > 0) {\r\n                parseArrDict(res.data.records, \"errCode\", \"retCode\");\r\n            } else {\r\n                message.info(\"查询结果为空\");\r\n            }\r\n            let pgn = {\r\n                current: res.data.current,\r\n                pageSize: pagination.pageSize,\r\n                total: res.data.total || 0,\r\n            };\r\n            this.setState({\r\n                info: res.data.records,\r\n                pagination: pgn,\r\n            });\r\n        });\r\n    };\r\n    handleSearch = (params, pagination) => {\r\n        this.searchParam = params;\r\n        console.log(params, \"params\");\r\n        this.getData(params, pagination);\r\n    };\r\n    componentDidMount() {\r\n        this.getData();\r\n    }\r\n    render() {\r\n        let scroll = { x: 1000, y: 445 };\r\n        let info = this.state.info;\r\n\r\n        return (\r\n            <div>\r\n                <CurdComponent\r\n                    onSearchClick={this.handleSearch}\r\n                    getSearchFormFields={getSearchFormFields}\r\n                    width=\"600px\"\r\n                    pagination={this.state.pagination}\r\n                    centered={true}\r\n                    columns={this.columns}\r\n                    dataSource={info}\r\n                    scroll={scroll}\r\n                >\r\n                    <div\r\n                        upLoadCSvUrl=\"/file-scan/uploadFile\"\r\n                        noDownload={true}\r\n                        title=\"文件\"\r\n                        sucCallback={this.getData}\r\n                        type=\".csv\"\r\n                    ></div>\r\n                </CurdComponent>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Form.create()(FileOrder);\r\n"]},"metadata":{},"sourceType":"module"}