{"ast":null,"code":"import _defineProperty from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport \"antd/lib/input/style\";\nimport _Input from \"antd/lib/input\";\nvar _jsxFileName = \"D:\\\\company\\\\algo-manage\\\\src\\\\algo\\\\modules\\\\manage\\\\pages\\\\childOrderQuery\\\\index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport CurdComponent from \"@/components/CurdComponent\";\nimport SelectOption from \"@/components/SelectOption\";\nimport TagLabel from \"@/components/Tag\"; // const getUpdateFormFields = () => {};\n\nvar columns = function columns(params) {\n  return [{\n    title: \"子单ID\",\n    dataIndex: \"id\",\n    width: 100\n  }, {\n    title: \"用户名称\",\n    dataIndex: \"userName\",\n    width: 100\n  }, {\n    title: \"业务类型\",\n    dataIndex: \"businessType\",\n    width: 100\n  }, {\n    title: \"算法类型\",\n    dataIndex: \"algorithmType\",\n    width: 140\n  }, {\n    title: \"算法ID\",\n    dataIndex: \"algorithmId\",\n    width: 100\n  }, {\n    title: \"母单订单号\",\n    dataIndex: \"algoOrderId\",\n    width: 120\n  }, {\n    title: \"证券代码\",\n    dataIndex: \"securityId\",\n    width: 120\n  }, {\n    title: \"市场代码\",\n    dataIndex: \"market\",\n    width: 100\n  }, {\n    title: \"订单编号\",\n    dataIndex: \"clOrdId\",\n    width: 150\n  }, {\n    title: \"订单数量 \",\n    dataIndex: \"orderQty\",\n    width: 120\n  }, {\n    title: \"订单价格\",\n    dataIndex: \"price\",\n    width: 120\n  }, {\n    title: \"订单类型\",\n    dataIndex: \"orderType\",\n    width: 160\n  }, {\n    title: \"子单状态\",\n    dataIndex: \"childOrdStatus\",\n    width: 150,\n    render: function render(text, record) {\n      // return (\n      //     <TagLabel\n      //         record={record.childOrdStatus}\n      //         type=\"success\"\n      //     ></TagLabel>\n      // );\n      //接收\n      if (record.childOrdStatus.indexOf(\"0\") == 0 || record.childOrdStatus.indexOf(\"2\") == 0 || record.childOrdStatus.indexOf(\"4\") == 0) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        }, React.createElement(TagLabel, {\n          record: record.childOrdStatus // type=\"success\"\n          ,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        }));\n      } else if (record.childOrdStatus.indexOf(\"1\") == 0 || record.childOrdStatus.indexOf(\"3\") == 0 || record.childOrdStatus.indexOf(\"5\") == 0 || record.childOrdStatus.indexOf(\"8\") == 0) {\n        return React.createElement(TagLabel, {\n          record: record.childOrdStatus,\n          type: \"fail\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          },\n          __self: this\n        });\n      } else if (record.childOrdStatus.indexOf(\"6\") == 0) {\n        return React.createElement(TagLabel, {\n          record: record.childOrdStatus,\n          type: \"warn\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109\n          },\n          __self: this\n        });\n      } else if (record.childOrdStatus.indexOf(\"7\") == 0) {\n        return React.createElement(TagLabel, {\n          record: record.childOrdStatus,\n          type: \"success\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(TagLabel, {\n        record: record.childOrdStatus,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      });\n    }\n  }, {\n    title: \"买卖方向\",\n    dataIndex: \"side\",\n    width: 100\n  }, {\n    title: \"止损价\",\n    dataIndex: \"stopPx\",\n    width: 120\n  }, {\n    title: \"平仓标识\",\n    dataIndex: \"positionEffect\",\n    width: 120\n  }, {\n    title: \"备兑标签\",\n    dataIndex: \"coveredOrUncovered\",\n    width: 150\n  }, {\n    title: \"累计成交数量 \",\n    dataIndex: \"cumQty\",\n    width: 150\n  }, {\n    title: \"剩余未成交数量 \",\n    dataIndex: \"leavesQty\",\n    width: 150\n  }, {\n    title: \"证券代码源\",\n    dataIndex: \"securityIdSource\",\n    width: 120\n  }, {\n    title: \"母单篮子ID\",\n    dataIndex: \"basketId\",\n    width: 150\n  }, {\n    title: \"请求用户ID\",\n    dataIndex: \"reqUserId\",\n    width: 150\n  }, {\n    title: \"错误码\",\n    dataIndex: \"errorCode\",\n    width: 100\n  }, {\n    title: \"错误信息\",\n    dataIndex: \"errorMsg\",\n    width: 180\n  }, {\n    title: \"证券账户\",\n    dataIndex: \"accountId\",\n    width: 150\n  }, {\n    title: \"序列号\",\n    dataIndex: \"seq\",\n    width: 100\n  }, {\n    title: \"柜台序列号\",\n    dataIndex: \"counterSeq\",\n    width: 120\n  }, {\n    title: \"交易时间\",\n    dataIndex: \"transactTime\",\n    width: 180\n  }, {\n    title: \"撤单时间\",\n    dataIndex: \"cancelTime\",\n    width: 180\n  }, {\n    title: \"成交计数\",\n    dataIndex: \"execCount\",\n    width: 120\n  }, {\n    title: \"累计成交金额\",\n    dataIndex: \"cumAmount\",\n    width: 150\n  }, {\n    title: \"成交记录ID\",\n    dataIndex: \"version\",\n    width: 120\n  }];\n};\n\nvar getSearchFormFields = function getSearchFormFields() {\n  return [{\n    // label: \"子单ID\",\n    label: React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }, \"\\u5B50\\xA0\\xA0\\u5355\\xA0ID\"),\n    id: \"id\",\n    component: React.createElement(_Input, {\n      placeholder: \"\\u8BF7\\u8F93\\u5165\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    })\n  }, {\n    label: \"用户名称\",\n    // label: <span>用&nbsp;&nbsp;户&nbsp;ID</span>,\n    id: \"userName\",\n    component: React.createElement(_Input, {\n      placeholder: \"\\u8BF7\\u8F93\\u5165\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    })\n  }, {\n    // label: \"篮子ID\",\n    label: React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }, \"\\u7BEE\\xA0\\xA0\\u5B50\\xA0ID\"),\n    id: \"basketId\",\n    component: React.createElement(_Input, {\n      placeholder: \"\\u8BF7\\u8F93\\u5165\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    })\n  }, {\n    // label: \"算法ID\",\n    label: React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }, \"\\u7B97\\xA0\\xA0\\u6CD5\\xA0ID\"),\n    id: \"algorithmId\",\n    initialValue: \"\",\n    component: React.createElement(_Input, {\n      placeholder: \"\\u8BF7\\u8F93\\u5165\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    })\n  }, {\n    label: \"证券代码\",\n    id: \"securityId\",\n    initialValue: \"\",\n    component: React.createElement(_Input, {\n      placeholder: \"\\u8BF7\\u8F93\\u5165\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254\n      },\n      __self: this\n    })\n  }, {\n    label: \"业务类型\",\n    id: \"businessType\",\n    // initialValue: \"1\",\n    component: SelectOption(dict.businessTypeSelect, {\n      placeholder: \"请选择\" // allowClear: true,\n\n    })\n  }];\n};\n\nvar newOrderQuery =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(newOrderQuery, _React$PureComponent);\n\n  function newOrderQuery() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, newOrderQuery);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(newOrderQuery)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      searchLoading: false,\n      selectRow: [],\n      info: [],\n      pagination: {\n        total: 0\n      }\n    };\n\n    _this.handleTableChange = function (selectedRowKeys) {\n      console.log(\"批量选择\");\n\n      _this.setState({\n        selectRow: selectedRowKeys\n      });\n    };\n\n    _this.handleInsertRecord = function (params) {\n      console.log(params);\n    };\n\n    _this.handleUpdateRecord = function (_ref) {\n      var form = _ref.form;\n      console.log(form.getFieldsValue()); // return\n    };\n\n    _this.handleDeleteRecord = function (record) {\n      console.log(\"删除记录 \", record);\n    };\n\n    _this.setUpdateModal = function (_ref2) {\n      var form = _ref2.form,\n          record = _ref2.record;\n    };\n\n    _this.handleSearch = function (params, pagination) {\n      // console.log(\"获取搜索栏数据 \", params);\n      _this.getData(params, pagination);\n    };\n\n    _this.getData = function () {\n      var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var pagination = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n        current: 1,\n        pageSize: 12\n      };\n      // params.token = \"\";\n      params = _objectSpread({}, params, {\n        pageId: pagination.current,\n        pageNum: pagination.pageSize\n      });\n      http.post({\n        url: \"/new-trade-order/list\",\n        data: params\n      }).then(function (res) {\n        console.log(res); //解析数据字典\n\n        if (res.data.records && res.data.records.length > 0) {\n          parseDict(res.data.records); // showTip(this);\n        } else {\n          message.info(\"查询结果为空\");\n        }\n\n        var pgn = {\n          current: res.data.current,\n          pageSize: pagination.pageSize,\n          total: res.data.total || 0\n        };\n\n        _this.setState({\n          info: res.data.records,\n          pagination: pgn\n        });\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(newOrderQuery, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getData();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var scroll = {\n        x: 4200,\n        y: 445\n      };\n      var info = this.state.info; //批量\n      // let { selectRow } = this.state;\n      // const rowSelection = {\n      //     selectRow,\n      //     onChange: this.handleTableChange,\n      // };\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 343\n        },\n        __self: this\n      }, React.createElement(CurdComponent // rowKey={\"index\"}\n      // isShowSearchForm={false}\n      // btnText2=\"查全部\"\n      , {\n        onSearchClick: this.handleSearch,\n        getSearchFormFields: getSearchFormFields // searchLoading={this.state.searchLoading}\n        // insertBtnText={\"新增UOE配置\"} // 不传 就没新增按钮\n        // getInsertFormFields={getInsertFormFields}\n        // insertRecord={this.handleInsertRecord}\n        // col=\"2\"\n        ,\n        width: \"600px\",\n        pagination: this.state.pagination // getUpdateFormFields={getUpdateFormFields}\n        // setUpdateModal={this.setUpdateModal}\n        // updateRecord={this.handleUpdateRecord} // 不传 就没编辑\n        // deleteRecord={this.handleDeleteRecord} // 不传 就没删除\n        ,\n        centered: true,\n        columns: columns,\n        dataSource: info,\n        scroll: scroll // rowSelection={rowSelection} //批量选择 操作\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 344\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        urlPrefix: \"/new-trade-order\",\n        noUpload: true,\n        title: \"\\u5B50\\u5355\\u4FE1\\u606F\",\n        sucCallback: this.getData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 367\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return newOrderQuery;\n}(React.PureComponent);\n\nexport { newOrderQuery as default };","map":{"version":3,"sources":["D:/company/algo-manage/src/algo/modules/manage/pages/childOrderQuery/index.js"],"names":["React","CurdComponent","SelectOption","TagLabel","columns","params","title","dataIndex","width","render","text","record","childOrdStatus","indexOf","getSearchFormFields","label","id","component","initialValue","dict","businessTypeSelect","placeholder","newOrderQuery","state","searchLoading","selectRow","info","pagination","total","handleTableChange","selectedRowKeys","console","log","setState","handleInsertRecord","handleUpdateRecord","form","getFieldsValue","handleDeleteRecord","setUpdateModal","handleSearch","getData","current","pageSize","pageId","pageNum","http","post","url","data","then","res","records","length","parseDict","message","pgn","scroll","x","y","PureComponent"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport CurdComponent from \"@/components/CurdComponent\";\r\nimport SelectOption from \"@/components/SelectOption\";\r\nimport { Input } from \"antd\";\r\nimport TagLabel from \"@/components/Tag\";\r\n\r\n// const getUpdateFormFields = () => {};\r\nconst columns = (params) => {\r\n    return [\r\n        {\r\n            title: \"子单ID\",\r\n            dataIndex: \"id\",\r\n            width: 100,\r\n        },\r\n        {\r\n            title: \"用户名称\",\r\n            dataIndex: \"userName\",\r\n            width: 100,\r\n        },\r\n        {\r\n            title: \"业务类型\",\r\n            dataIndex: \"businessType\",\r\n            width: 100,\r\n        },\r\n        {\r\n            title: \"算法类型\",\r\n            dataIndex: \"algorithmType\",\r\n            width: 140,\r\n        },\r\n        {\r\n            title: \"算法ID\",\r\n            dataIndex: \"algorithmId\",\r\n            width: 100,\r\n        },\r\n        {\r\n            title: \"母单订单号\",\r\n            dataIndex: \"algoOrderId\",\r\n            width: 120,\r\n        },\r\n        {\r\n            title: \"证券代码\",\r\n            dataIndex: \"securityId\",\r\n            width: 120,\r\n        },\r\n        {\r\n            title: \"市场代码\",\r\n            dataIndex: \"market\",\r\n            width: 100,\r\n        },\r\n        {\r\n            title: \"订单编号\",\r\n            dataIndex: \"clOrdId\",\r\n            width: 150,\r\n        },\r\n        {\r\n            title: \"订单数量 \",\r\n            dataIndex: \"orderQty\",\r\n            width: 120,\r\n        },\r\n        {\r\n            title: \"订单价格\",\r\n            dataIndex: \"price\",\r\n            width: 120,\r\n        },\r\n        {\r\n            title: \"订单类型\",\r\n            dataIndex: \"orderType\",\r\n            width: 160,\r\n        },\r\n        {\r\n            title: \"子单状态\",\r\n            dataIndex: \"childOrdStatus\",\r\n            width: 150,\r\n            render: (text, record) => {\r\n                // return (\r\n                //     <TagLabel\r\n                //         record={record.childOrdStatus}\r\n                //         type=\"success\"\r\n                //     ></TagLabel>\r\n                // );\r\n                //接收\r\n                if (\r\n                    record.childOrdStatus.indexOf(\"0\") == 0 ||\r\n                    record.childOrdStatus.indexOf(\"2\") == 0 ||\r\n                    record.childOrdStatus.indexOf(\"4\") == 0\r\n                ) {\r\n                    return (\r\n                        <div>\r\n                            <TagLabel\r\n                                record={record.childOrdStatus}\r\n                                // type=\"success\"\r\n                            ></TagLabel>\r\n                        </div>\r\n                    );\r\n                } else if (\r\n                    record.childOrdStatus.indexOf(\"1\") == 0 ||\r\n                    record.childOrdStatus.indexOf(\"3\") == 0 ||\r\n                    record.childOrdStatus.indexOf(\"5\") == 0 ||\r\n                    record.childOrdStatus.indexOf(\"8\") == 0\r\n                ) {\r\n                    return (\r\n                        <TagLabel\r\n                            record={record.childOrdStatus}\r\n                            type=\"fail\"\r\n                        ></TagLabel>\r\n                    );\r\n                } else if (record.childOrdStatus.indexOf(\"6\") == 0) {\r\n                    return (\r\n                        <TagLabel\r\n                            record={record.childOrdStatus}\r\n                            type=\"warn\"\r\n                        ></TagLabel>\r\n                    );\r\n                } else if (record.childOrdStatus.indexOf(\"7\") == 0) {\r\n                    return (\r\n                        <TagLabel\r\n                            record={record.childOrdStatus}\r\n                            type=\"success\"\r\n                        ></TagLabel>\r\n                    );\r\n                }\r\n                return <TagLabel record={record.childOrdStatus}></TagLabel>;\r\n            },\r\n        },\r\n        {\r\n            title: \"买卖方向\",\r\n            dataIndex: \"side\",\r\n            width: 100,\r\n        },\r\n        {\r\n            title: \"止损价\",\r\n            dataIndex: \"stopPx\",\r\n            width: 120,\r\n        },\r\n        {\r\n            title: \"平仓标识\",\r\n            dataIndex: \"positionEffect\",\r\n            width: 120,\r\n        },\r\n        {\r\n            title: \"备兑标签\",\r\n            dataIndex: \"coveredOrUncovered\",\r\n            width: 150,\r\n        },\r\n        {\r\n            title: \"累计成交数量 \",\r\n            dataIndex: \"cumQty\",\r\n            width: 150,\r\n        },\r\n        {\r\n            title: \"剩余未成交数量 \",\r\n            dataIndex: \"leavesQty\",\r\n            width: 150,\r\n        },\r\n        {\r\n            title: \"证券代码源\",\r\n            dataIndex: \"securityIdSource\",\r\n            width: 120,\r\n        },\r\n        {\r\n            title: \"母单篮子ID\",\r\n            dataIndex: \"basketId\",\r\n            width: 150,\r\n        },\r\n\r\n        {\r\n            title: \"请求用户ID\",\r\n            dataIndex: \"reqUserId\",\r\n            width: 150,\r\n        },\r\n        {\r\n            title: \"错误码\",\r\n            dataIndex: \"errorCode\",\r\n            width: 100,\r\n        },\r\n        {\r\n            title: \"错误信息\",\r\n            dataIndex: \"errorMsg\",\r\n            width: 180,\r\n        },\r\n        {\r\n            title: \"证券账户\",\r\n            dataIndex: \"accountId\",\r\n            width: 150,\r\n        },\r\n        {\r\n            title: \"序列号\",\r\n            dataIndex: \"seq\",\r\n            width: 100,\r\n        },\r\n        {\r\n            title: \"柜台序列号\",\r\n            dataIndex: \"counterSeq\",\r\n            width: 120,\r\n        },\r\n        {\r\n            title: \"交易时间\",\r\n            dataIndex: \"transactTime\",\r\n            width: 180,\r\n        },\r\n        {\r\n            title: \"撤单时间\",\r\n            dataIndex: \"cancelTime\",\r\n            width: 180,\r\n        },\r\n        {\r\n            title: \"成交计数\",\r\n            dataIndex: \"execCount\",\r\n            width: 120,\r\n        },\r\n        {\r\n            title: \"累计成交金额\",\r\n            dataIndex: \"cumAmount\",\r\n            width: 150,\r\n        },\r\n        {\r\n            title: \"成交记录ID\",\r\n            dataIndex: \"version\",\r\n            width: 120,\r\n        },\r\n    ];\r\n};\r\nconst getSearchFormFields = () => {\r\n    return [\r\n        {\r\n            // label: \"子单ID\",\r\n            label: <span>子&nbsp;&nbsp;单&nbsp;ID</span>,\r\n            id: \"id\",\r\n            component: <Input placeholder=\"请输入\" />,\r\n        },\r\n        {\r\n            label: \"用户名称\",\r\n            // label: <span>用&nbsp;&nbsp;户&nbsp;ID</span>,\r\n            id: \"userName\",\r\n            component: <Input placeholder=\"请输入\" />,\r\n        },\r\n        {\r\n            // label: \"篮子ID\",\r\n            label: <span>篮&nbsp;&nbsp;子&nbsp;ID</span>,\r\n            id: \"basketId\",\r\n            component: <Input placeholder=\"请输入\" />,\r\n        },\r\n        {\r\n            // label: \"算法ID\",\r\n            label: <span>算&nbsp;&nbsp;法&nbsp;ID</span>,\r\n            id: \"algorithmId\",\r\n            initialValue: \"\",\r\n            component: <Input placeholder=\"请输入\" />,\r\n        },\r\n        {\r\n            label: \"证券代码\",\r\n            id: \"securityId\",\r\n            initialValue: \"\",\r\n            component: <Input placeholder=\"请输入\" />,\r\n        },\r\n        {\r\n            label: \"业务类型\",\r\n            id: \"businessType\",\r\n            // initialValue: \"1\",\r\n            component: SelectOption(dict.businessTypeSelect, {\r\n                placeholder: \"请选择\",\r\n                // allowClear: true,\r\n            }),\r\n        },\r\n    ];\r\n};\r\nexport default class newOrderQuery extends React.PureComponent {\r\n    state = {\r\n        searchLoading: false,\r\n        selectRow: [],\r\n        info: [],\r\n        pagination: { total: 0 },\r\n    };\r\n    //批量选择\r\n    handleTableChange = (selectedRowKeys) => {\r\n        console.log(\"批量选择\");\r\n        this.setState({\r\n            selectRow: selectedRowKeys,\r\n        });\r\n    };\r\n\r\n    handleInsertRecord = (params) => {\r\n        console.log(params);\r\n    };\r\n    //更新记录\r\n    handleUpdateRecord = ({ form }) => {\r\n        console.log(form.getFieldsValue());\r\n        // return\r\n    };\r\n    //删除记录\r\n    handleDeleteRecord = (record) => {\r\n        console.log(\"删除记录 \", record);\r\n    };\r\n    //填入更新数据\r\n    setUpdateModal = ({ form, record }) => {};\r\n    handleSearch = (params, pagination) => {\r\n        // console.log(\"获取搜索栏数据 \", params);\r\n        this.getData(params, pagination);\r\n    };\r\n    getData = (params = {}, pagination = { current: 1, pageSize: 12 }) => {\r\n        // params.token = \"\";\r\n        params = {\r\n            ...params,\r\n            pageId: pagination.current,\r\n            pageNum: pagination.pageSize,\r\n        };\r\n        http.post({\r\n            url: \"/new-trade-order/list\",\r\n            data: params,\r\n        }).then((res) => {\r\n            console.log(res);\r\n            //解析数据字典\r\n            if (res.data.records && res.data.records.length > 0) {\r\n                parseDict(res.data.records);\r\n                // showTip(this);\r\n            } else {\r\n                message.info(\"查询结果为空\");\r\n            }\r\n            let pgn = {\r\n                current: res.data.current,\r\n                pageSize: pagination.pageSize,\r\n                total: res.data.total || 0,\r\n            };\r\n            this.setState({\r\n                info: res.data.records,\r\n                pagination: pgn,\r\n            });\r\n        });\r\n    };\r\n    componentDidMount() {\r\n        this.getData();\r\n    }\r\n    render() {\r\n        let scroll = { x: 4200, y: 445 };\r\n        let info = this.state.info;\r\n        //批量\r\n        // let { selectRow } = this.state;\r\n        // const rowSelection = {\r\n        //     selectRow,\r\n        //     onChange: this.handleTableChange,\r\n        // };\r\n        return (\r\n            <div>\r\n                <CurdComponent\r\n                    // rowKey={\"index\"}\r\n                    // isShowSearchForm={false}\r\n                    // btnText2=\"查全部\"\r\n                    onSearchClick={this.handleSearch}\r\n                    getSearchFormFields={getSearchFormFields}\r\n                    // searchLoading={this.state.searchLoading}\r\n                    // insertBtnText={\"新增UOE配置\"} // 不传 就没新增按钮\r\n                    // getInsertFormFields={getInsertFormFields}\r\n                    // insertRecord={this.handleInsertRecord}\r\n                    // col=\"2\"\r\n                    width=\"600px\"\r\n                    pagination={this.state.pagination}\r\n                    // getUpdateFormFields={getUpdateFormFields}\r\n                    // setUpdateModal={this.setUpdateModal}\r\n                    // updateRecord={this.handleUpdateRecord} // 不传 就没编辑\r\n                    // deleteRecord={this.handleDeleteRecord} // 不传 就没删除\r\n                    centered={true}\r\n                    columns={columns}\r\n                    dataSource={info}\r\n                    scroll={scroll}\r\n                    // rowSelection={rowSelection} //批量选择 操作\r\n                >\r\n                    <div\r\n                        urlPrefix=\"/new-trade-order\"\r\n                        noUpload={true}\r\n                        title=\"子单信息\"\r\n                        sucCallback={this.getData}\r\n                    ></div>\r\n                </CurdComponent>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}