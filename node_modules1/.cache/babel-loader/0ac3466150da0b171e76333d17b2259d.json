{"ast":null,"code":"import \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/form/style\";\nimport _Form from \"antd/lib/form\";\nimport _defineProperty from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport \"antd/lib/select/style\";\nimport _Select from \"antd/lib/select\";\nimport \"antd/lib/date-picker/style\";\nimport _DatePicker from \"antd/lib/date-picker\";\nvar _jsxFileName = \"D:\\\\company\\\\algo-manage\\\\src\\\\algo\\\\modules\\\\tradeStatistics\\\\pages\\\\algorithmicTrad\\\\index.js\";\nimport React from \"react\";\nimport styles from \"./style.module.less\";\nimport echarts from \"echarts\";\nvar RangePicker = _DatePicker.RangePicker;\nvar Option = _Select.Option;\nimport moment from \"moment\";\n\nvar Ram2 =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(Ram2, _React$PureComponent);\n\n  function Ram2() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Ram2);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Ram2)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {};\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n\n      _this.props.form.validateFields(function (err, values) {\n        if (!err) {\n          var noTime = values[\"pickerTime\"].length < 1;\n          var params = {\n            hostId: values.hostId,\n            startTime: noTime ? \"\" : moment(values[\"pickerTime\"][0]).format(\"YYYY/MM/DD HH:mm:ss\"),\n            endTime: noTime ? \"\" : moment(values[\"pickerTime\"][1]).format(\"YYYY/MM/DD HH:mm:ss\")\n          };\n\n          _this.getData(params);\n        }\n      });\n    };\n\n    _this.getData = function (params) {\n      var count = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      http.post({\n        url: \"/statistics/algo\",\n        data: params\n      }).then(function (res) {\n        if (res.code == 0) {\n          if (res.data == 0) {\n            message.error(\"该时间段暂无数据\");\n          } else {\n            var option = {\n              textStyle: {\n                color: \"#333\"\n              },\n              tooltip: {\n                trigger: \"axis\",\n                backgroundColor: \"#1F2329\",\n                boxShadow: \"0px 2px 8px 0px rgba(0, 0, 0, 0.15)\",\n                borderColor: \"#1F2329\",\n                textStyle: {\n                  color: \"#fff\"\n                }\n              },\n              dataset: {\n                dimensions: [\"x\", \"y\"],\n                source: res.data\n              },\n              grid: {\n                left: \"25px\",\n                right: \"5px\",\n                bottom: \"9%\",\n                top: \"33px\",\n                containLabel: true\n              },\n              xAxis: {\n                type: \"category\",\n                boundaryGap: false,\n                splitLine: {\n                  show: true,\n                  lineStyle: {\n                    color: \"#E9E9E9\",\n                    type: \"dashed\"\n                  }\n                },\n                axisLabel: {// interval: 0,\n                  // rotate: 30,\n                },\n                axisTick: {\n                  show: true,\n                  //显示X轴刻度\n                  lineStyle: {\n                    color: \"#E9E9E9\"\n                  }\n                },\n                axisLine: {\n                  // 刻度线的颜色\n                  show: false\n                },\n                axisPointer: {\n                  type: \"line\",\n                  lineStyle: {\n                    color: \"#BDBEBF\"\n                  }\n                }\n              },\n              yAxis: [_defineProperty({\n                type: \"value\",\n                name: \"单位：（个）\",\n                nameLocation: \"end\",\n                axisLine: {\n                  show: false\n                },\n                nameTextStyle: {\n                  color: \"#666\"\n                },\n                axisTick: {\n                  show: false //隐藏X轴刻度\n\n                },\n                splitLine: {\n                  show: true,\n                  lineStyle: {\n                    color: \"#E9E9E9\",\n                    type: \"dashed\"\n                  }\n                }\n              }, \"nameTextStyle\", {\n                padding: [0, 0, 0, 40]\n              })],\n              series: [{\n                name: \"在线人数\",\n                type: \"line\",\n                smooth: true,\n                showSymbol: false,\n                // symbol: \"circle\",\n                itemStyle: {\n                  normal: {\n                    color: \"#65A6FF\"\n                  }\n                },\n                areaStyle: {\n                  normal: {\n                    color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\n                      offset: 0,\n                      color: \"rgba(50, 129, 255, 0.2)\"\n                    }, {\n                      offset: 1,\n                      color: \"rgba(255,255,255,0)\"\n                    }], false),\n                    shadowColor: \"rgba(0, 0, 0, 0.1)\",\n                    shadowBlur: 10\n                  }\n                }\n              }]\n            };\n            var myChart = echarts.init(document.getElementById(\"main_3\"));\n            myChart.resize();\n            myChart.setOption(option);\n            var myChart3 = echarts.init(document.getElementById(\"main_4\"));\n            myChart3.setOption(option);\n            var myChart1 = echarts.init(document.getElementById(\"main_1\"));\n            myChart1.setOption(option);\n            var myChart2 = echarts.init(document.getElementById(\"main_2\"));\n            myChart2.setOption(option);\n          }\n        } else {\n          message.error(\"服务异常\");\n        }\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Ram2, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getData({\n        hostId: \"1\",\n        startTime: \"\",\n        endTime: \"\"\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var getFieldDecorator = this.props.form.getFieldDecorator;\n      return React.createElement(\"div\", {\n        className: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: styles.search,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }, React.createElement(_Form, {\n        layout: \"inline\",\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, React.createElement(_Form.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, getFieldDecorator(\"hostId\", {\n        initialValue: \"\"\n      })(React.createElement(_Select, {\n        showSearch: true,\n        style: {\n          width: 160\n        },\n        placeholder: \"\\u9009\\u62E9\\u6570\\u91CF\",\n        optionFilterProp: \"number\",\n        filterOption: function filterOption(input, option) {\n          return option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, React.createElement(Option, {\n        value: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }, \"\\u6240\\u6709\\u6570\\u91CF\"), React.createElement(Option, {\n        value: \"1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }, \"80\")))), React.createElement(_Form.Item, {\n        style: {\n          marginLeft: \"12px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }, getFieldDecorator(\"securityId\", {\n        initialValue: \"\"\n      })(React.createElement(_Select, {\n        showSearch: true,\n        style: {\n          width: 160\n        },\n        placeholder: \"\\u9009\\u62E9\\u80A1\\u7968\",\n        optionFilterProp: \"children\",\n        filterOption: function filterOption(input, option) {\n          return option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }, React.createElement(Option, {\n        value: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }, \"\\u5168\\u90E8\\u80A1\\u7968\"), React.createElement(Option, {\n        value: \"1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }, \"80\")))), React.createElement(_Form.Item, {\n        style: {\n          marginLeft: \"12px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }, getFieldDecorator(\"hostId\", {\n        initialValue: \"\"\n      })(React.createElement(_Select, {\n        showSearch: true,\n        style: {\n          width: 160\n        },\n        placeholder: \"\\u9009\\u62E9\\u7B97\\u6CD5\",\n        optionFilterProp: \"children\",\n        filterOption: function filterOption(input, option) {\n          return option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      }, React.createElement(Option, {\n        value: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      }, \"\\u5168\\u90E8\\u7B97\\u6CD5\"), React.createElement(Option, {\n        value: \"1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      }, \"\\u65E5\\u5185\\u56DE\\u8F6C\")))), React.createElement(_Form.Item, {\n        style: {\n          marginLeft: \"12px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265\n        },\n        __self: this\n      }, getFieldDecorator(\"uuserId\", {\n        initialValue: \"\"\n      })(React.createElement(_Select, {\n        showSearch: true,\n        style: {\n          width: 160\n        },\n        placeholder: \"\\u9009\\u62E9\\u7528\\u6237\",\n        optionFilterProp: \"children\",\n        filterOption: function filterOption(input, option) {\n          return option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269\n        },\n        __self: this\n      }, React.createElement(Option, {\n        value: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280\n        },\n        __self: this\n      }, \"\\u5168\\u90E8\\u7528\\u6237\")))), React.createElement(_Form.Item, {\n        style: {\n          marginLeft: \"12px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284\n        },\n        __self: this\n      }, getFieldDecorator(\"pickerTime\")(React.createElement(RangePicker, {\n        style: {\n          width: 432\n        },\n        showTime: true,\n        format: \"YYYY-MM-DD HH:mm:ss\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286\n        },\n        __self: this\n      }))), React.createElement(_Form.Item, {\n        style: {\n          float: \"right\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293\n        },\n        __self: this\n      }, React.createElement(_Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        style: {\n          width: 76\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294\n        },\n        __self: this\n      }, \"\\u786E\\u5B9A\")))), React.createElement(\"div\", {\n        className: styles.chart,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"main_1\",\n        className: styles.chartBox,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        id: \"main_2\",\n        className: styles.chartBox,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        id: \"main_3\",\n        className: styles.chartBox,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        id: \"main_4\",\n        className: styles.chartBox,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Ram2;\n}(React.PureComponent);\n\nexport default _Form.create()(Ram2);","map":{"version":3,"sources":["D:/company/algo-manage/src/algo/modules/tradeStatistics/pages/algorithmicTrad/index.js"],"names":["React","styles","echarts","RangePicker","Option","moment","Ram2","state","handleSubmit","e","preventDefault","props","form","validateFields","err","values","noTime","length","params","hostId","startTime","format","endTime","getData","count","http","post","url","data","then","res","code","message","error","option","textStyle","color","tooltip","trigger","backgroundColor","boxShadow","borderColor","dataset","dimensions","source","grid","left","right","bottom","top","containLabel","xAxis","type","boundaryGap","splitLine","show","lineStyle","axisLabel","axisTick","axisLine","axisPointer","yAxis","name","nameLocation","nameTextStyle","padding","series","smooth","showSymbol","itemStyle","normal","areaStyle","graphic","LinearGradient","offset","shadowColor","shadowBlur","myChart","init","document","getElementById","resize","setOption","myChart3","myChart1","myChart2","getFieldDecorator","container","search","initialValue","width","input","children","toLowerCase","indexOf","marginLeft","float","chart","chartBox","PureComponent","create"],"mappings":";;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,OAAP,MAAoB,SAApB;IAYQC,W,eAAAA,W;IACAC,M,WAAAA,M;AACR,OAAOC,MAAP,MAAmB,QAAnB;;IACMC,I;;;;;;;;;;;;;;;;;UACFC,K,GAAQ,E;;UACRC,Y,GAAe,UAACC,CAAD,EAAO;AAClBA,MAAAA,CAAC,CAACC,cAAF;;AACA,YAAKC,KAAL,CAAWC,IAAX,CAAgBC,cAAhB,CAA+B,UAACC,GAAD,EAAMC,MAAN,EAAiB;AAC5C,YAAI,CAACD,GAAL,EAAU;AACN,cAAIE,MAAM,GAAGD,MAAM,CAAC,YAAD,CAAN,CAAqBE,MAArB,GAA8B,CAA3C;AACA,cAAIC,MAAM,GAAG;AACTC,YAAAA,MAAM,EAAEJ,MAAM,CAACI,MADN;AAETC,YAAAA,SAAS,EAAEJ,MAAM,GACX,EADW,GAEXX,MAAM,CAACU,MAAM,CAAC,YAAD,CAAN,CAAqB,CAArB,CAAD,CAAN,CAAgCM,MAAhC,CACI,qBADJ,CAJG;AAOTC,YAAAA,OAAO,EAAEN,MAAM,GACT,EADS,GAETX,MAAM,CAACU,MAAM,CAAC,YAAD,CAAN,CAAqB,CAArB,CAAD,CAAN,CAAgCM,MAAhC,CACI,qBADJ;AATG,WAAb;;AAaA,gBAAKE,OAAL,CAAaL,MAAb;AACH;AACJ,OAlBD;AAmBH,K;;UACDK,O,GAAU,UAACL,MAAD,EAAuB;AAAA,UAAdM,KAAc,uEAAN,CAAM;AAC7BC,MAAAA,IAAI,CAACC,IAAL,CAAU;AACNC,QAAAA,GAAG,EAAE,kBADC;AAENC,QAAAA,IAAI,EAAEV;AAFA,OAAV,EAGGW,IAHH,CAGQ,UAACC,GAAD,EAAS;AACb,YAAIA,GAAG,CAACC,IAAJ,IAAY,CAAhB,EAAmB;AACf,cAAID,GAAG,CAACF,IAAJ,IAAY,CAAhB,EAAmB;AACfI,YAAAA,OAAO,CAACC,KAAR,CAAc,UAAd;AACH,WAFD,MAEO;AACH,gBAAIC,MAAM,GAAG;AACTC,cAAAA,SAAS,EAAE;AACPC,gBAAAA,KAAK,EAAE;AADA,eADF;AAITC,cAAAA,OAAO,EAAE;AACLC,gBAAAA,OAAO,EAAE,MADJ;AAELC,gBAAAA,eAAe,EAAE,SAFZ;AAGLC,gBAAAA,SAAS,EAAE,qCAHN;AAILC,gBAAAA,WAAW,EAAE,SAJR;AAKLN,gBAAAA,SAAS,EAAE;AACPC,kBAAAA,KAAK,EAAE;AADA;AALN,eAJA;AAaTM,cAAAA,OAAO,EAAE;AACLC,gBAAAA,UAAU,EAAE,CAAC,GAAD,EAAM,GAAN,CADP;AAELC,gBAAAA,MAAM,EAAEd,GAAG,CAACF;AAFP,eAbA;AAiBTiB,cAAAA,IAAI,EAAE;AACFC,gBAAAA,IAAI,EAAE,MADJ;AAEFC,gBAAAA,KAAK,EAAE,KAFL;AAGFC,gBAAAA,MAAM,EAAE,IAHN;AAIFC,gBAAAA,GAAG,EAAE,MAJH;AAKFC,gBAAAA,YAAY,EAAE;AALZ,eAjBG;AAwBTC,cAAAA,KAAK,EAAE;AACHC,gBAAAA,IAAI,EAAE,UADH;AAEHC,gBAAAA,WAAW,EAAE,KAFV;AAGHC,gBAAAA,SAAS,EAAE;AACPC,kBAAAA,IAAI,EAAE,IADC;AAEPC,kBAAAA,SAAS,EAAE;AACPpB,oBAAAA,KAAK,EAAE,SADA;AAEPgB,oBAAAA,IAAI,EAAE;AAFC;AAFJ,iBAHR;AAUHK,gBAAAA,SAAS,EAAE,CACP;AACA;AAFO,iBAVR;AAcHC,gBAAAA,QAAQ,EAAE;AACNH,kBAAAA,IAAI,EAAE,IADA;AACM;AACZC,kBAAAA,SAAS,EAAE;AACPpB,oBAAAA,KAAK,EAAE;AADA;AAFL,iBAdP;AAoBHuB,gBAAAA,QAAQ,EAAE;AACN;AACAJ,kBAAAA,IAAI,EAAE;AAFA,iBApBP;AAwBHK,gBAAAA,WAAW,EAAE;AACTR,kBAAAA,IAAI,EAAE,MADG;AAETI,kBAAAA,SAAS,EAAE;AAAEpB,oBAAAA,KAAK,EAAE;AAAT;AAFF;AAxBV,eAxBE;AAqDTyB,cAAAA,KAAK,EAAE;AAECT,gBAAAA,IAAI,EAAE,OAFP;AAGCU,gBAAAA,IAAI,EAAE,QAHP;AAICC,gBAAAA,YAAY,EAAE,KAJf;AAKCJ,gBAAAA,QAAQ,EAAE;AACNJ,kBAAAA,IAAI,EAAE;AADA,iBALX;AAQCS,gBAAAA,aAAa,EAAE;AACX5B,kBAAAA,KAAK,EAAE;AADI,iBARhB;AAWCsB,gBAAAA,QAAQ,EAAE;AACNH,kBAAAA,IAAI,EAAE,KADA,CACO;;AADP,iBAXX;AAcCD,gBAAAA,SAAS,EAAE;AACPC,kBAAAA,IAAI,EAAE,IADC;AAEPC,kBAAAA,SAAS,EAAE;AACPpB,oBAAAA,KAAK,EAAE,SADA;AAEPgB,oBAAAA,IAAI,EAAE;AAFC;AAFJ;AAdZ,kCAqBgB;AACXa,gBAAAA,OAAO,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,EAAV;AADE,eArBhB,EArDE;AA+ETC,cAAAA,MAAM,EAAE,CACJ;AACIJ,gBAAAA,IAAI,EAAE,MADV;AAEIV,gBAAAA,IAAI,EAAE,MAFV;AAGIe,gBAAAA,MAAM,EAAE,IAHZ;AAIIC,gBAAAA,UAAU,EAAE,KAJhB;AAKI;AACAC,gBAAAA,SAAS,EAAE;AACPC,kBAAAA,MAAM,EAAE;AACJlC,oBAAAA,KAAK,EAAE;AADH;AADD,iBANf;AAWImC,gBAAAA,SAAS,EAAE;AACPD,kBAAAA,MAAM,EAAE;AACJlC,oBAAAA,KAAK,EAAE,IAAIlC,OAAO,CAACsE,OAAR,CAAgBC,cAApB,CACH,CADG,EAEH,CAFG,EAGH,CAHG,EAIH,CAJG,EAKH,CACI;AACIC,sBAAAA,MAAM,EAAE,CADZ;AAEItC,sBAAAA,KAAK,EAAE;AAFX,qBADJ,EAKI;AACIsC,sBAAAA,MAAM,EAAE,CADZ;AAEItC,sBAAAA,KAAK,EAAE;AAFX,qBALJ,CALG,EAeH,KAfG,CADH;AAkBJuC,oBAAAA,WAAW,EAAE,oBAlBT;AAmBJC,oBAAAA,UAAU,EAAE;AAnBR;AADD;AAXf,eADI;AA/EC,aAAb;AAqHA,gBAAIC,OAAO,GAAG3E,OAAO,CAAC4E,IAAR,CACVC,QAAQ,CAACC,cAAT,CAAwB,QAAxB,CADU,CAAd;AAIAH,YAAAA,OAAO,CAACI,MAAR;AACAJ,YAAAA,OAAO,CAACK,SAAR,CAAkBhD,MAAlB;AACA,gBAAIiD,QAAQ,GAAGjF,OAAO,CAAC4E,IAAR,CACXC,QAAQ,CAACC,cAAT,CAAwB,QAAxB,CADW,CAAf;AAGAG,YAAAA,QAAQ,CAACD,SAAT,CAAmBhD,MAAnB;AACA,gBAAIkD,QAAQ,GAAGlF,OAAO,CAAC4E,IAAR,CACXC,QAAQ,CAACC,cAAT,CAAwB,QAAxB,CADW,CAAf;AAGAI,YAAAA,QAAQ,CAACF,SAAT,CAAmBhD,MAAnB;AACA,gBAAImD,QAAQ,GAAGnF,OAAO,CAAC4E,IAAR,CACXC,QAAQ,CAACC,cAAT,CAAwB,QAAxB,CADW,CAAf;AAGAK,YAAAA,QAAQ,CAACH,SAAT,CAAmBhD,MAAnB;AACH;AACJ,SA5ID,MA4IO;AACHF,UAAAA,OAAO,CAACC,KAAR,CAAc,MAAd;AACH;AACJ,OAnJD;AAoJH,K;;;;;;;wCACmB;AAChB,WAAKV,OAAL,CAAa;AACTJ,QAAAA,MAAM,EAAE,GADC;AAETC,QAAAA,SAAS,EAAE,EAFF;AAGTE,QAAAA,OAAO,EAAE;AAHA,OAAb;AAKH;;;6BACQ;AAAA,UACGgE,iBADH,GACyB,KAAK3E,KAAL,CAAWC,IADpC,CACG0E,iBADH;AAEL,aACI;AAAK,QAAA,SAAS,EAAErF,MAAM,CAACsF,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAEtF,MAAM,CAACuF,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAM,QAAA,MAAM,EAAC,QAAb;AAAsB,QAAA,QAAQ,EAAE,KAAKhF,YAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,0BAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK8E,iBAAiB,CAAC,QAAD,EAAW;AACzBG,QAAAA,YAAY,EAAE;AADW,OAAX,CAAjB,CAGG;AACI,QAAA,UAAU,MADd;AAEI,QAAA,KAAK,EAAE;AAAEC,UAAAA,KAAK,EAAE;AAAT,SAFX;AAGI,QAAA,WAAW,EAAC,0BAHhB;AAII,QAAA,gBAAgB,EAAC,QAJrB;AAKI,QAAA,YAAY,EAAE,sBAACC,KAAD,EAAQzD,MAAR;AAAA,iBACVA,MAAM,CAACvB,KAAP,CAAaiF,QAAb,CACKC,WADL,GAEKC,OAFL,CAEaH,KAAK,CAACE,WAAN,EAFb,KAEqC,CAH3B;AAAA,SALlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAWI,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAXJ,EAYI,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAZJ,CAHH,CADL,CADJ,EAqBI,0BAAM,IAAN;AAAW,QAAA,KAAK,EAAE;AAAEE,UAAAA,UAAU,EAAE;AAAd,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKT,iBAAiB,CAAC,YAAD,EAAe;AAC7BG,QAAAA,YAAY,EAAE;AADe,OAAf,CAAjB,CAGG;AACI,QAAA,UAAU,MADd;AAEI,QAAA,KAAK,EAAE;AAAEC,UAAAA,KAAK,EAAE;AAAT,SAFX;AAGI,QAAA,WAAW,EAAC,0BAHhB;AAII,QAAA,gBAAgB,EAAC,UAJrB;AAKI,QAAA,YAAY,EAAE,sBAACC,KAAD,EAAQzD,MAAR;AAAA,iBACVA,MAAM,CAACvB,KAAP,CAAaiF,QAAb,CACKC,WADL,GAEKC,OAFL,CAEaH,KAAK,CAACE,WAAN,EAFb,KAEqC,CAH3B;AAAA,SALlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAWI,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAXJ,EAYI,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAZJ,CAHH,CADL,CArBJ,EAyCI,0BAAM,IAAN;AAAW,QAAA,KAAK,EAAE;AAAEE,UAAAA,UAAU,EAAE;AAAd,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKT,iBAAiB,CAAC,QAAD,EAAW;AACzBG,QAAAA,YAAY,EAAE;AADW,OAAX,CAAjB,CAGG;AACI,QAAA,UAAU,MADd;AAEI,QAAA,KAAK,EAAE;AAAEC,UAAAA,KAAK,EAAE;AAAT,SAFX;AAGI,QAAA,WAAW,EAAC,0BAHhB;AAII,QAAA,gBAAgB,EAAC,UAJrB;AAKI,QAAA,YAAY,EAAE,sBAACC,KAAD,EAAQzD,MAAR;AAAA,iBACVA,MAAM,CAACvB,KAAP,CAAaiF,QAAb,CACKC,WADL,GAEKC,OAFL,CAEaH,KAAK,CAACE,WAAN,EAFb,KAEqC,CAH3B;AAAA,SALlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAWI,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAXJ,EAYI,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAZJ,CAHH,CADL,CAzCJ,EA6DI,0BAAM,IAAN;AAAW,QAAA,KAAK,EAAE;AAAEE,UAAAA,UAAU,EAAE;AAAd,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKT,iBAAiB,CAAC,SAAD,EAAY;AAC1BG,QAAAA,YAAY,EAAE;AADY,OAAZ,CAAjB,CAGG;AACI,QAAA,UAAU,MADd;AAEI,QAAA,KAAK,EAAE;AAAEC,UAAAA,KAAK,EAAE;AAAT,SAFX;AAGI,QAAA,WAAW,EAAC,0BAHhB;AAII,QAAA,gBAAgB,EAAC,UAJrB;AAKI,QAAA,YAAY,EAAE,sBAACC,KAAD,EAAQzD,MAAR;AAAA,iBACVA,MAAM,CAACvB,KAAP,CAAaiF,QAAb,CACKC,WADL,GAEKC,OAFL,CAEaH,KAAK,CAACE,WAAN,EAFb,KAEqC,CAH3B;AAAA,SALlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAWI,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAXJ,CAHH,CADL,CA7DJ,EAgFI,0BAAM,IAAN;AAAW,QAAA,KAAK,EAAE;AAAEE,UAAAA,UAAU,EAAE;AAAd,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKT,iBAAiB,CAAC,YAAD,CAAjB,CACG,oBAAC,WAAD;AACI,QAAA,KAAK,EAAE;AAAEI,UAAAA,KAAK,EAAE;AAAT,SADX;AAEI,QAAA,QAAQ,MAFZ;AAGI,QAAA,MAAM,EAAC,qBAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADH,CADL,CAhFJ,EAyFI,0BAAM,IAAN;AAAW,QAAA,KAAK,EAAE;AAAEM,UAAAA,KAAK,EAAE;AAAT,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AACI,QAAA,IAAI,EAAC,SADT;AAEI,QAAA,QAAQ,EAAC,QAFb;AAGI,QAAA,KAAK,EAAE;AAAEN,UAAAA,KAAK,EAAE;AAAT,SAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,CAzFJ,CADJ,CADJ,EAsGI;AAAK,QAAA,SAAS,EAAEzF,MAAM,CAACgG,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,EAAE,EAAC,QAAR;AAAiB,QAAA,SAAS,EAAEhG,MAAM,CAACiG,QAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI;AAAK,QAAA,EAAE,EAAC,QAAR;AAAiB,QAAA,SAAS,EAAEjG,MAAM,CAACiG,QAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAGI;AAAK,QAAA,EAAE,EAAC,QAAR;AAAiB,QAAA,SAAS,EAAEjG,MAAM,CAACiG,QAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHJ,EAII;AAAK,QAAA,EAAE,EAAC,QAAR;AAAiB,QAAA,SAAS,EAAEjG,MAAM,CAACiG,QAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ,CAtGJ,CADJ;AA2HH;;;;EAlTclG,KAAK,CAACmG,a;;AAoTzB,eAAe,MAAKC,MAAL,GAAc9F,IAAd,CAAf","sourcesContent":["import React from \"react\";\r\nimport styles from \"./style.module.less\";\r\nimport echarts from \"echarts\";\r\nimport {\r\n    SearchForm,\r\n    Input,\r\n    TimePicker,\r\n    Form,\r\n    Button,\r\n    Icon,\r\n    DatePicker,\r\n    Select,\r\n} from \"antd\";\r\n\r\nconst { RangePicker } = DatePicker;\r\nconst { Option } = Select;\r\nimport moment from \"moment\";\r\nclass Ram2 extends React.PureComponent {\r\n    state = {};\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.form.validateFields((err, values) => {\r\n            if (!err) {\r\n                let noTime = values[\"pickerTime\"].length < 1;\r\n                let params = {\r\n                    hostId: values.hostId,\r\n                    startTime: noTime\r\n                        ? \"\"\r\n                        : moment(values[\"pickerTime\"][0]).format(\r\n                              \"YYYY/MM/DD HH:mm:ss\"\r\n                          ),\r\n                    endTime: noTime\r\n                        ? \"\"\r\n                        : moment(values[\"pickerTime\"][1]).format(\r\n                              \"YYYY/MM/DD HH:mm:ss\"\r\n                          ),\r\n                };\r\n                this.getData(params);\r\n            }\r\n        });\r\n    };\r\n    getData = (params, count = 0) => {\r\n        http.post({\r\n            url: \"/statistics/algo\",\r\n            data: params,\r\n        }).then((res) => {\r\n            if (res.code == 0) {\r\n                if (res.data == 0) {\r\n                    message.error(\"该时间段暂无数据\");\r\n                } else {\r\n                    let option = {\r\n                        textStyle: {\r\n                            color: \"#333\",\r\n                        },\r\n                        tooltip: {\r\n                            trigger: \"axis\",\r\n                            backgroundColor: \"#1F2329\",\r\n                            boxShadow: \"0px 2px 8px 0px rgba(0, 0, 0, 0.15)\",\r\n                            borderColor: \"#1F2329\",\r\n                            textStyle: {\r\n                                color: \"#fff\",\r\n                            },\r\n                        },\r\n                        dataset: {\r\n                            dimensions: [\"x\", \"y\"],\r\n                            source: res.data,\r\n                        },\r\n                        grid: {\r\n                            left: \"25px\",\r\n                            right: \"5px\",\r\n                            bottom: \"9%\",\r\n                            top: \"33px\",\r\n                            containLabel: true,\r\n                        },\r\n                        xAxis: {\r\n                            type: \"category\",\r\n                            boundaryGap: false,\r\n                            splitLine: {\r\n                                show: true,\r\n                                lineStyle: {\r\n                                    color: \"#E9E9E9\",\r\n                                    type: \"dashed\",\r\n                                },\r\n                            },\r\n                            axisLabel: {\r\n                                // interval: 0,\r\n                                // rotate: 30,\r\n                            },\r\n                            axisTick: {\r\n                                show: true, //显示X轴刻度\r\n                                lineStyle: {\r\n                                    color: \"#E9E9E9\",\r\n                                },\r\n                            },\r\n                            axisLine: {\r\n                                // 刻度线的颜色\r\n                                show: false,\r\n                            },\r\n                            axisPointer: {\r\n                                type: \"line\",\r\n                                lineStyle: { color: \"#BDBEBF\" },\r\n                            },\r\n                        },\r\n                        yAxis: [\r\n                            {\r\n                                type: \"value\",\r\n                                name: \"单位：（个）\",\r\n                                nameLocation: \"end\",\r\n                                axisLine: {\r\n                                    show: false,\r\n                                },\r\n                                nameTextStyle: {\r\n                                    color: \"#666\",\r\n                                },\r\n                                axisTick: {\r\n                                    show: false, //隐藏X轴刻度\r\n                                },\r\n                                splitLine: {\r\n                                    show: true,\r\n                                    lineStyle: {\r\n                                        color: \"#E9E9E9\",\r\n                                        type: \"dashed\",\r\n                                    },\r\n                                },\r\n                                nameTextStyle: {\r\n                                    padding: [0, 0, 0, 40],\r\n                                },\r\n                            },\r\n                        ],\r\n                        series: [\r\n                            {\r\n                                name: \"在线人数\",\r\n                                type: \"line\",\r\n                                smooth: true,\r\n                                showSymbol: false,\r\n                                // symbol: \"circle\",\r\n                                itemStyle: {\r\n                                    normal: {\r\n                                        color: \"#65A6FF\",\r\n                                    },\r\n                                },\r\n                                areaStyle: {\r\n                                    normal: {\r\n                                        color: new echarts.graphic.LinearGradient(\r\n                                            0,\r\n                                            0,\r\n                                            0,\r\n                                            1,\r\n                                            [\r\n                                                {\r\n                                                    offset: 0,\r\n                                                    color: \"rgba(50, 129, 255, 0.2)\",\r\n                                                },\r\n                                                {\r\n                                                    offset: 1,\r\n                                                    color: \"rgba(255,255,255,0)\",\r\n                                                },\r\n                                            ],\r\n                                            false\r\n                                        ),\r\n                                        shadowColor: \"rgba(0, 0, 0, 0.1)\",\r\n                                        shadowBlur: 10,\r\n                                    },\r\n                                },\r\n                            },\r\n                        ],\r\n                    };\r\n                    var myChart = echarts.init(\r\n                        document.getElementById(\"main_3\")\r\n                    );\r\n\r\n                    myChart.resize();\r\n                    myChart.setOption(option);\r\n                    var myChart3 = echarts.init(\r\n                        document.getElementById(\"main_4\")\r\n                    );\r\n                    myChart3.setOption(option);\r\n                    var myChart1 = echarts.init(\r\n                        document.getElementById(\"main_1\")\r\n                    );\r\n                    myChart1.setOption(option);\r\n                    var myChart2 = echarts.init(\r\n                        document.getElementById(\"main_2\")\r\n                    );\r\n                    myChart2.setOption(option);\r\n                }\r\n            } else {\r\n                message.error(\"服务异常\");\r\n            }\r\n        });\r\n    };\r\n    componentDidMount() {\r\n        this.getData({\r\n            hostId: \"1\",\r\n            startTime: \"\",\r\n            endTime: \"\",\r\n        });\r\n    }\r\n    render() {\r\n        const { getFieldDecorator } = this.props.form;\r\n        return (\r\n            <div className={styles.container}>\r\n                <div className={styles.search}>\r\n                    <Form layout=\"inline\" onSubmit={this.handleSubmit}>\r\n                        <Form.Item>\r\n                            {getFieldDecorator(\"hostId\", {\r\n                                initialValue: \"\",\r\n                            })(\r\n                                <Select\r\n                                    showSearch\r\n                                    style={{ width: 160 }}\r\n                                    placeholder=\"选择数量\"\r\n                                    optionFilterProp=\"number\"\r\n                                    filterOption={(input, option) =>\r\n                                        option.props.children\r\n                                            .toLowerCase()\r\n                                            .indexOf(input.toLowerCase()) >= 0\r\n                                    }\r\n                                >\r\n                                    <Option value=\"\">所有数量</Option>\r\n                                    <Option value=\"1\">80</Option>\r\n                                </Select>\r\n                            )}\r\n                        </Form.Item>\r\n                        <Form.Item style={{ marginLeft: \"12px\" }}>\r\n                            {getFieldDecorator(\"securityId\", {\r\n                                initialValue: \"\",\r\n                            })(\r\n                                <Select\r\n                                    showSearch\r\n                                    style={{ width: 160 }}\r\n                                    placeholder=\"选择股票\"\r\n                                    optionFilterProp=\"children\"\r\n                                    filterOption={(input, option) =>\r\n                                        option.props.children\r\n                                            .toLowerCase()\r\n                                            .indexOf(input.toLowerCase()) >= 0\r\n                                    }\r\n                                >\r\n                                    <Option value=\"\">全部股票</Option>\r\n                                    <Option value=\"1\">80</Option>\r\n                                </Select>\r\n                            )}\r\n                        </Form.Item>\r\n                        <Form.Item style={{ marginLeft: \"12px\" }}>\r\n                            {getFieldDecorator(\"hostId\", {\r\n                                initialValue: \"\",\r\n                            })(\r\n                                <Select\r\n                                    showSearch\r\n                                    style={{ width: 160 }}\r\n                                    placeholder=\"选择算法\"\r\n                                    optionFilterProp=\"children\"\r\n                                    filterOption={(input, option) =>\r\n                                        option.props.children\r\n                                            .toLowerCase()\r\n                                            .indexOf(input.toLowerCase()) >= 0\r\n                                    }\r\n                                >\r\n                                    <Option value=\"\">全部算法</Option>\r\n                                    <Option value=\"1\">日内回转</Option>\r\n                                </Select>\r\n                            )}\r\n                        </Form.Item>\r\n                        <Form.Item style={{ marginLeft: \"12px\" }}>\r\n                            {getFieldDecorator(\"uuserId\", {\r\n                                initialValue: \"\",\r\n                            })(\r\n                                <Select\r\n                                    showSearch\r\n                                    style={{ width: 160 }}\r\n                                    placeholder=\"选择用户\"\r\n                                    optionFilterProp=\"children\"\r\n                                    filterOption={(input, option) =>\r\n                                        option.props.children\r\n                                            .toLowerCase()\r\n                                            .indexOf(input.toLowerCase()) >= 0\r\n                                    }\r\n                                >\r\n                                    <Option value=\"\">全部用户</Option>\r\n                                </Select>\r\n                            )}\r\n                        </Form.Item>\r\n                        <Form.Item style={{ marginLeft: \"12px\" }}>\r\n                            {getFieldDecorator(\"pickerTime\")(\r\n                                <RangePicker\r\n                                    style={{ width: 432 }}\r\n                                    showTime\r\n                                    format=\"YYYY-MM-DD HH:mm:ss\"\r\n                                />\r\n                            )}\r\n                        </Form.Item>\r\n                        <Form.Item style={{ float: \"right\" }}>\r\n                            <Button\r\n                                type=\"primary\"\r\n                                htmlType=\"submit\"\r\n                                style={{ width: 76 }}\r\n                            >\r\n                                确定\r\n                            </Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </div>\r\n                <div className={styles.chart}>\r\n                    <div id=\"main_1\" className={styles.chartBox}></div>\r\n                    <div id=\"main_2\" className={styles.chartBox}></div>\r\n                    <div id=\"main_3\" className={styles.chartBox}></div>\r\n                    <div id=\"main_4\" className={styles.chartBox}></div>\r\n                    {/* <div\r\n                        id=\"main_1\"\r\n                        style={{ width: \"48%\", height: \"500px\", float: \"left\" }}\r\n                    ></div>\r\n                    <div\r\n                        id=\"main_2\"\r\n                        style={{\r\n                            width: \"48%\",\r\n                            height: \"500px\",\r\n                            float: \"right\",\r\n                        }}\r\n                    ></div> */}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Form.create()(Ram2);\r\n"]},"metadata":{},"sourceType":"module"}