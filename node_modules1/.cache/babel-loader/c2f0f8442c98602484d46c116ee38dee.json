{"ast":null,"code":"import _toConsumableArray from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\n\n//动态导入单个路由\nvar DynamicImport = function DynamicImport(route) {\n  var path = route.component;\n  var npath = path.replace(\"@/\", \"\");\n\n  var file = require(\"@/\" + npath).default;\n\n  route.component = file;\n  return route;\n}; //批量递归动态导入组件\n\n\nvar batchDynamicImport = function batchDynamicImport() {\n  var routes = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  routes.forEach(function (r, idx) {\n    //允许允许末尾没有/\n    // r.strict = false;\n    if (r.children) {\n      r.exact = false;\n    } else {\n      r.exact = true;\n    }\n\n    if (typeof r.component == \"string\") {\n      DynamicImport(r);\n    }\n\n    if (r.children) {\n      batchDynamicImport(r.children);\n    }\n  });\n};\n\nexport var withDynamicImport = function withDynamicImport(routes) {\n  var newRoutes = _toConsumableArray(routes);\n\n  batchDynamicImport(newRoutes);\n  return {\n    routes: newRoutes\n  };\n};","map":{"version":3,"sources":["D:/company/algo-manage/src/components/DynamicImport/index.js"],"names":["DynamicImport","route","path","component","npath","replace","file","require","default","batchDynamicImport","routes","forEach","r","idx","children","exact","withDynamicImport","newRoutes"],"mappings":";;AAAA;AACA,IAAMA,aAAa,GAAG,SAAhBA,aAAgB,CAAAC,KAAK,EAAI;AAC7B,MAAIC,IAAI,GAAGD,KAAK,CAACE,SAAjB;AACA,MAAIC,KAAK,GAAGF,IAAI,CAACG,OAAL,CAAa,IAAb,EAAmB,EAAnB,CAAZ;;AACA,MAAIC,IAAI,GAAGC,OAAO,CAAC,OAAOH,KAAR,CAAP,CAAsBI,OAAjC;;AACAP,EAAAA,KAAK,CAACE,SAAN,GAAkBG,IAAlB;AACA,SAAOL,KAAP;AACD,CAND,C,CAOA;;;AACA,IAAMQ,kBAAkB,GAAG,SAArBA,kBAAqB,GAAiB;AAAA,MAAhBC,MAAgB,uEAAP,EAAO;AAC1CA,EAAAA,MAAM,CAACC,OAAP,CAAe,UAACC,CAAD,EAAIC,GAAJ,EAAY;AACzB;AACA;AACA,QAAID,CAAC,CAACE,QAAN,EAAgB;AACdF,MAAAA,CAAC,CAACG,KAAF,GAAU,KAAV;AACD,KAFD,MAEO;AACLH,MAAAA,CAAC,CAACG,KAAF,GAAU,IAAV;AACD;;AACD,QAAI,OAAOH,CAAC,CAACT,SAAT,IAAsB,QAA1B,EAAoC;AAClCH,MAAAA,aAAa,CAACY,CAAD,CAAb;AACD;;AACD,QAAIA,CAAC,CAACE,QAAN,EAAgB;AACdL,MAAAA,kBAAkB,CAACG,CAAC,CAACE,QAAH,CAAlB;AACD;AACF,GAdD;AAeD,CAhBD;;AAiBA,OAAO,IAAME,iBAAiB,GAAG,SAApBA,iBAAoB,CAAAN,MAAM,EAAI;AACzC,MAAIO,SAAS,sBAAOP,MAAP,CAAb;;AACAD,EAAAA,kBAAkB,CAACQ,SAAD,CAAlB;AACA,SAAO;AAAEP,IAAAA,MAAM,EAAEO;AAAV,GAAP;AACD,CAJM","sourcesContent":["//动态导入单个路由\r\nconst DynamicImport = route => {\r\n  let path = route.component;\r\n  let npath = path.replace(\"@/\", \"\");\r\n  let file = require(\"@/\" + npath).default;\r\n  route.component = file;\r\n  return route;\r\n};\r\n//批量递归动态导入组件\r\nconst batchDynamicImport = (routes = []) => {\r\n  routes.forEach((r, idx) => {\r\n    //允许允许末尾没有/\r\n    // r.strict = false;\r\n    if (r.children) {\r\n      r.exact = false;\r\n    } else {\r\n      r.exact = true;\r\n    }\r\n    if (typeof r.component == \"string\") {\r\n      DynamicImport(r);\r\n    }\r\n    if (r.children) {\r\n      batchDynamicImport(r.children);\r\n    }\r\n  });\r\n};\r\nexport const withDynamicImport = routes => {\r\n  let newRoutes = [...routes];\r\n  batchDynamicImport(newRoutes);\r\n  return { routes: newRoutes };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}