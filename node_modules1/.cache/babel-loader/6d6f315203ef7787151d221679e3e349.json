{"ast":null,"code":"import _defineProperty from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport \"antd/lib/input/style\";\nimport _Input from \"antd/lib/input\";\nvar _jsxFileName = \"D:\\\\company\\\\algo-manage\\\\src\\\\algo\\\\modules\\\\user\\\\pages\\\\session\\\\index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport CurdComponent from \"@/components/CurdComponent\"; // import SelectOption from \"@/components/SelectOption\";\n\nimport TagLabel from \"@/components/Tag\"; // import UploadWrap from \"@/components/UploadWrap\";\n\nvar columns = function columns(params) {\n  return [{\n    title: \"ID\",\n    dataIndex: \"id\",\n    width: 100\n  }, {\n    title: \"用户名称\",\n    dataIndex: \"userName\",\n    width: 100\n  }, // {\n  //     title: \"会话token\",\n  //     dataIndex: \"token\",\n  //     width: 320,\n  // },\n  {\n    title: \"客户端类型\",\n    dataIndex: \"clientType\",\n    width: 120\n  }, {\n    title: \"状态\",\n    dataIndex: \"sessionStatus\",\n    width: 170,\n    render: function render(text, record) {\n      // console.log(record);\n      // return (\n      //     <TagLabel\n      //         record={record.sessionStatus}\n      //         type=\"warn\"\n      //     ></TagLabel>\n      // );\n      if (record.sessionStatus.indexOf(\"1\") == 0) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        }, React.createElement(TagLabel, {\n          record: record.sessionStatus,\n          type: \"success\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        }));\n      } else if (record.sessionStatus.indexOf(\"2\") == 0 || record.sessionStatus.indexOf(\"3\") == 0) {\n        return React.createElement(TagLabel, {\n          record: record.sessionStatus,\n          type: \"warn\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        });\n      } else if (record.sessionStatus.indexOf(\"4\") == 0) {\n        return React.createElement(TagLabel, {\n          record: record.sessionStatus,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(TagLabel, {\n        record: record.sessionStatus,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      });\n    }\n  }, {\n    title: \"套接字\",\n    dataIndex: \"socket\",\n    width: 100\n  }, {\n    title: \"服务索引\",\n    dataIndex: \"serverId\",\n    width: 100\n  }, {\n    title: \"创建时间\",\n    dataIndex: \"createTime\",\n    width: 200\n  }, {\n    title: \"更新时间\",\n    dataIndex: \"updateTime\",\n    width: 200\n  }, {\n    title: \"服务器地址端口\",\n    dataIndex: \"serverIp\",\n    width: 180\n  }];\n};\n\nvar getSearchFormFields = function getSearchFormFields() {\n  return [{\n    label: \"用户名称\",\n    // label: <span>用&nbsp;&nbsp;户&nbsp;ID</span>,\n    id: \"userName\",\n    component: React.createElement(_Input, {\n      placeholder: \"\\u8BF7\\u8F93\\u5165\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    })\n  }];\n};\n\nvar session =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(session, _React$PureComponent);\n\n  function session() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, session);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(session)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      searchLoading: false,\n      selectRow: [],\n      info: [],\n      pagination: {\n        total: 0\n      }\n    };\n\n    _this.handleTableChange = function (selectedRowKeys) {\n      console.log(\"批量选择\");\n\n      _this.setState({\n        selectRow: selectedRowKeys\n      });\n    };\n\n    _this.handleInsertRecord = function (params) {\n      console.log(params);\n    };\n\n    _this.handleUpdateRecord = function (_ref) {\n      var form = _ref.form;\n      console.log(form.getFieldsValue()); // return;\n\n      var params = form.getFieldsValue();\n      params.name = _this.record.name;\n      http.post({\n        url: \"/option/tcp/uoeMore/1011\",\n        data: params\n      }).then(function (res) {\n        console.log(res);\n        message.success(res.msg);\n        _this.isAction = true;\n\n        _this.getData();\n      });\n    };\n\n    _this.handleDeleteRecord = function (record) {\n      console.log(\"删除记录 \", record);\n    };\n\n    _this.setUpdateModal = function (_ref2) {\n      var form = _ref2.form,\n          record = _ref2.record;\n      // console.log(record, form);\n      _this.record = record;\n      form.setFieldsValue({\n        switchId: record.switchId,\n        ip: record.ip,\n        mask: record.mask,\n        mac: record.mac,\n        gateway: record.gateway,\n        enable: record.enable + \"\"\n      });\n    };\n\n    _this.getData = function () {\n      var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var pagination = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n        current: 1,\n        pageSize: 13\n      };\n      params = _objectSpread({}, params, {\n        pageId: pagination.current,\n        pageNum: pagination.pageSize\n      }); // params.token = \"\";\n\n      http.post({\n        // url: \"/option/tb-asset-info/queryList\",\n        url: \"/session/list\",\n        data: params\n      }).then(function (res) {\n        console.log(res); //解析数据字典\n\n        if (res.data.records && res.data.records.length > 0) {\n          parseDict(res.data.records); // showTip(this);\n        } else {\n          message.info(\"查询结果为空\");\n        }\n\n        var pgn = {\n          current: res.data.current,\n          pageSize: pagination.pageSize,\n          total: res.data.total || 0\n        };\n\n        _this.setState({\n          info: res.data.records,\n          pagination: pgn\n        });\n      });\n    };\n\n    _this.handleSearch = function (params, pagination) {\n      _this.getData(params, pagination);\n    };\n\n    return _this;\n  }\n\n  _createClass(session, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getData();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var scroll = {\n        x: 1000,\n        y: 445\n      };\n      var info = this.state.info; //批量\n      // let { selectRow } = this.state;\n      // const rowSelection = {\n      //     selectRow,\n      //     onChange: this.handleTableChange,\n      // };\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }, React.createElement(CurdComponent // rowKey={\"index\"}\n      // btnText2=\"查全部\"\n      // isShowSearchForm={false}\n      , {\n        onSearchClick: this.handleSearch,\n        getSearchFormFields: getSearchFormFields // searchLoading={this.state.searchLoading}\n        // insertBtnText={\"新增UOE配置\"} // 不传 就没新增按钮\n        // getInsertFormFields={getInsertFormFields}\n        // insertRecord={this.handleInsertRecord}\n        // col=\"2\"\n        ,\n        width: \"600px\",\n        pagination: this.state.pagination // getUpdateFormFields={getUpdateFormFields}\n        // setUpdateModal={this.setUpdateModal}\n        // updateRecord={this.handleUpdateRecord} // 不传 就没编辑\n        // deleteRecord={this.handleDeleteRecord} // 不传 就没删除\n        ,\n        centered: true,\n        columns: columns,\n        dataSource: info,\n        scroll: scroll // rowSelection={rowSelection} //批量选择 操作\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        urlPrefix: \"/session\",\n        noUpload: true,\n        title: \"\\u7528\\u6237\\u4F1A\\u8BDD\",\n        sucCallback: this.getData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return session;\n}(React.PureComponent);\n\nexport { session as default };","map":{"version":3,"sources":["D:/company/algo-manage/src/algo/modules/user/pages/session/index.js"],"names":["React","CurdComponent","TagLabel","columns","params","title","dataIndex","width","render","text","record","sessionStatus","indexOf","getSearchFormFields","label","id","component","session","state","searchLoading","selectRow","info","pagination","total","handleTableChange","selectedRowKeys","console","log","setState","handleInsertRecord","handleUpdateRecord","form","getFieldsValue","name","http","post","url","data","then","res","message","success","msg","isAction","getData","handleDeleteRecord","setUpdateModal","setFieldsValue","switchId","ip","mask","mac","gateway","enable","current","pageSize","pageId","pageNum","records","length","parseDict","pgn","handleSearch","scroll","x","y","PureComponent"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport CurdComponent from \"@/components/CurdComponent\";\r\n// import SelectOption from \"@/components/SelectOption\";\r\nimport { Input } from \"antd\";\r\nimport TagLabel from \"@/components/Tag\";\r\n\r\n// import UploadWrap from \"@/components/UploadWrap\";\r\n\r\nconst columns = (params) => {\r\n    return [\r\n        {\r\n            title: \"ID\",\r\n            dataIndex: \"id\",\r\n            width: 100,\r\n        },\r\n        {\r\n            title: \"用户名称\",\r\n            dataIndex: \"userName\",\r\n            width: 100,\r\n        },\r\n        // {\r\n        //     title: \"会话token\",\r\n        //     dataIndex: \"token\",\r\n        //     width: 320,\r\n        // },\r\n        {\r\n            title: \"客户端类型\",\r\n            dataIndex: \"clientType\",\r\n            width: 120,\r\n        },\r\n        {\r\n            title: \"状态\",\r\n            dataIndex: \"sessionStatus\",\r\n            width: 170,\r\n            render: (text, record) => {\r\n                // console.log(record);\r\n                // return (\r\n                //     <TagLabel\r\n                //         record={record.sessionStatus}\r\n                //         type=\"warn\"\r\n                //     ></TagLabel>\r\n                // );\r\n                if (record.sessionStatus.indexOf(\"1\") == 0) {\r\n                    return (\r\n                        <div>\r\n                            <TagLabel\r\n                                record={record.sessionStatus}\r\n                                type=\"success\"\r\n                            ></TagLabel>\r\n                        </div>\r\n                    );\r\n                } else if (\r\n                    record.sessionStatus.indexOf(\"2\") == 0 ||\r\n                    record.sessionStatus.indexOf(\"3\") == 0\r\n                ) {\r\n                    return (\r\n                        <TagLabel\r\n                            record={record.sessionStatus}\r\n                            type=\"warn\"\r\n                        ></TagLabel>\r\n                    );\r\n                } else if (record.sessionStatus.indexOf(\"4\") == 0) {\r\n                    return <TagLabel record={record.sessionStatus}></TagLabel>;\r\n                }\r\n                return <TagLabel record={record.sessionStatus}></TagLabel>;\r\n            },\r\n        },\r\n        {\r\n            title: \"套接字\",\r\n            dataIndex: \"socket\",\r\n            width: 100,\r\n        },\r\n        {\r\n            title: \"服务索引\",\r\n            dataIndex: \"serverId\",\r\n            width: 100,\r\n        },\r\n        {\r\n            title: \"创建时间\",\r\n            dataIndex: \"createTime\",\r\n            width: 200,\r\n        },\r\n        {\r\n            title: \"更新时间\",\r\n            dataIndex: \"updateTime\",\r\n            width: 200,\r\n        },\r\n        {\r\n            title: \"服务器地址端口\",\r\n            dataIndex: \"serverIp\",\r\n            width: 180,\r\n        },\r\n    ];\r\n};\r\nlet getSearchFormFields = () => {\r\n    return [\r\n        {\r\n            label: \"用户名称\",\r\n            // label: <span>用&nbsp;&nbsp;户&nbsp;ID</span>,\r\n            id: \"userName\",\r\n            component: <Input placeholder=\"请输入\" />,\r\n        },\r\n    ];\r\n};\r\nexport default class session extends React.PureComponent {\r\n    state = {\r\n        searchLoading: false,\r\n        selectRow: [],\r\n        info: [],\r\n        pagination: { total: 0 },\r\n    };\r\n    //批量选择\r\n    handleTableChange = (selectedRowKeys) => {\r\n        console.log(\"批量选择\");\r\n        this.setState({\r\n            selectRow: selectedRowKeys,\r\n        });\r\n    };\r\n\r\n    handleInsertRecord = (params) => {\r\n        console.log(params);\r\n    };\r\n    //更新记录\r\n    handleUpdateRecord = ({ form }) => {\r\n        console.log(form.getFieldsValue());\r\n        // return;\r\n        let params = form.getFieldsValue();\r\n        params.name = this.record.name;\r\n        http.post({\r\n            url: \"/option/tcp/uoeMore/1011\",\r\n            data: params,\r\n        }).then((res) => {\r\n            console.log(res);\r\n            message.success(res.msg);\r\n            this.isAction = true;\r\n            this.getData();\r\n        });\r\n    };\r\n    //删除记录\r\n    handleDeleteRecord = (record) => {\r\n        console.log(\"删除记录 \", record);\r\n    };\r\n    //填入更新数据\r\n    setUpdateModal = ({ form, record }) => {\r\n        // console.log(record, form);\r\n        this.record = record;\r\n        form.setFieldsValue({\r\n            switchId: record.switchId,\r\n            ip: record.ip,\r\n            mask: record.mask,\r\n            mac: record.mac,\r\n            gateway: record.gateway,\r\n            enable: record.enable + \"\",\r\n        });\r\n    };\r\n    getData = (params = {}, pagination = { current: 1, pageSize: 13 }) => {\r\n        params = {\r\n            ...params,\r\n            pageId: pagination.current,\r\n            pageNum: pagination.pageSize,\r\n        };\r\n        // params.token = \"\";\r\n        http.post({\r\n            // url: \"/option/tb-asset-info/queryList\",\r\n            url: \"/session/list\",\r\n            data: params,\r\n        }).then((res) => {\r\n            console.log(res);\r\n            //解析数据字典\r\n            if (res.data.records && res.data.records.length > 0) {\r\n                parseDict(res.data.records);\r\n                // showTip(this);\r\n            } else {\r\n                message.info(\"查询结果为空\");\r\n            }\r\n            let pgn = {\r\n                current: res.data.current,\r\n                pageSize: pagination.pageSize,\r\n                total: res.data.total || 0,\r\n            };\r\n            this.setState({\r\n                info: res.data.records,\r\n                pagination: pgn,\r\n            });\r\n        });\r\n    };\r\n    handleSearch = (params, pagination) => {\r\n        this.getData(params, pagination);\r\n    };\r\n    componentDidMount() {\r\n        this.getData();\r\n    }\r\n    render() {\r\n        let scroll = { x: 1000, y: 445 };\r\n        let info = this.state.info;\r\n        //批量\r\n        // let { selectRow } = this.state;\r\n        // const rowSelection = {\r\n        //     selectRow,\r\n        //     onChange: this.handleTableChange,\r\n        // };\r\n        return (\r\n            <div>\r\n                <CurdComponent\r\n                    // rowKey={\"index\"}\r\n                    // btnText2=\"查全部\"\r\n                    // isShowSearchForm={false}\r\n                    onSearchClick={this.handleSearch}\r\n                    getSearchFormFields={getSearchFormFields}\r\n                    // searchLoading={this.state.searchLoading}\r\n                    // insertBtnText={\"新增UOE配置\"} // 不传 就没新增按钮\r\n                    // getInsertFormFields={getInsertFormFields}\r\n                    // insertRecord={this.handleInsertRecord}\r\n                    // col=\"2\"\r\n                    width=\"600px\"\r\n                    pagination={this.state.pagination}\r\n                    // getUpdateFormFields={getUpdateFormFields}\r\n                    // setUpdateModal={this.setUpdateModal}\r\n                    // updateRecord={this.handleUpdateRecord} // 不传 就没编辑\r\n                    // deleteRecord={this.handleDeleteRecord} // 不传 就没删除\r\n                    centered={true}\r\n                    columns={columns}\r\n                    dataSource={info}\r\n                    scroll={scroll}\r\n                    // rowSelection={rowSelection} //批量选择 操作\r\n                >\r\n                    <div\r\n                        urlPrefix=\"/session\"\r\n                        noUpload={true}\r\n                        title=\"用户会话\"\r\n                        sucCallback={this.getData}\r\n                    ></div>\r\n                </CurdComponent>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}