{"ast":null,"code":"import \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/form/style\";\nimport _Form from \"antd/lib/form\";\nimport _defineProperty from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport \"antd/lib/select/style\";\nimport _Select from \"antd/lib/select\";\nimport \"antd/lib/date-picker/style\";\nimport _DatePicker from \"antd/lib/date-picker\";\nvar _jsxFileName = \"D:\\\\company\\\\algo-manage\\\\src\\\\algo\\\\modules\\\\tradeStatistics\\\\pages\\\\regularWay\\\\index.js\";\nimport React from \"react\";\nimport styles from \"./style.module.less\";\nimport echarts from \"echarts\";\nvar RangePicker = _DatePicker.RangePicker;\nvar Option = _Select.Option;\n\nvar OnlineUser =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(OnlineUser, _React$PureComponent);\n\n  function OnlineUser() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, OnlineUser);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(OnlineUser)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      number: \"笔\"\n    };\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n\n      _this.props.form.validateFields(function (err, values) {\n        if (!err) {\n          var noTime = values[\"pickerTime\"].length < 1;\n          var params = {\n            securityId: values.securityId,\n            uuserId: values.uuserId,\n            startTime: noTime ? \"\" : Date.parse(values[\"pickerTime\"][0]),\n            endTime: noTime ? \"\" : Date.parse(values[\"pickerTime\"][1])\n          };\n\n          _this.setState({\n            number: values.number\n          });\n\n          _this.getData(params);\n        }\n      });\n    };\n\n    _this.getData = function (params) {\n      var count = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      http.post({\n        url: \"/statistics/trade\",\n        data: params\n      }).then(function (res) {\n        if (res.code == 0) {\n          if (res.data.length == 0) {\n            message.error(\"该时间段暂无数据\");\n          } else {\n            var data = {\n              tradeOrder: [{\n                x: \"1970/01/01 08:00\",\n                y: 1\n              }, {\n                x: \"2022/06/21 16:46\",\n                y: 4\n              }, {\n                x: \"2022/06/22 16:46\",\n                y: 8\n              }, {\n                x: \"2022/06/23 16:46\",\n                y: 1\n              }, {\n                x: \"2022/06/24 16:46\",\n                y: 2\n              }, {\n                x: \"2022/06/25 16:46\",\n                y: 5\n              }, {\n                x: \"2022/06/26 16:46\",\n                y: 10\n              }, {\n                x: \"2022/06/27 16:46\",\n                y: 2\n              }, {\n                x: \"2022/06/28 16:46\",\n                y: 1\n              }, {\n                x: \"2022/06/29 16:46\",\n                y: 2\n              }, {\n                x: \"2022/06/30 16:46\",\n                y: 5\n              }, {\n                x: \"2022/06/31 16:46\",\n                y: 10\n              }, {\n                x: \"2022/06/32 16:46\",\n                y: 2\n              }, {\n                x: \"2022/06/33 16:46\",\n                y: 5\n              }, {\n                x: \"2022/06/34 16:46\",\n                y: 10\n              }, {\n                x: \"2022/06/35 16:46\",\n                y: 2\n              }],\n              cancelTradeOrder: [{\n                x: \"1970/01/01 08:00\",\n                y: 1\n              }, {\n                x: \"2022/06/21 16:46\",\n                y: 4\n              }],\n              dealTradeOrder: [{\n                x: \"1970/01/01 08:00\",\n                y: 1\n              }, {\n                x: \"2022/06/21 16:46\",\n                y: 4\n              }]\n            };\n            var echartLen = Object.keys(data);\n            echartLen.forEach(function (item) {\n              _this.generateChart(data[item], item);\n            });\n          }\n        } else {\n          message.error(\"服务异常\");\n        }\n      });\n    };\n\n    _this.generateChart = function (list, type) {\n      var lineObj = {\n        tradeOrder: {\n          name: \"普通单信息\",\n          color: \"#F78B7F\"\n        },\n        cancelTradeOrder: {\n          name: \"撤单信息\",\n          color: \"#FFD747\"\n        },\n        dealTradeOrder: {\n          name: \"成交信息\",\n          color: \"#72DF5A\"\n        }\n      };\n      var option = {\n        title: {\n          top: \"12px\",\n          left: \"32px\",\n          text: \"{a|}  \" + lineObj[type].name,\n          textStyle: {\n            color: \"#333333\",\n            fontSize: 14,\n            fontWeight: 500,\n            rich: {\n              a: {\n                backgroundColor: \"#3281FF\",\n                height: 10,\n                width: 2\n              }\n            }\n          }\n        },\n        textStyle: {\n          color: \"#333\"\n        },\n        tooltip: {\n          trigger: \"axis\",\n          backgroundColor: \"#1F2329\",\n          boxShadow: \"0px 2px 8px 0px rgba(0, 0, 0, 0.15)\",\n          borderColor: \"#1F2329\",\n          textStyle: {\n            color: \"#fff\"\n          }\n        },\n        dataset: {\n          dimensions: [\"x\", \"y\"],\n          source: list\n        },\n        grid: {\n          left: \"34px\",\n          right: \"32px\",\n          bottom: \"24px\",\n          top: \"80px\",\n          containLabel: true\n        },\n        xAxis: {\n          type: \"category\",\n          boundaryGap: false,\n          splitLine: {\n            show: true,\n            lineStyle: {\n              color: \"#E9E9E9\",\n              type: \"dashed\"\n            }\n          },\n          axisLabel: {// interval: 0,\n            // rotate: 30,\n          },\n          axisTick: {\n            show: true,\n            //显示X轴刻度\n            lineStyle: {\n              color: \"#E9E9E9\"\n            }\n          },\n          axisLine: {\n            // 刻度线的颜色\n            show: false\n          },\n          axisPointer: {\n            type: \"line\",\n            lineStyle: {\n              color: \"#BDBEBF\"\n            }\n          }\n        },\n        yAxis: [_defineProperty({\n          type: \"value\",\n          name: \"\\u5355\\u4F4D\\uFF1A(\".concat(_this.state.number, \")\"),\n          nameLocation: \"end\",\n          axisLine: {\n            show: false\n          },\n          nameTextStyle: {\n            color: \"#666\"\n          },\n          axisTick: {\n            show: false //隐藏X轴刻度\n\n          },\n          splitLine: {\n            show: true,\n            lineStyle: {\n              color: \"#E9E9E9\",\n              type: \"dashed\"\n            }\n          }\n        }, \"nameTextStyle\", {\n          align: right // padding: [0, 0, 0, 40],\n\n        })],\n        series: [{\n          name: \"普通单数\",\n          type: \"line\",\n          smooth: true,\n          showSymbol: false,\n          // symbol: \"circle\",\n          itemStyle: {\n            normal: {\n              color: lineObj[type].color\n            }\n          },\n          areaStyle: {\n            normal: {\n              color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\n                offset: 0,\n                color: lineObj[type].color\n              }, {\n                offset: 1,\n                color: \"rgba(255,255,255,0)\"\n              }], false),\n              shadowColor: \"rgba(0, 0, 0, 0.1)\",\n              shadowBlur: 10\n            }\n          }\n        }]\n      };\n      var myChart = echarts.init(document.getElementById(type));\n      myChart.setOption(option);\n      myChart.resize();\n    };\n\n    return _this;\n  }\n\n  _createClass(OnlineUser, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getData();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var getFieldDecorator = this.props.form.getFieldDecorator;\n      return React.createElement(\"div\", {\n        className: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: styles.search,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }, React.createElement(_Form, {\n        layout: \"inline\",\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, React.createElement(_Form.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }, getFieldDecorator(\"number\", {\n        initialValue: \"笔\"\n      })(React.createElement(_Select, {\n        showSearch: true,\n        style: {\n          width: 160\n        },\n        placeholder: \"\\u9009\\u62E9\\u5355\\u4F4D\",\n        optionFilterProp: \"children\",\n        filterOption: function filterOption(input, option) {\n          return option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }, React.createElement(Option, {\n        value: \"\\u7B14\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }, \"\\u7B14\\u6570\"), React.createElement(Option, {\n        value: \"\\u5143\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        },\n        __self: this\n      }, \"\\u91D1\\u989D\")))), React.createElement(_Form.Item, {\n        style: {\n          marginLeft: \"12px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      }, getFieldDecorator(\"securityId\", {\n        initialValue: \"\"\n      })(React.createElement(_Select, {\n        showSearch: true,\n        style: {\n          width: 160\n        },\n        placeholder: \"\\u9009\\u62E9\\u80A1\\u7968\",\n        optionFilterProp: \"children\",\n        filterOption: function filterOption(input, option) {\n          return option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255\n        },\n        __self: this\n      }, React.createElement(Option, {\n        value: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        },\n        __self: this\n      }, \"\\u5168\\u90E8\\u80A1\\u7968\"), React.createElement(Option, {\n        value: \"000001\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267\n        },\n        __self: this\n      }, \"\\u5E73\\u5B89\\u94F6\\u884C\")))), React.createElement(_Form.Item, {\n        style: {\n          marginLeft: \"12px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271\n        },\n        __self: this\n      }, getFieldDecorator(\"uuserId\", {\n        initialValue: \"\"\n      })(React.createElement(_Select, {\n        showSearch: true,\n        style: {\n          width: 160\n        },\n        placeholder: \"\\u9009\\u62E9\\u7528\\u6237\",\n        optionFilterProp: \"children\",\n        filterOption: function filterOption(input, option) {\n          return option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275\n        },\n        __self: this\n      }, React.createElement(Option, {\n        value: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286\n        },\n        __self: this\n      }, \"\\u5168\\u90E8\\u7528\\u6237\")))), React.createElement(_Form.Item, {\n        style: {\n          marginLeft: \"12px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290\n        },\n        __self: this\n      }, getFieldDecorator(\"pickerTime\", {\n        initialValue: []\n      })(React.createElement(RangePicker, {\n        style: {\n          width: 432\n        },\n        showTime: true,\n        format: \"YYYY-MM-DD HH:mm:ss\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294\n        },\n        __self: this\n      }))), React.createElement(_Form.Item, {\n        style: {\n          float: \"right\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301\n        },\n        __self: this\n      }, React.createElement(_Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        style: {\n          width: 76\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302\n        },\n        __self: this\n      }, \"\\u786E\\u5B9A\")))), React.createElement(\"div\", {\n        className: styles.chart,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"tradeOrder\",\n        className: styles.chartBox,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        id: \"cancelTradeOrder\",\n        className: styles.chartBox,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        id: \"dealTradeOrder\",\n        className: styles.chartBox,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return OnlineUser;\n}(React.PureComponent);\n\nexport default _Form.create()(OnlineUser);","map":{"version":3,"sources":["D:/company/algo-manage/src/algo/modules/tradeStatistics/pages/regularWay/index.js"],"names":["React","styles","echarts","RangePicker","Option","OnlineUser","state","number","handleSubmit","e","preventDefault","props","form","validateFields","err","values","noTime","length","params","securityId","uuserId","startTime","Date","parse","endTime","setState","getData","count","http","post","url","data","then","res","code","message","error","tradeOrder","x","y","cancelTradeOrder","dealTradeOrder","echartLen","Object","keys","forEach","item","generateChart","list","type","lineObj","name","color","option","title","top","left","text","textStyle","fontSize","fontWeight","rich","a","backgroundColor","height","width","tooltip","trigger","boxShadow","borderColor","dataset","dimensions","source","grid","right","bottom","containLabel","xAxis","boundaryGap","splitLine","show","lineStyle","axisLabel","axisTick","axisLine","axisPointer","yAxis","nameLocation","nameTextStyle","align","series","smooth","showSymbol","itemStyle","normal","areaStyle","graphic","LinearGradient","offset","shadowColor","shadowBlur","myChart","init","document","getElementById","setOption","resize","getFieldDecorator","container","search","initialValue","input","children","toLowerCase","indexOf","marginLeft","float","chart","chartBox","PureComponent","create"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport styles from \"./style.module.less\";\r\nimport echarts from \"echarts\";\r\nimport { TimePicker, Form, Button, Icon, DatePicker, Select } from \"antd\";\r\n\r\nconst { RangePicker } = DatePicker;\r\nconst { Option } = Select;\r\nclass OnlineUser extends React.PureComponent {\r\n    state = { number: \"笔\" };\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.form.validateFields((err, values) => {\r\n            if (!err) {\r\n                let noTime = values[\"pickerTime\"].length < 1;\r\n                let params = {\r\n                    securityId: values.securityId,\r\n                    uuserId: values.uuserId,\r\n                    startTime: noTime\r\n                        ? \"\"\r\n                        : Date.parse(values[\"pickerTime\"][0]),\r\n                    endTime: noTime ? \"\" : Date.parse(values[\"pickerTime\"][1]),\r\n                };\r\n                this.setState({\r\n                    number: values.number,\r\n                });\r\n                this.getData(params);\r\n            }\r\n        });\r\n    };\r\n    getData = (params, count = 0) => {\r\n        http.post({\r\n            url: \"/statistics/trade\",\r\n            data: params,\r\n        }).then((res) => {\r\n            if (res.code == 0) {\r\n                if (res.data.length == 0) {\r\n                    message.error(\"该时间段暂无数据\");\r\n                } else {\r\n                    let data = {\r\n                        tradeOrder: [\r\n                            { x: \"1970/01/01 08:00\", y: 1 },\r\n                            { x: \"2022/06/21 16:46\", y: 4 },\r\n                            { x: \"2022/06/22 16:46\", y: 8 },\r\n                            { x: \"2022/06/23 16:46\", y: 1 },\r\n                            { x: \"2022/06/24 16:46\", y: 2 },\r\n                            { x: \"2022/06/25 16:46\", y: 5 },\r\n                            { x: \"2022/06/26 16:46\", y: 10 },\r\n                            { x: \"2022/06/27 16:46\", y: 2 },\r\n                            { x: \"2022/06/28 16:46\", y: 1 },\r\n                            { x: \"2022/06/29 16:46\", y: 2 },\r\n                            { x: \"2022/06/30 16:46\", y: 5 },\r\n                            { x: \"2022/06/31 16:46\", y: 10 },\r\n                            { x: \"2022/06/32 16:46\", y: 2 },\r\n                            { x: \"2022/06/33 16:46\", y: 5 },\r\n                            { x: \"2022/06/34 16:46\", y: 10 },\r\n                            { x: \"2022/06/35 16:46\", y: 2 },\r\n                        ],\r\n                        cancelTradeOrder: [\r\n                            { x: \"1970/01/01 08:00\", y: 1 },\r\n                            { x: \"2022/06/21 16:46\", y: 4 },\r\n                        ],\r\n                        dealTradeOrder: [\r\n                            { x: \"1970/01/01 08:00\", y: 1 },\r\n                            { x: \"2022/06/21 16:46\", y: 4 },\r\n                        ],\r\n                    };\r\n                    let echartLen = Object.keys(data);\r\n                    echartLen.forEach((item) => {\r\n                        this.generateChart(data[item], item);\r\n                    });\r\n                }\r\n            } else {\r\n                message.error(\"服务异常\");\r\n            }\r\n        });\r\n    };\r\n    generateChart = (list, type) => {\r\n        let lineObj = {\r\n            tradeOrder: { name: \"普通单信息\", color: \"#F78B7F\" },\r\n            cancelTradeOrder: { name: \"撤单信息\", color: \"#FFD747\" },\r\n            dealTradeOrder: { name: \"成交信息\", color: \"#72DF5A\" },\r\n        };\r\n        let option = {\r\n            title: {\r\n                top: \"12px\",\r\n                left: \"32px\",\r\n                text: \"{a|}  \" + lineObj[type].name,\r\n                textStyle: {\r\n                    color: \"#333333\",\r\n                    fontSize: 14,\r\n                    fontWeight: 500,\r\n                    rich: {\r\n                        a: {\r\n                            backgroundColor: \"#3281FF\",\r\n                            height: 10,\r\n                            width: 2,\r\n                        },\r\n                    },\r\n                },\r\n            },\r\n            textStyle: {\r\n                color: \"#333\",\r\n            },\r\n            tooltip: {\r\n                trigger: \"axis\",\r\n                backgroundColor: \"#1F2329\",\r\n                boxShadow: \"0px 2px 8px 0px rgba(0, 0, 0, 0.15)\",\r\n                borderColor: \"#1F2329\",\r\n                textStyle: {\r\n                    color: \"#fff\",\r\n                },\r\n            },\r\n            dataset: {\r\n                dimensions: [\"x\", \"y\"],\r\n                source: list,\r\n            },\r\n            grid: {\r\n                left: \"34px\",\r\n                right: \"32px\",\r\n                bottom: \"24px\",\r\n                top: \"80px\",\r\n                containLabel: true,\r\n            },\r\n            xAxis: {\r\n                type: \"category\",\r\n                boundaryGap: false,\r\n                splitLine: {\r\n                    show: true,\r\n                    lineStyle: {\r\n                        color: \"#E9E9E9\",\r\n                        type: \"dashed\",\r\n                    },\r\n                },\r\n                axisLabel: {\r\n                    // interval: 0,\r\n                    // rotate: 30,\r\n                },\r\n                axisTick: {\r\n                    show: true, //显示X轴刻度\r\n                    lineStyle: {\r\n                        color: \"#E9E9E9\",\r\n                    },\r\n                },\r\n                axisLine: {\r\n                    // 刻度线的颜色\r\n                    show: false,\r\n                },\r\n                axisPointer: {\r\n                    type: \"line\",\r\n                    lineStyle: { color: \"#BDBEBF\" },\r\n                },\r\n            },\r\n            yAxis: [\r\n                {\r\n                    type: \"value\",\r\n                    name: `单位：(${this.state.number})`,\r\n                    nameLocation: \"end\",\r\n                    axisLine: {\r\n                        show: false,\r\n                    },\r\n                    nameTextStyle: {\r\n                        color: \"#666\",\r\n                    },\r\n                    axisTick: {\r\n                        show: false, //隐藏X轴刻度\r\n                    },\r\n                    splitLine: {\r\n                        show: true,\r\n                        lineStyle: {\r\n                            color: \"#E9E9E9\",\r\n                            type: \"dashed\",\r\n                        },\r\n                    },\r\n                    nameTextStyle: {\r\n                        align: right,\r\n                        // padding: [0, 0, 0, 40],\r\n                    },\r\n                },\r\n            ],\r\n            series: [\r\n                {\r\n                    name: \"普通单数\",\r\n                    type: \"line\",\r\n                    smooth: true,\r\n                    showSymbol: false,\r\n                    // symbol: \"circle\",\r\n                    itemStyle: {\r\n                        normal: {\r\n                            color: lineObj[type].color,\r\n                        },\r\n                    },\r\n                    areaStyle: {\r\n                        normal: {\r\n                            color: new echarts.graphic.LinearGradient(\r\n                                0,\r\n                                0,\r\n                                0,\r\n                                1,\r\n                                [\r\n                                    {\r\n                                        offset: 0,\r\n                                        color: lineObj[type].color,\r\n                                    },\r\n                                    {\r\n                                        offset: 1,\r\n                                        color: \"rgba(255,255,255,0)\",\r\n                                    },\r\n                                ],\r\n                                false\r\n                            ),\r\n                            shadowColor: \"rgba(0, 0, 0, 0.1)\",\r\n                            shadowBlur: 10,\r\n                        },\r\n                    },\r\n                },\r\n            ],\r\n        };\r\n        var myChart = echarts.init(document.getElementById(type));\r\n        myChart.setOption(option);\r\n        myChart.resize();\r\n    };\r\n    componentDidMount() {\r\n        this.getData();\r\n    }\r\n    render() {\r\n        const { getFieldDecorator } = this.props.form;\r\n        return (\r\n            <div className={styles.container}>\r\n                <div className={styles.search}>\r\n                    <Form layout=\"inline\" onSubmit={this.handleSubmit}>\r\n                        <Form.Item>\r\n                            {getFieldDecorator(\"number\", {\r\n                                initialValue: \"笔\",\r\n                            })(\r\n                                <Select\r\n                                    showSearch\r\n                                    style={{ width: 160 }}\r\n                                    placeholder=\"选择单位\"\r\n                                    optionFilterProp=\"children\"\r\n                                    filterOption={(input, option) =>\r\n                                        option.props.children\r\n                                            .toLowerCase()\r\n                                            .indexOf(input.toLowerCase()) >= 0\r\n                                    }\r\n                                >\r\n                                    <Option value=\"笔\">笔数</Option>\r\n                                    <Option value=\"元\">金额</Option>\r\n                                </Select>\r\n                            )}\r\n                        </Form.Item>\r\n                        <Form.Item style={{ marginLeft: \"12px\" }}>\r\n                            {getFieldDecorator(\"securityId\", {\r\n                                initialValue: \"\",\r\n                            })(\r\n                                <Select\r\n                                    showSearch\r\n                                    style={{ width: 160 }}\r\n                                    placeholder=\"选择股票\"\r\n                                    optionFilterProp=\"children\"\r\n                                    filterOption={(input, option) =>\r\n                                        option.props.children\r\n                                            .toLowerCase()\r\n                                            .indexOf(input.toLowerCase()) >= 0\r\n                                    }\r\n                                >\r\n                                    <Option value=\"\">全部股票</Option>\r\n                                    <Option value=\"000001\">平安银行</Option>\r\n                                </Select>\r\n                            )}\r\n                        </Form.Item>\r\n                        <Form.Item style={{ marginLeft: \"12px\" }}>\r\n                            {getFieldDecorator(\"uuserId\", {\r\n                                initialValue: \"\",\r\n                            })(\r\n                                <Select\r\n                                    showSearch\r\n                                    style={{ width: 160 }}\r\n                                    placeholder=\"选择用户\"\r\n                                    optionFilterProp=\"children\"\r\n                                    filterOption={(input, option) =>\r\n                                        option.props.children\r\n                                            .toLowerCase()\r\n                                            .indexOf(input.toLowerCase()) >= 0\r\n                                    }\r\n                                >\r\n                                    <Option value=\"\">全部用户</Option>\r\n                                </Select>\r\n                            )}\r\n                        </Form.Item>\r\n                        <Form.Item style={{ marginLeft: \"12px\" }}>\r\n                            {getFieldDecorator(\"pickerTime\", {\r\n                                initialValue: [],\r\n                            })(\r\n                                <RangePicker\r\n                                    style={{ width: 432 }}\r\n                                    showTime\r\n                                    format=\"YYYY-MM-DD HH:mm:ss\"\r\n                                />\r\n                            )}\r\n                        </Form.Item>\r\n                        <Form.Item style={{ float: \"right\" }}>\r\n                            <Button\r\n                                type=\"primary\"\r\n                                htmlType=\"submit\"\r\n                                style={{ width: 76 }}\r\n                            >\r\n                                确定\r\n                            </Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </div>\r\n                <div className={styles.chart}>\r\n                    <div id=\"tradeOrder\" className={styles.chartBox}></div>\r\n                    <div\r\n                        id=\"cancelTradeOrder\"\r\n                        className={styles.chartBox}\r\n                    ></div>\r\n                    <div id=\"dealTradeOrder\" className={styles.chartBox}></div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Form.create()(OnlineUser);\r\n"]},"metadata":{},"sourceType":"module"}