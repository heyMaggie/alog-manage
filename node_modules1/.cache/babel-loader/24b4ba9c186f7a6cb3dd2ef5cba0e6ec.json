{"ast":null,"code":"import \"antd/lib/input/style\";\nimport _Input from \"antd/lib/input\";\nimport \"antd/lib/auto-complete/style\";\nimport _AutoComplete from \"antd/lib/auto-complete\";\nimport _classCallCheck from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\company\\\\algo-manage\\\\src\\\\algo\\\\modules\\\\tradeStatistics\\\\pages\\\\orderDeal\\\\index.js\";\nimport React from \"react\";\nimport ChartComponent from \"@/components/ChartComponent\";\nimport SelectOption from \"@/components/SelectOption\";\nvar secArr = [{\n  key: \"0\",\n  value: \"全部\"\n}, {\n  key: \"1\",\n  value: \"买入\"\n}, {\n  key: \"2\",\n  value: \"卖出\"\n}];\n\nvar orderDeal =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(orderDeal, _React$PureComponent);\n\n  function orderDeal() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, orderDeal);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(orderDeal)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      info: {},\n      userArr: [],\n      securityArr: [] // formArr: [\n      //     {\n      //         label: \"用户名\",\n      //         id: \"userId\",\n      //         // initialValue: \"0\",\n      //         component: (\n      //             <AutoComplete\n      //                 dataSource={this.state.test}\n      //                 placeholder=\"请输入用户名\"\n      //             />\n      //         ),\n      //     },\n      //     {\n      //         label: \"股票\",\n      //         id: \"securityId\",\n      //         // initialValue: \"0\",\n      //         component: <Input placeholder=\"请输入股票\" />,\n      //     },\n      //     {\n      //         label: \"买卖方向\",\n      //         id: \"side\",\n      //         initialValue: \"0\",\n      //         component: SelectOption(secArr, { width: \"200px\" }),\n      //     },\n      // ],\n\n    };\n\n    _this.getSearchList = function (params, form) {\n      if (params.side == 0) {\n        params.side = \"\";\n      }\n\n      console.log(params);\n\n      if (params.userId != \"\" && !_this.state.userArr.includes(params.userId)) {\n        _this.state.userArr.push(params.userId);\n      }\n\n      if (params.securityId != \"\" && !_this.state.securityArr.includes(params.securityId)) {\n        _this.state.securityArr.push(params.securityId);\n      }\n\n      _this.getData(params);\n    };\n\n    _this.getData = function (params) {\n      var count = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      http.post({\n        url: \"/option/tb-exec-report/chartCount\",\n        data: params\n      }).then(function (res) {\n        // console.log(res);\n        var list = res.data;\n        var params = {\n          theme: \"light\",\n          // title: {\n          //     text: \"当前时刻总订单数：\" + count,\n          // },\n          data: list,\n          xAxis: {\n            name: \"时间\"\n          },\n          yAxis: {\n            name: \"数量\"\n          },\n          // xSeriesUnit:\"\",  //x轴单位\n          ySeriesUnit: \"股\",\n          gridRight: \"10%\" // level:[200,400,600,800,1000]\n\n        };\n        var option = getLineOption(params);\n        console.log(option);\n\n        _this.setState({\n          info: option\n        });\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(orderDeal, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getData();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var formArr = [{\n        label: \"用户名\",\n        id: \"userId\",\n        // initialValue: \"0\",\n        component: React.createElement(_AutoComplete, {\n          dataSource: this.state.userArr,\n          placeholder: \"\\u8BF7\\u8F93\\u5165\\u7528\\u6237\\u540D\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          },\n          __self: this\n        })\n      }, {\n        label: \"股票\",\n        id: \"securityId\",\n        // initialValue: \"0\",\n        component: React.createElement(_Input, {\n          placeholder: \"\\u8BF7\\u8F93\\u5165\\u80A1\\u7968\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112\n          },\n          __self: this\n        })\n      }, {\n        label: \"买卖方向\",\n        id: \"side\",\n        initialValue: \"0\",\n        component: SelectOption(secArr, {\n          width: \"200px\"\n        })\n      }];\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(ChartComponent // isShowSearchForm={false}\n      , {\n        getSearchFormFields: formArr,\n        getSearchList: this.getSearchList,\n        dataSource: this.state.info,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return orderDeal;\n}(React.PureComponent);\n\nexport { orderDeal as default };","map":{"version":3,"sources":["D:/company/algo-manage/src/algo/modules/tradeStatistics/pages/orderDeal/index.js"],"names":["React","ChartComponent","SelectOption","secArr","key","value","orderDeal","state","info","userArr","securityArr","getSearchList","params","form","side","console","log","userId","includes","push","securityId","getData","count","http","post","url","data","then","res","list","theme","xAxis","name","yAxis","ySeriesUnit","gridRight","option","getLineOption","setState","formArr","label","id","component","initialValue","width","PureComponent"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Input, AutoComplete } from \"antd\";\r\nimport ChartComponent from \"@/components/ChartComponent\";\r\nimport SelectOption from \"@/components/SelectOption\";\r\n\r\nlet secArr = [\r\n    { key: \"0\", value: \"全部\" },\r\n    { key: \"1\", value: \"买入\" },\r\n    { key: \"2\", value: \"卖出\" },\r\n];\r\nexport default class orderDeal extends React.PureComponent {\r\n    state = {\r\n        info: {},\r\n        userArr: [],\r\n        securityArr: [],\r\n        // formArr: [\r\n        //     {\r\n        //         label: \"用户名\",\r\n        //         id: \"userId\",\r\n        //         // initialValue: \"0\",\r\n        //         component: (\r\n        //             <AutoComplete\r\n        //                 dataSource={this.state.test}\r\n        //                 placeholder=\"请输入用户名\"\r\n        //             />\r\n        //         ),\r\n        //     },\r\n        //     {\r\n        //         label: \"股票\",\r\n        //         id: \"securityId\",\r\n        //         // initialValue: \"0\",\r\n        //         component: <Input placeholder=\"请输入股票\" />,\r\n        //     },\r\n        //     {\r\n        //         label: \"买卖方向\",\r\n        //         id: \"side\",\r\n        //         initialValue: \"0\",\r\n        //         component: SelectOption(secArr, { width: \"200px\" }),\r\n        //     },\r\n        // ],\r\n    };\r\n    getSearchList = (params, form) => {\r\n        if (params.side == 0) {\r\n            params.side = \"\";\r\n        }\r\n        console.log(params);\r\n        if (\r\n            params.userId != \"\" &&\r\n            !this.state.userArr.includes(params.userId)\r\n        ) {\r\n            this.state.userArr.push(params.userId);\r\n        }\r\n        if (\r\n            params.securityId != \"\" &&\r\n            !this.state.securityArr.includes(params.securityId)\r\n        ) {\r\n            this.state.securityArr.push(params.securityId);\r\n        }\r\n        this.getData(params);\r\n    };\r\n    getData = (params, count = 0) => {\r\n        http.post({\r\n            url: \"/option/tb-exec-report/chartCount\",\r\n            data: params,\r\n        }).then((res) => {\r\n            // console.log(res);\r\n            let list = res.data;\r\n            let params = {\r\n                theme: \"light\",\r\n                // title: {\r\n                //     text: \"当前时刻总订单数：\" + count,\r\n                // },\r\n                data: list,\r\n                xAxis: {\r\n                    name: \"时间\",\r\n                },\r\n                yAxis: {\r\n                    name: \"数量\",\r\n                },\r\n                // xSeriesUnit:\"\",  //x轴单位\r\n                ySeriesUnit: \"股\",\r\n                gridRight: \"10%\",\r\n                // level:[200,400,600,800,1000]\r\n            };\r\n            let option = getLineOption(params);\r\n            console.log(option);\r\n            this.setState({\r\n                info: option,\r\n            });\r\n        });\r\n    };\r\n    componentDidMount() {\r\n        this.getData();\r\n    }\r\n    render() {\r\n        let formArr = [\r\n            {\r\n                label: \"用户名\",\r\n                id: \"userId\",\r\n                // initialValue: \"0\",\r\n                component: (\r\n                    <AutoComplete\r\n                        dataSource={this.state.userArr}\r\n                        placeholder=\"请输入用户名\"\r\n                    />\r\n                ),\r\n            },\r\n            {\r\n                label: \"股票\",\r\n                id: \"securityId\",\r\n                // initialValue: \"0\",\r\n                component: <Input placeholder=\"请输入股票\" />,\r\n            },\r\n            {\r\n                label: \"买卖方向\",\r\n                id: \"side\",\r\n                initialValue: \"0\",\r\n                component: SelectOption(secArr, { width: \"200px\" }),\r\n            },\r\n        ];\r\n        return (\r\n            <div>\r\n                <ChartComponent\r\n                    // isShowSearchForm={false}\r\n                    getSearchFormFields={formArr}\r\n                    getSearchList={this.getSearchList}\r\n                    dataSource={this.state.info}\r\n                ></ChartComponent>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}