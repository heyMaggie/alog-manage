{"ast":null,"code":"import \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/form/style\";\nimport _Form from \"antd/lib/form\";\nimport _defineProperty from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport \"antd/lib/select/style\";\nimport _Select from \"antd/lib/select\";\nimport \"antd/lib/date-picker/style\";\nimport _DatePicker from \"antd/lib/date-picker\";\nvar _jsxFileName = \"D:\\\\company\\\\algo-manage\\\\src\\\\algo\\\\modules\\\\chart\\\\pages\\\\onlineUser\\\\index.js\";\nimport React from \"react\";\nimport styles from \"./style.module.less\";\nimport echarts from \"echarts\";\nvar RangePicker = _DatePicker.RangePicker;\nvar Option = _Select.Option;\n\nvar OnlineUser =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(OnlineUser, _React$PureComponent);\n\n  function OnlineUser() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, OnlineUser);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(OnlineUser)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      searchLoading: false,\n      info: [],\n      pagination: {\n        total: 0\n      },\n      username: \"\"\n    };\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n\n      _this.props.form.validateFields(function (err, values) {\n        if (!err) {\n          var noTime = values[\"pickerTime\"].length < 1;\n          var params = {\n            startTime: noTime ? \"\" : moment(values[\"pickerTime\"][0]).format(\"YYYY/MM/DD HH:mm:ss\"),\n            endTime: noTime ? \"\" : moment(values[\"pickerTime\"][1]).format(\"YYYY/MM/DD HH:mm:ss\")\n          };\n\n          _this.getData(params);\n        }\n      });\n    };\n\n    _this.getData = function (params) {\n      var count = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      http.post({\n        url: \"/session/getOnline\",\n        data: params\n      }).then(function (res) {\n        console.log(res.data, \"请求成功111\");\n\n        if (res.code == 0) {\n          var option = {\n            textStyle: {\n              color: \"#333\"\n            },\n            tooltip: {\n              trigger: \"axis\",\n              backgroundColor: \"#1F2329\",\n              boxShadow: \"0px 2px 8px 0px rgba(0, 0, 0, 0.15)\",\n              borderColor: \"#1F2329\",\n              textStyle: {\n                color: \"#fff\"\n              }\n            },\n            dataset: {\n              dimensions: [\"x\", \"y\"],\n              source: res.data\n            },\n            grid: {\n              left: \"25px\",\n              right: \"5px\",\n              bottom: \"9%\",\n              top: \"33px\",\n              containLabel: true\n            },\n            xAxis: {\n              type: \"category\",\n              boundaryGap: false,\n              splitLine: {\n                show: true,\n                lineStyle: {\n                  color: \"#E9E9E9\",\n                  type: \"dashed\"\n                }\n              },\n              axisLabel: {// interval: 0,\n                // rotate: 30,\n              },\n              axisTick: {\n                show: true,\n                //显示X轴刻度\n                lineStyle: {\n                  color: \"#E9E9E9\"\n                }\n              },\n              axisLine: {\n                // 刻度线的颜色\n                show: false\n              },\n              axisPointer: {\n                type: \"line\",\n                lineStyle: {\n                  color: \"#BDBEBF\"\n                }\n              }\n            },\n            yAxis: [_defineProperty({\n              type: \"value\",\n              name: \"单位：（个）\",\n              nameLocation: \"end\",\n              axisLine: {\n                show: false\n              },\n              nameTextStyle: {\n                color: \"#666\"\n              },\n              axisTick: {\n                show: false //隐藏X轴刻度\n\n              },\n              splitLine: {\n                show: true,\n                lineStyle: {\n                  color: \"#E9E9E9\",\n                  type: \"dashed\"\n                }\n              }\n            }, \"nameTextStyle\", {\n              padding: [0, 0, 0, 40]\n            })],\n            series: [{\n              name: \"在线人数\",\n              type: \"line\",\n              smooth: true,\n              showSymbol: false,\n              // symbol: \"circle\",\n              itemStyle: {\n                normal: {\n                  color: \"#65A6FF\"\n                }\n              },\n              areaStyle: {\n                normal: {\n                  color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\n                    offset: 0,\n                    color: \"rgba(50, 129, 255, 0.2)\"\n                  }, {\n                    offset: 1,\n                    color: \"rgba(255,255,255,0)\"\n                  }], false),\n                  shadowColor: \"rgba(0, 0, 0, 0.1)\",\n                  shadowBlur: 10\n                }\n              }\n            }] // dataZoom: [\n            //     {\n            //         type: \"inside\",\n            //     },\n            //     {\n            //         type: \"slider\",\n            //         height: \"20px\",\n            //     },\n            // ],\n\n          };\n          var myChart = echarts.init(document.getElementById(\"main3\"));\n          myChart.setOption(option);\n        } else {\n          message.error(\"服务异常\");\n        }\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(OnlineUser, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getData();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var getFieldDecorator = this.props.form.getFieldDecorator;\n\n      function onChange(value) {\n        console.log(\"selected \".concat(value));\n      }\n\n      function onSearch(val) {\n        console.log(\"search:\", val);\n      }\n\n      return React.createElement(\"div\", {\n        className: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: styles.search,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, React.createElement(_Form, {\n        layout: \"inline\",\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, React.createElement(_Form.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, getFieldDecorator(\"pickerTime\")(React.createElement(RangePicker, {\n        style: {\n          width: 432\n        },\n        showTime: true,\n        format: \"YYYY-MM-DD HH:mm:ss\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }))), React.createElement(_Form.Item, {\n        style: {\n          float: \"right\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, React.createElement(_Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        style: {\n          width: 76\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }, \"\\u786E\\u5B9A\")))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"main3\",\n        style: {\n          width: \"100%\",\n          height: \"500px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return OnlineUser;\n}(React.PureComponent);\n\nexport default _Form.create()(OnlineUser);","map":{"version":3,"sources":["D:/company/algo-manage/src/algo/modules/chart/pages/onlineUser/index.js"],"names":["React","styles","echarts","RangePicker","Option","OnlineUser","state","searchLoading","info","pagination","total","username","handleSubmit","e","preventDefault","props","form","validateFields","err","values","noTime","length","params","startTime","moment","format","endTime","getData","count","http","post","url","data","then","res","console","log","code","option","textStyle","color","tooltip","trigger","backgroundColor","boxShadow","borderColor","dataset","dimensions","source","grid","left","right","bottom","top","containLabel","xAxis","type","boundaryGap","splitLine","show","lineStyle","axisLabel","axisTick","axisLine","axisPointer","yAxis","name","nameLocation","nameTextStyle","padding","series","smooth","showSymbol","itemStyle","normal","areaStyle","graphic","LinearGradient","offset","shadowColor","shadowBlur","myChart","init","document","getElementById","setOption","message","error","getFieldDecorator","onChange","value","onSearch","val","container","search","width","float","height","PureComponent","create"],"mappings":";;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,OAAP,MAAoB,SAApB;IAGQC,W,eAAAA,W;IACAC,M,WAAAA,M;;IACFC,U;;;;;;;;;;;;;;;;;UACFC,K,GAAQ;AACJC,MAAAA,aAAa,EAAE,KADX;AAEJC,MAAAA,IAAI,EAAE,EAFF;AAGJC,MAAAA,UAAU,EAAE;AAAEC,QAAAA,KAAK,EAAE;AAAT,OAHR;AAIJC,MAAAA,QAAQ,EAAE;AAJN,K;;UAMRC,Y,GAAe,UAACC,CAAD,EAAO;AAClBA,MAAAA,CAAC,CAACC,cAAF;;AACA,YAAKC,KAAL,CAAWC,IAAX,CAAgBC,cAAhB,CAA+B,UAACC,GAAD,EAAMC,MAAN,EAAiB;AAC5C,YAAI,CAACD,GAAL,EAAU;AACN,cAAIE,MAAM,GAAGD,MAAM,CAAC,YAAD,CAAN,CAAqBE,MAArB,GAA8B,CAA3C;AACA,cAAIC,MAAM,GAAG;AACTC,YAAAA,SAAS,EAAEH,MAAM,GACX,EADW,GAEXI,MAAM,CAACL,MAAM,CAAC,YAAD,CAAN,CAAqB,CAArB,CAAD,CAAN,CAAgCM,MAAhC,CACI,qBADJ,CAHG;AAMTC,YAAAA,OAAO,EAAEN,MAAM,GACT,EADS,GAETI,MAAM,CAACL,MAAM,CAAC,YAAD,CAAN,CAAqB,CAArB,CAAD,CAAN,CAAgCM,MAAhC,CACI,qBADJ;AARG,WAAb;;AAYA,gBAAKE,OAAL,CAAaL,MAAb;AACH;AACJ,OAjBD;AAkBH,K;;UACDK,O,GAAU,UAACL,MAAD,EAAuB;AAAA,UAAdM,KAAc,uEAAN,CAAM;AAC7BC,MAAAA,IAAI,CAACC,IAAL,CAAU;AACNC,QAAAA,GAAG,EAAE,oBADC;AAENC,QAAAA,IAAI,EAAEV;AAFA,OAAV,EAGGW,IAHH,CAGQ,UAACC,GAAD,EAAS;AACbC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACF,IAAhB,EAAsB,SAAtB;;AACA,YAAIE,GAAG,CAACG,IAAJ,IAAY,CAAhB,EAAmB;AACf,cAAIC,MAAM,GAAG;AACTC,YAAAA,SAAS,EAAE;AACPC,cAAAA,KAAK,EAAE;AADA,aADF;AAITC,YAAAA,OAAO,EAAE;AACLC,cAAAA,OAAO,EAAE,MADJ;AAELC,cAAAA,eAAe,EAAE,SAFZ;AAGLC,cAAAA,SAAS,EAAE,qCAHN;AAILC,cAAAA,WAAW,EAAE,SAJR;AAKLN,cAAAA,SAAS,EAAE;AACPC,gBAAAA,KAAK,EAAE;AADA;AALN,aAJA;AAaTM,YAAAA,OAAO,EAAE;AACLC,cAAAA,UAAU,EAAE,CAAC,GAAD,EAAM,GAAN,CADP;AAELC,cAAAA,MAAM,EAAEd,GAAG,CAACF;AAFP,aAbA;AAiBTiB,YAAAA,IAAI,EAAE;AACFC,cAAAA,IAAI,EAAE,MADJ;AAEFC,cAAAA,KAAK,EAAE,KAFL;AAGFC,cAAAA,MAAM,EAAE,IAHN;AAIFC,cAAAA,GAAG,EAAE,MAJH;AAKFC,cAAAA,YAAY,EAAE;AALZ,aAjBG;AAwBTC,YAAAA,KAAK,EAAE;AACHC,cAAAA,IAAI,EAAE,UADH;AAEHC,cAAAA,WAAW,EAAE,KAFV;AAGHC,cAAAA,SAAS,EAAE;AACPC,gBAAAA,IAAI,EAAE,IADC;AAEPC,gBAAAA,SAAS,EAAE;AACPpB,kBAAAA,KAAK,EAAE,SADA;AAEPgB,kBAAAA,IAAI,EAAE;AAFC;AAFJ,eAHR;AAUHK,cAAAA,SAAS,EAAE,CACP;AACA;AAFO,eAVR;AAcHC,cAAAA,QAAQ,EAAE;AACNH,gBAAAA,IAAI,EAAE,IADA;AACM;AACZC,gBAAAA,SAAS,EAAE;AACPpB,kBAAAA,KAAK,EAAE;AADA;AAFL,eAdP;AAoBHuB,cAAAA,QAAQ,EAAE;AACN;AACAJ,gBAAAA,IAAI,EAAE;AAFA,eApBP;AAwBHK,cAAAA,WAAW,EAAE;AACTR,gBAAAA,IAAI,EAAE,MADG;AAETI,gBAAAA,SAAS,EAAE;AAAEpB,kBAAAA,KAAK,EAAE;AAAT;AAFF;AAxBV,aAxBE;AAqDTyB,YAAAA,KAAK,EAAE;AAECT,cAAAA,IAAI,EAAE,OAFP;AAGCU,cAAAA,IAAI,EAAE,QAHP;AAICC,cAAAA,YAAY,EAAE,KAJf;AAKCJ,cAAAA,QAAQ,EAAE;AACNJ,gBAAAA,IAAI,EAAE;AADA,eALX;AAQCS,cAAAA,aAAa,EAAE;AACX5B,gBAAAA,KAAK,EAAE;AADI,eARhB;AAWCsB,cAAAA,QAAQ,EAAE;AACNH,gBAAAA,IAAI,EAAE,KADA,CACO;;AADP,eAXX;AAcCD,cAAAA,SAAS,EAAE;AACPC,gBAAAA,IAAI,EAAE,IADC;AAEPC,gBAAAA,SAAS,EAAE;AACPpB,kBAAAA,KAAK,EAAE,SADA;AAEPgB,kBAAAA,IAAI,EAAE;AAFC;AAFJ;AAdZ,gCAqBgB;AACXa,cAAAA,OAAO,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,EAAV;AADE,aArBhB,EArDE;AA+ETC,YAAAA,MAAM,EAAE,CACJ;AACIJ,cAAAA,IAAI,EAAE,MADV;AAEIV,cAAAA,IAAI,EAAE,MAFV;AAGIe,cAAAA,MAAM,EAAE,IAHZ;AAIIC,cAAAA,UAAU,EAAE,KAJhB;AAKI;AACAC,cAAAA,SAAS,EAAE;AACPC,gBAAAA,MAAM,EAAE;AACJlC,kBAAAA,KAAK,EAAE;AADH;AADD,eANf;AAWImC,cAAAA,SAAS,EAAE;AACPD,gBAAAA,MAAM,EAAE;AACJlC,kBAAAA,KAAK,EAAE,IAAItC,OAAO,CAAC0E,OAAR,CAAgBC,cAApB,CACH,CADG,EAEH,CAFG,EAGH,CAHG,EAIH,CAJG,EAKH,CACI;AACIC,oBAAAA,MAAM,EAAE,CADZ;AAEItC,oBAAAA,KAAK,EAAE;AAFX,mBADJ,EAKI;AACIsC,oBAAAA,MAAM,EAAE,CADZ;AAEItC,oBAAAA,KAAK,EAAE;AAFX,mBALJ,CALG,EAeH,KAfG,CADH;AAkBJuC,kBAAAA,WAAW,EAAE,oBAlBT;AAmBJC,kBAAAA,UAAU,EAAE;AAnBR;AADD;AAXf,aADI,CA/EC,CAoHT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AA5HS,WAAb;AA8HA,cAAIC,OAAO,GAAG/E,OAAO,CAACgF,IAAR,CAAaC,QAAQ,CAACC,cAAT,CAAwB,OAAxB,CAAb,CAAd;AACAH,UAAAA,OAAO,CAACI,SAAR,CAAkB/C,MAAlB;AACH,SAjID,MAiIO;AACHgD,UAAAA,OAAO,CAACC,KAAR,CAAc,MAAd;AACH;AACJ,OAzID;AA0IH,K;;;;;;;wCACmB;AAChB,WAAK5D,OAAL;AACH;;;6BACQ;AAAA,UACG6D,iBADH,GACyB,KAAKzE,KAAL,CAAWC,IADpC,CACGwE,iBADH;;AAEL,eAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACrBvD,QAAAA,OAAO,CAACC,GAAR,oBAAwBsD,KAAxB;AACH;;AAED,eAASC,QAAT,CAAkBC,GAAlB,EAAuB;AACnBzD,QAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBwD,GAAvB;AACH;;AACD,aACI;AAAK,QAAA,SAAS,EAAE3F,MAAM,CAAC4F,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAE5F,MAAM,CAAC6F,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAM,QAAA,MAAM,EAAC,QAAb;AAAsB,QAAA,QAAQ,EAAE,KAAKlF,YAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,0BAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK4E,iBAAiB,CAAC,YAAD,CAAjB,CACG,oBAAC,WAAD;AACI,QAAA,KAAK,EAAE;AAAEO,UAAAA,KAAK,EAAE;AAAT,SADX;AAEI,QAAA,QAAQ,MAFZ;AAGI,QAAA,MAAM,EAAC,qBAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADH,CADL,CADJ,EAUI,0BAAM,IAAN;AAAW,QAAA,KAAK,EAAE;AAAEC,UAAAA,KAAK,EAAE;AAAT,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AACI,QAAA,IAAI,EAAC,SADT;AAEI,QAAA,QAAQ,EAAC,QAFb;AAGI,QAAA,KAAK,EAAE;AAAED,UAAAA,KAAK,EAAE;AAAT,SAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,CAVJ,CADJ,CADJ,EAuBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AACI,QAAA,EAAE,EAAC,OADP;AAEI,QAAA,KAAK,EAAE;AAAEA,UAAAA,KAAK,EAAE,MAAT;AAAiBE,UAAAA,MAAM,EAAE;AAAzB,SAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CAvBJ,CADJ;AAgCH;;;;EApNoBjG,KAAK,CAACkG,a;;AAsN/B,eAAe,MAAKC,MAAL,GAAc9F,UAAd,CAAf","sourcesContent":["import React from \"react\";\r\nimport styles from \"./style.module.less\";\r\nimport echarts from \"echarts\";\r\nimport { TimePicker, Form, Button, Icon, DatePicker, Select } from \"antd\";\r\n\r\nconst { RangePicker } = DatePicker;\r\nconst { Option } = Select;\r\nclass OnlineUser extends React.PureComponent {\r\n    state = {\r\n        searchLoading: false,\r\n        info: [],\r\n        pagination: { total: 0 },\r\n        username: \"\",\r\n    };\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.form.validateFields((err, values) => {\r\n            if (!err) {\r\n                let noTime = values[\"pickerTime\"].length < 1;\r\n                let params = {\r\n                    startTime: noTime\r\n                        ? \"\"\r\n                        : moment(values[\"pickerTime\"][0]).format(\r\n                              \"YYYY/MM/DD HH:mm:ss\"\r\n                          ),\r\n                    endTime: noTime\r\n                        ? \"\"\r\n                        : moment(values[\"pickerTime\"][1]).format(\r\n                              \"YYYY/MM/DD HH:mm:ss\"\r\n                          ),\r\n                };\r\n                this.getData(params);\r\n            }\r\n        });\r\n    };\r\n    getData = (params, count = 0) => {\r\n        http.post({\r\n            url: \"/session/getOnline\",\r\n            data: params,\r\n        }).then((res) => {\r\n            console.log(res.data, \"请求成功111\");\r\n            if (res.code == 0) {\r\n                let option = {\r\n                    textStyle: {\r\n                        color: \"#333\",\r\n                    },\r\n                    tooltip: {\r\n                        trigger: \"axis\",\r\n                        backgroundColor: \"#1F2329\",\r\n                        boxShadow: \"0px 2px 8px 0px rgba(0, 0, 0, 0.15)\",\r\n                        borderColor: \"#1F2329\",\r\n                        textStyle: {\r\n                            color: \"#fff\",\r\n                        },\r\n                    },\r\n                    dataset: {\r\n                        dimensions: [\"x\", \"y\"],\r\n                        source: res.data,\r\n                    },\r\n                    grid: {\r\n                        left: \"25px\",\r\n                        right: \"5px\",\r\n                        bottom: \"9%\",\r\n                        top: \"33px\",\r\n                        containLabel: true,\r\n                    },\r\n                    xAxis: {\r\n                        type: \"category\",\r\n                        boundaryGap: false,\r\n                        splitLine: {\r\n                            show: true,\r\n                            lineStyle: {\r\n                                color: \"#E9E9E9\",\r\n                                type: \"dashed\",\r\n                            },\r\n                        },\r\n                        axisLabel: {\r\n                            // interval: 0,\r\n                            // rotate: 30,\r\n                        },\r\n                        axisTick: {\r\n                            show: true, //显示X轴刻度\r\n                            lineStyle: {\r\n                                color: \"#E9E9E9\",\r\n                            },\r\n                        },\r\n                        axisLine: {\r\n                            // 刻度线的颜色\r\n                            show: false,\r\n                        },\r\n                        axisPointer: {\r\n                            type: \"line\",\r\n                            lineStyle: { color: \"#BDBEBF\" },\r\n                        },\r\n                    },\r\n                    yAxis: [\r\n                        {\r\n                            type: \"value\",\r\n                            name: \"单位：（个）\",\r\n                            nameLocation: \"end\",\r\n                            axisLine: {\r\n                                show: false,\r\n                            },\r\n                            nameTextStyle: {\r\n                                color: \"#666\",\r\n                            },\r\n                            axisTick: {\r\n                                show: false, //隐藏X轴刻度\r\n                            },\r\n                            splitLine: {\r\n                                show: true,\r\n                                lineStyle: {\r\n                                    color: \"#E9E9E9\",\r\n                                    type: \"dashed\",\r\n                                },\r\n                            },\r\n                            nameTextStyle: {\r\n                                padding: [0, 0, 0, 40],\r\n                            },\r\n                        },\r\n                    ],\r\n                    series: [\r\n                        {\r\n                            name: \"在线人数\",\r\n                            type: \"line\",\r\n                            smooth: true,\r\n                            showSymbol: false,\r\n                            // symbol: \"circle\",\r\n                            itemStyle: {\r\n                                normal: {\r\n                                    color: \"#65A6FF\",\r\n                                },\r\n                            },\r\n                            areaStyle: {\r\n                                normal: {\r\n                                    color: new echarts.graphic.LinearGradient(\r\n                                        0,\r\n                                        0,\r\n                                        0,\r\n                                        1,\r\n                                        [\r\n                                            {\r\n                                                offset: 0,\r\n                                                color: \"rgba(50, 129, 255, 0.2)\",\r\n                                            },\r\n                                            {\r\n                                                offset: 1,\r\n                                                color: \"rgba(255,255,255,0)\",\r\n                                            },\r\n                                        ],\r\n                                        false\r\n                                    ),\r\n                                    shadowColor: \"rgba(0, 0, 0, 0.1)\",\r\n                                    shadowBlur: 10,\r\n                                },\r\n                            },\r\n                        },\r\n                    ],\r\n                    // dataZoom: [\r\n                    //     {\r\n                    //         type: \"inside\",\r\n                    //     },\r\n                    //     {\r\n                    //         type: \"slider\",\r\n                    //         height: \"20px\",\r\n                    //     },\r\n                    // ],\r\n                };\r\n                var myChart = echarts.init(document.getElementById(\"main3\"));\r\n                myChart.setOption(option);\r\n            } else {\r\n                message.error(\"服务异常\");\r\n            }\r\n        });\r\n    };\r\n    componentDidMount() {\r\n        this.getData();\r\n    }\r\n    render() {\r\n        const { getFieldDecorator } = this.props.form;\r\n        function onChange(value) {\r\n            console.log(`selected ${value}`);\r\n        }\r\n\r\n        function onSearch(val) {\r\n            console.log(\"search:\", val);\r\n        }\r\n        return (\r\n            <div className={styles.container}>\r\n                <div className={styles.search}>\r\n                    <Form layout=\"inline\" onSubmit={this.handleSubmit}>\r\n                        <Form.Item>\r\n                            {getFieldDecorator(\"pickerTime\")(\r\n                                <RangePicker\r\n                                    style={{ width: 432 }}\r\n                                    showTime\r\n                                    format=\"YYYY-MM-DD HH:mm:ss\"\r\n                                />\r\n                            )}\r\n                        </Form.Item>\r\n                        <Form.Item style={{ float: \"right\" }}>\r\n                            <Button\r\n                                type=\"primary\"\r\n                                htmlType=\"submit\"\r\n                                style={{ width: 76 }}\r\n                            >\r\n                                确定\r\n                            </Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </div>\r\n                <div>\r\n                    <div\r\n                        id=\"main3\"\r\n                        style={{ width: \"100%\", height: \"500px\" }}\r\n                    ></div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Form.create()(OnlineUser);\r\n"]},"metadata":{},"sourceType":"module"}