{"ast":null,"code":"import _classCallCheck from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _defineProperty from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport \"antd/lib/input/style\";\nimport _Input from \"antd/lib/input\";\nvar _jsxFileName = \"D:\\\\company\\\\algo-manage\\\\src\\\\algo\\\\modules\\\\manage\\\\pages\\\\basketConfig\\\\index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport CurdComponent from \"@/components/CurdComponent\";\nimport SelectOption from \"@/components/SelectOption\";\n\nvar columns = function columns(params) {\n  return [{\n    title: \"用户名称\",\n    dataIndex: \"userName\",\n    width: 100\n  }, {\n    title: \"篮子ID\",\n    dataIndex: \"id\"\n  }, {\n    title: \"篮子名称\",\n    dataIndex: \"basketName\",\n    width: 200\n  }, {\n    title: \"篮子描述\",\n    dataIndex: \"remarks\",\n    width: 200\n  }, {\n    title: \"篮子类型\",\n    dataIndex: \"basketType\",\n    width: 120\n  }, {\n    title: \"篮子状态\",\n    dataIndex: \"status\",\n    width: 150\n  }, {\n    title: \"篮子参数\",\n    dataIndex: \"basketParam\",\n    width: 200\n  }, {\n    title: \"开始时间\",\n    dataIndex: \"startTime\",\n    width: 100\n  }, {\n    title: \"结束时间\",\n    dataIndex: \"endTime\",\n    width: 100\n  }, {\n    title: \"包含的母单数\",\n    dataIndex: \"basketNum\"\n  }, {\n    title: \"算法类型\",\n    dataIndex: \"algorithmType\"\n  }, {\n    title: \"算法ID\",\n    dataIndex: \"algorithmId\"\n  }, {\n    title: \"请求用户ID\",\n    dataIndex: \"reqUserId\"\n  }, {\n    title: \"错误码\",\n    dataIndex: \"errorCode\",\n    width: 100\n  }, {\n    title: \"错误信息\",\n    dataIndex: \"errorMsg\"\n  }, {\n    title: \"客户端序列号\",\n    dataIndex: \"seq\",\n    width: 150\n  }, {\n    title: \"成交记录ID\",\n    dataIndex: \"version\"\n  }, {\n    title: \"更新时间\",\n    dataIndex: \"updateTime\",\n    key: \"updateTime\",\n    width: 180\n  }];\n};\n\nvar getSearchFormFields = function getSearchFormFields() {\n  var _ref;\n\n  return [{\n    label: \"用户名称\",\n    // label: <span>用&nbsp;&nbsp;户&nbsp;ID</span>,\n    id: \"userName\",\n    component: React.createElement(_Input, {\n      placeholder: \"\\u8BF7\\u8F93\\u5165\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    })\n  }, (_ref = {\n    label: \"篮子ID\"\n  }, _defineProperty(_ref, \"label\", React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, \"\\u7BEE\\xA0\\xA0\\u5B50\\xA0ID\")), _defineProperty(_ref, \"id\", \"id\"), _defineProperty(_ref, \"component\", React.createElement(_Input, {\n    placeholder: \"\\u8BF7\\u8F93\\u5165\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  })), _ref), {\n    label: \"篮子名称\",\n    id: \"basketName\",\n    initialValue: \"\",\n    component: React.createElement(_Input, {\n      placeholder: \"\\u8BF7\\u8F93\\u5165\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    })\n  }, {\n    label: \"业务类型\",\n    id: \"type\",\n    initialValue: \"1\",\n    component: SelectOption(dict.businessTypeSelect, {\n      placeholder: \"请选择\" // allowClear: true,\n\n    })\n  }];\n};\n\nvar uoeSetting =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(uoeSetting, _React$PureComponent);\n\n  function uoeSetting() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, uoeSetting);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(uoeSetting)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      searchLoading: false,\n      selectRow: [],\n      info: [],\n      pagination: {\n        total: 0\n      }\n    };\n\n    _this.handleTableChange = function (selectedRowKeys) {\n      console.log(\"批量选择\");\n\n      _this.setState({\n        selectRow: selectedRowKeys\n      });\n    };\n\n    _this.handleInsertRecord = function (params) {\n      console.log(params);\n    };\n\n    _this.handleUpdateRecord = function (_ref2) {\n      var form = _ref2.form;\n      console.log(form.getFieldsValue()); // return;\n\n      var params = form.getFieldsValue();\n      params.name = _this.record.name;\n      http.post({\n        url: \"/option/tcp/uoeMore/1011\",\n        data: params\n      }).then(function (res) {\n        console.log(res);\n        message.success(res.msg);\n        _this.isAction = true;\n\n        _this.getData();\n      });\n    };\n\n    _this.handleDeleteRecord = function (record) {\n      console.log(\"删除记录 \", record);\n    };\n\n    _this.setUpdateModal = function (_ref3) {\n      var form = _ref3.form,\n          record = _ref3.record;\n      // console.log(record, form);\n      _this.record = record;\n      form.setFieldsValue({\n        switchId: record.switchId,\n        ip: record.ip,\n        mask: record.mask,\n        mac: record.mac,\n        gateway: record.gateway,\n        enable: record.enable + \"\"\n      });\n    };\n\n    _this.getData = function () {\n      var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var pagination = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n        current: 1,\n        pageSize: 13\n      };\n      // params.token = \"\";\n      params = _objectSpread({}, params, {\n        pageId: pagination.current,\n        pageNum: pagination.pageSize\n      });\n      console.log(params);\n\n      if (params.type) {\n        params.type = params.type / 1;\n      } else {\n        params.type = 1;\n      }\n\n      console.log(params);\n      http.post({\n        url: \"/basket-info/list\",\n        data: params\n      }).then(function (res) {\n        console.log(res); // //解析数据字典\n        // if (res.data.length > 0) {\n        //     parseArrDict(res.data, \"status\", \"basketStatus\");\n        //     parseDict(res.data);\n        //     // showTip(this);\n        // } else {\n        //     message.info(\"查询结果为空\");\n        // }\n        // this.setState({\n        //     info: res.data,\n        // });\n\n        if (res.data.records && res.data.records.length > 0) {\n          parseArrDict(res.data.records, \"status\", \"basketStatus\");\n          parseDict(res.data.records); // parseDictValue(res.data.records);\n          // showTip(this);\n        } else {\n          message.info(\"查询结果为空\");\n        }\n\n        var pgn = {\n          current: res.data.current,\n          pageSize: pagination.pageSize,\n          total: res.data.total || 0\n        };\n\n        _this.setState({\n          info: res.data.records,\n          pagination: pgn\n        });\n      });\n    };\n\n    _this.handleSearch = function (params, pagination) {\n      _this.getData(params, pagination);\n    };\n\n    return _this;\n  }\n\n  _createClass(uoeSetting, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getData();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var scroll = {\n        x: 2600,\n        y: 445\n      };\n      var info = this.state.info; //批量\n      // let { selectRow } = this.state;\n      // const rowSelection = {\n      //     selectRow,\n      //     onChange: this.handleTableChange,\n      // };\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }, React.createElement(CurdComponent // rowKey={\"index\"}\n      // btnText2=\"查全部\"\n      // isShowSearchForm={false}\n      , {\n        onSearchClick: this.handleSearch,\n        getSearchFormFields: getSearchFormFields // searchLoading={this.state.searchLoading}\n        // insertBtnText={\"新增UOE配置\"} // 不传 就没新增按钮\n        // getInsertFormFields={getInsertFormFields}\n        // insertRecord={this.handleInsertRecord}\n        // col=\"2\"\n        ,\n        width: \"600px\" // getUpdateFormFields={getUpdateFormFields}\n        // setUpdateModal={this.setUpdateModal}\n        // updateRecord={this.handleUpdateRecord} // 不传 就没编辑\n        // deleteRecord={this.handleDeleteRecord} // 不传 就没删除\n        // dtCol={2}\n        ,\n        dtWidth: \"800px\",\n        pagination: this.state.pagination,\n        dtColumns: columns() //详情列表\n        ,\n        centered: true,\n        columns: columns,\n        dataSource: info,\n        scroll: scroll // rowSelection={rowSelection} //批量选择 操作\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        urlPrefix: \"/basket-info\",\n        noUpload: true,\n        title: \"\\u7BEE\\u5B50\\u7BA1\\u7406\",\n        sucCallback: this.getData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return uoeSetting;\n}(React.PureComponent);\n\nexport { uoeSetting as default };","map":{"version":3,"sources":["D:/company/algo-manage/src/algo/modules/manage/pages/basketConfig/index.js"],"names":["React","CurdComponent","SelectOption","columns","params","title","dataIndex","width","key","getSearchFormFields","label","id","component","initialValue","dict","businessTypeSelect","placeholder","uoeSetting","state","searchLoading","selectRow","info","pagination","total","handleTableChange","selectedRowKeys","console","log","setState","handleInsertRecord","handleUpdateRecord","form","getFieldsValue","name","record","http","post","url","data","then","res","message","success","msg","isAction","getData","handleDeleteRecord","setUpdateModal","setFieldsValue","switchId","ip","mask","mac","gateway","enable","current","pageSize","pageId","pageNum","type","records","length","parseArrDict","parseDict","pgn","handleSearch","scroll","x","y","PureComponent"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport CurdComponent from \"@/components/CurdComponent\";\r\nimport SelectOption from \"@/components/SelectOption\";\r\nimport { Input } from \"antd\";\r\n\r\nconst columns = (params) => {\r\n    return [\r\n        {\r\n            title: \"用户名称\",\r\n            dataIndex: \"userName\",\r\n            width: 100,\r\n        },\r\n        {\r\n            title: \"篮子ID\",\r\n            dataIndex: \"id\",\r\n        },\r\n        {\r\n            title: \"篮子名称\",\r\n            dataIndex: \"basketName\",\r\n            width: 200,\r\n        },\r\n        {\r\n            title: \"篮子描述\",\r\n            dataIndex: \"remarks\",\r\n            width: 200,\r\n        },\r\n        {\r\n            title: \"篮子类型\",\r\n            dataIndex: \"basketType\",\r\n            width: 120,\r\n        },\r\n        {\r\n            title: \"篮子状态\",\r\n            dataIndex: \"status\",\r\n            width: 150,\r\n        },\r\n        {\r\n            title: \"篮子参数\",\r\n            dataIndex: \"basketParam\",\r\n            width: 200,\r\n        },\r\n        {\r\n            title: \"开始时间\",\r\n            dataIndex: \"startTime\",\r\n            width: 100,\r\n        },\r\n        {\r\n            title: \"结束时间\",\r\n            dataIndex: \"endTime\",\r\n            width: 100,\r\n        },\r\n        {\r\n            title: \"包含的母单数\",\r\n            dataIndex: \"basketNum\",\r\n        },\r\n        {\r\n            title: \"算法类型\",\r\n            dataIndex: \"algorithmType\",\r\n        },\r\n        {\r\n            title: \"算法ID\",\r\n            dataIndex: \"algorithmId\",\r\n        },\r\n\r\n        {\r\n            title: \"请求用户ID\",\r\n            dataIndex: \"reqUserId\",\r\n        },\r\n        {\r\n            title: \"错误码\",\r\n            dataIndex: \"errorCode\",\r\n            width: 100,\r\n        },\r\n        {\r\n            title: \"错误信息\",\r\n            dataIndex: \"errorMsg\",\r\n        },\r\n        {\r\n            title: \"客户端序列号\",\r\n            dataIndex: \"seq\",\r\n            width: 150,\r\n        },\r\n        {\r\n            title: \"成交记录ID\",\r\n            dataIndex: \"version\",\r\n        },\r\n        {\r\n            title: \"更新时间\",\r\n            dataIndex: \"updateTime\",\r\n            key: \"updateTime\",\r\n            width: 180,\r\n        },\r\n    ];\r\n};\r\nconst getSearchFormFields = () => {\r\n    return [\r\n        {\r\n            label: \"用户名称\",\r\n            // label: <span>用&nbsp;&nbsp;户&nbsp;ID</span>,\r\n            id: \"userName\",\r\n            component: <Input placeholder=\"请输入\" />,\r\n        },\r\n        {\r\n            label: \"篮子ID\",\r\n            label: <span>篮&nbsp;&nbsp;子&nbsp;ID</span>,\r\n            id: \"id\",\r\n            component: <Input placeholder=\"请输入\" />,\r\n        },\r\n        {\r\n            label: \"篮子名称\",\r\n            id: \"basketName\",\r\n            initialValue: \"\",\r\n            component: <Input placeholder=\"请输入\" />,\r\n        },\r\n        {\r\n            label: \"业务类型\",\r\n            id: \"type\",\r\n            initialValue: \"1\",\r\n            component: SelectOption(dict.businessTypeSelect, {\r\n                placeholder: \"请选择\",\r\n                // allowClear: true,\r\n            }),\r\n        },\r\n    ];\r\n};\r\nexport default class uoeSetting extends React.PureComponent {\r\n    state = {\r\n        searchLoading: false,\r\n        selectRow: [],\r\n        info: [],\r\n        pagination: { total: 0 },\r\n    };\r\n    //批量选择\r\n    handleTableChange = (selectedRowKeys) => {\r\n        console.log(\"批量选择\");\r\n        this.setState({\r\n            selectRow: selectedRowKeys,\r\n        });\r\n    };\r\n\r\n    handleInsertRecord = (params) => {\r\n        console.log(params);\r\n    };\r\n    //更新记录\r\n    handleUpdateRecord = ({ form }) => {\r\n        console.log(form.getFieldsValue());\r\n        // return;\r\n        let params = form.getFieldsValue();\r\n        params.name = this.record.name;\r\n        http.post({\r\n            url: \"/option/tcp/uoeMore/1011\",\r\n            data: params,\r\n        }).then((res) => {\r\n            console.log(res);\r\n            message.success(res.msg);\r\n            this.isAction = true;\r\n            this.getData();\r\n        });\r\n    };\r\n    //删除记录\r\n    handleDeleteRecord = (record) => {\r\n        console.log(\"删除记录 \", record);\r\n    };\r\n    //填入更新数据\r\n    setUpdateModal = ({ form, record }) => {\r\n        // console.log(record, form);\r\n        this.record = record;\r\n        form.setFieldsValue({\r\n            switchId: record.switchId,\r\n            ip: record.ip,\r\n            mask: record.mask,\r\n            mac: record.mac,\r\n            gateway: record.gateway,\r\n            enable: record.enable + \"\",\r\n        });\r\n    };\r\n    getData = (params = {}, pagination = { current: 1, pageSize: 13 }) => {\r\n        // params.token = \"\";\r\n        params = {\r\n            ...params,\r\n            pageId: pagination.current,\r\n            pageNum: pagination.pageSize,\r\n        };\r\n        console.log(params);\r\n        if (params.type) {\r\n            params.type = params.type / 1;\r\n        } else {\r\n            params.type = 1;\r\n        }\r\n        console.log(params);\r\n        http.post({\r\n            url: \"/basket-info/list\",\r\n            data: params,\r\n        }).then((res) => {\r\n            console.log(res);\r\n            // //解析数据字典\r\n            // if (res.data.length > 0) {\r\n            //     parseArrDict(res.data, \"status\", \"basketStatus\");\r\n            //     parseDict(res.data);\r\n            //     // showTip(this);\r\n            // } else {\r\n            //     message.info(\"查询结果为空\");\r\n            // }\r\n            // this.setState({\r\n            //     info: res.data,\r\n            // });\r\n            if (res.data.records && res.data.records.length > 0) {\r\n                parseArrDict(res.data.records, \"status\", \"basketStatus\");\r\n                parseDict(res.data.records);\r\n                // parseDictValue(res.data.records);\r\n                // showTip(this);\r\n            } else {\r\n                message.info(\"查询结果为空\");\r\n            }\r\n            let pgn = {\r\n                current: res.data.current,\r\n                pageSize: pagination.pageSize,\r\n                total: res.data.total || 0,\r\n            };\r\n            this.setState({\r\n                info: res.data.records,\r\n                pagination: pgn,\r\n            });\r\n        });\r\n    };\r\n    handleSearch = (params, pagination) => {\r\n        this.getData(params, pagination);\r\n    };\r\n    componentDidMount() {\r\n        this.getData();\r\n    }\r\n    render() {\r\n        let scroll = { x: 2600, y: 445 };\r\n        let info = this.state.info;\r\n        //批量\r\n        // let { selectRow } = this.state;\r\n        // const rowSelection = {\r\n        //     selectRow,\r\n        //     onChange: this.handleTableChange,\r\n        // };\r\n        return (\r\n            <div>\r\n                <CurdComponent\r\n                    // rowKey={\"index\"}\r\n                    // btnText2=\"查全部\"\r\n                    // isShowSearchForm={false}\r\n                    onSearchClick={this.handleSearch}\r\n                    getSearchFormFields={getSearchFormFields}\r\n                    // searchLoading={this.state.searchLoading}\r\n                    // insertBtnText={\"新增UOE配置\"} // 不传 就没新增按钮\r\n                    // getInsertFormFields={getInsertFormFields}\r\n                    // insertRecord={this.handleInsertRecord}\r\n                    // col=\"2\"\r\n                    width=\"600px\"\r\n                    // getUpdateFormFields={getUpdateFormFields}\r\n                    // setUpdateModal={this.setUpdateModal}\r\n                    // updateRecord={this.handleUpdateRecord} // 不传 就没编辑\r\n                    // deleteRecord={this.handleDeleteRecord} // 不传 就没删除\r\n                    // dtCol={2}\r\n                    dtWidth=\"800px\"\r\n                    pagination={this.state.pagination}\r\n                    dtColumns={columns()} //详情列表\r\n                    centered={true}\r\n                    columns={columns}\r\n                    dataSource={info}\r\n                    scroll={scroll}\r\n                    // rowSelection={rowSelection} //批量选择 操作\r\n                >\r\n                    <div\r\n                        urlPrefix=\"/basket-info\"\r\n                        noUpload={true}\r\n                        title=\"篮子管理\"\r\n                        sucCallback={this.getData}\r\n                    ></div>\r\n                </CurdComponent>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}