{"ast":null,"code":"import \"antd/lib/form/style\";\nimport _Form from \"antd/lib/form\";\nimport _defineProperty from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport \"antd/lib/message/style\";\nimport _message from \"antd/lib/message\";\nimport _classCallCheck from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport \"antd/lib/input/style\";\nimport _Input from \"antd/lib/input\";\nvar _jsxFileName = \"D:\\\\company\\\\algo-manage\\\\src\\\\algo\\\\modules\\\\manage\\\\pages\\\\fileOrder\\\\index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport CurdComponent from \"@/components/CurdComponent\";\nimport SelectOption from \"@/components/SelectOption\";\nimport Table from \"@/components/Table\";\n\nvar getSearchFormFields = function getSearchFormFields() {\n  return [{\n    label: \"文件类型\",\n    id: \"fileType\",\n    component: React.createElement(_Input, {\n      placeholder: \"\\u8BF7\\u8F93\\u5165\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    })\n  }, {\n    label: \"用户ID\",\n    id: \"userId\",\n    component: React.createElement(_Input, {\n      placeholder: \"\\u8BF7\\u8F93\\u5165\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    })\n  }];\n};\n\nvar FileOrder =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(FileOrder, _React$PureComponent);\n\n  function FileOrder() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, FileOrder);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(FileOrder)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.columns = function (params) {\n      return [{\n        title: \"用户ID\",\n        dataIndex: \"userId\"\n      }, {\n        title: \"文件名\",\n        dataIndex: \"fileName\"\n      }, {\n        title: \"创建时间\",\n        dataIndex: \"createTime\"\n      }, {\n        title: \"错误信息\",\n        dataIndex: \"errCode\"\n      }, {\n        title: \"下载\",\n        key: \"operation\",\n        fixed: \"right\",\n        width: 100,\n        render: function render(text, record) {\n          return React.createElement(\"a\", {\n            onClick: function onClick(e) {\n              _this.handleUpdateBtn(record);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 47\n            },\n            __self: this\n          }, \"\\u4E0B\\u8F7D\");\n        }\n      }];\n    };\n\n    _this.state = {\n      searchLoading: false,\n      selectedRowKeys: [],\n      info: [],\n      updateArr: [],\n      updateModalVisible: false\n    };\n\n    _this.getCounterInfo = function () {\n      var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      params.businessType = _this.record.businessType;\n      http.post({\n        url: \"/counter-info/listAll\",\n        data: params\n      }).then(function (res) {\n        console.log(\"柜台信息\", res); //解析数据字典\n\n        if (res.data.length > 0) {\n          parseDict(res.data); // // showTip(this);\n\n          _this.setState({\n            updateModalVisible: true,\n            selectedRowKeys: [_this.record.counterGwId]\n          }, function () {\n            _this.setState({\n              updateArr: res.data\n            }, function () {\n              _this.refs.counterTable.querySelector(\".ant-table-body\").style.height = \"600px\";\n            });\n          });\n        } else {\n          _message.info(\"柜台用户信息查询结果为空\");\n        }\n      }).catch(function (e) {\n        _message.error(\"柜台用户信息查询失败\");\n      });\n    };\n\n    _this.handleUpdateBtn = function (record) {\n      console.log(\"下载按钮\", record);\n      _this.record = record; // this.getCounterInfo();\n    };\n\n    _this.getData = function () {\n      var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var pagination = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n        current: 1,\n        pageSize: 11\n      };\n      params = _objectSpread({}, params, {\n        pageId: pagination.current,\n        pageNum: pagination.pageSize\n      }); // params.token = \"\";\n\n      http.post({\n        url: \"/counter-user-info/list\",\n        data: params\n      }).then(function (res) {\n        console.log(res); //解析数据字典\n\n        if (res.data.records && res.data.records.length > 0) {\n          // parseDict(res.data);\n          parseDictValue(res.data.records); // showTip(this);\n        } else {\n          _message.info(\"查询结果为空\");\n        }\n\n        var pgn = {\n          current: res.data.current,\n          pageSize: pagination.pageSize,\n          total: res.data.total || 0\n        };\n\n        _this.setState({\n          info: res.data.records,\n          pagination: pgn\n        });\n      });\n    };\n\n    _this.handleSearch = function (params, pagination) {\n      _this.searchParam = params;\n\n      _this.getData(params, pagination);\n    };\n\n    return _this;\n  }\n\n  _createClass(FileOrder, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getData();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var scroll = {\n        x: 1000,\n        y: 445\n      };\n      var info = this.state.info;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, React.createElement(CurdComponent // rowKey={\"index\"}\n      // btnText2=\"查全部\"\n      // isShowSearchForm={false}\n      , {\n        onSearchClick: this.handleSearch,\n        getSearchFormFields: getSearchFormFields // searchLoading={this.state.searchLoading}\n        // insertBtnText={\"新增\"} // 不传 就没新增按钮\n        // getInsertFormFields={getInsertFormFields}\n        // insertRecord={this.handleInsertRecord}\n        // col=\"2\"\n        ,\n        width: \"600px\",\n        pagination: this.state.pagination,\n        centered: true,\n        columns: this.columns,\n        dataSource: info,\n        scroll: scroll,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        urlPrefix: \"/counter-user-info\",\n        title: \"\\u67DC\\u53F0\\u7528\\u623722\",\n        sucCallback: this.getData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return FileOrder;\n}(React.PureComponent);\n\nexport default _Form.create()(FileOrder);","map":{"version":3,"sources":["D:/company/algo-manage/src/algo/modules/manage/pages/fileOrder/index.js"],"names":["React","CurdComponent","SelectOption","Table","getSearchFormFields","label","id","component","FileOrder","columns","params","title","dataIndex","key","fixed","width","render","text","record","e","handleUpdateBtn","state","searchLoading","selectedRowKeys","info","updateArr","updateModalVisible","getCounterInfo","businessType","http","post","url","data","then","res","console","log","length","parseDict","setState","counterGwId","refs","counterTable","querySelector","style","height","catch","error","getData","pagination","current","pageSize","pageId","pageNum","records","parseDictValue","pgn","total","handleSearch","searchParam","scroll","x","y","PureComponent","create"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport CurdComponent from \"@/components/CurdComponent\";\r\nimport SelectOption from \"@/components/SelectOption\";\r\nimport { Input, Modal, Form, message, Icon, Tooltip } from \"antd\";\r\nimport Table from \"@/components/Table\";\r\n\r\nlet getSearchFormFields = () => {\r\n    return [\r\n        {\r\n            label: \"文件类型\",\r\n            id: \"fileType\",\r\n            component: <Input placeholder=\"请输入\" />,\r\n        },\r\n        {\r\n            label: \"用户ID\",\r\n            id: \"userId\",\r\n            component: <Input placeholder=\"请输入\" />,\r\n        },\r\n    ];\r\n};\r\n\r\nclass FileOrder extends React.PureComponent {\r\n    columns = (params) => {\r\n        return [\r\n            {\r\n                title: \"用户ID\",\r\n                dataIndex: \"userId\",\r\n            },\r\n            {\r\n                title: \"文件名\",\r\n                dataIndex: \"fileName\",\r\n            },\r\n            {\r\n                title: \"创建时间\",\r\n                dataIndex: \"createTime\",\r\n            },\r\n            {\r\n                title: \"错误信息\",\r\n                dataIndex: \"errCode\",\r\n            },\r\n            {\r\n                title: \"下载\",\r\n                key: \"operation\",\r\n                fixed: \"right\",\r\n                width: 100,\r\n                render: (text, record) => (\r\n                    <a\r\n                        onClick={(e) => {\r\n                            this.handleUpdateBtn(record);\r\n                        }}\r\n                    >\r\n                        下载\r\n                    </a>\r\n                ),\r\n            },\r\n        ];\r\n    };\r\n\r\n    state = {\r\n        searchLoading: false,\r\n        selectedRowKeys: [],\r\n        info: [],\r\n        updateArr: [],\r\n        updateModalVisible: false,\r\n    };\r\n\r\n    getCounterInfo = (params = {}) => {\r\n        params.businessType = this.record.businessType;\r\n        http.post({\r\n            url: \"/counter-info/listAll\",\r\n            data: params,\r\n        })\r\n            .then((res) => {\r\n                console.log(\"柜台信息\", res);\r\n                //解析数据字典\r\n                if (res.data.length > 0) {\r\n                    parseDict(res.data);\r\n                    // // showTip(this);\r\n                    this.setState(\r\n                        {\r\n                            updateModalVisible: true,\r\n                            selectedRowKeys: [this.record.counterGwId],\r\n                        },\r\n                        () => {\r\n                            this.setState(\r\n                                {\r\n                                    updateArr: res.data,\r\n                                },\r\n                                () => {\r\n                                    this.refs.counterTable.querySelector(\r\n                                        \".ant-table-body\"\r\n                                    ).style.height = \"600px\";\r\n                                }\r\n                            );\r\n                        }\r\n                    );\r\n                } else {\r\n                    message.info(\"柜台用户信息查询结果为空\");\r\n                }\r\n            })\r\n            .catch((e) => {\r\n                message.error(\"柜台用户信息查询失败\");\r\n            });\r\n    };\r\n    // 下载按钮点击事件\r\n    handleUpdateBtn = (record) => {\r\n        console.log(\"下载按钮\", record);\r\n        this.record = record;\r\n        // this.getCounterInfo();\r\n    };\r\n\r\n    getData = (params = {}, pagination = { current: 1, pageSize: 11 }) => {\r\n        params = {\r\n            ...params,\r\n            pageId: pagination.current,\r\n            pageNum: pagination.pageSize,\r\n        };\r\n        // params.token = \"\";\r\n        http.post({\r\n            url: \"/counter-user-info/list\",\r\n            data: params,\r\n        }).then((res) => {\r\n            console.log(res);\r\n            //解析数据字典\r\n            if (res.data.records && res.data.records.length > 0) {\r\n                // parseDict(res.data);\r\n                parseDictValue(res.data.records);\r\n                // showTip(this);\r\n            } else {\r\n                message.info(\"查询结果为空\");\r\n            }\r\n            let pgn = {\r\n                current: res.data.current,\r\n                pageSize: pagination.pageSize,\r\n                total: res.data.total || 0,\r\n            };\r\n            this.setState({\r\n                info: res.data.records,\r\n                pagination: pgn,\r\n            });\r\n        });\r\n    };\r\n    handleSearch = (params, pagination) => {\r\n        this.searchParam = params;\r\n        this.getData(params, pagination);\r\n    };\r\n    componentDidMount() {\r\n        this.getData();\r\n    }\r\n    render() {\r\n        let scroll = { x: 1000, y: 445 };\r\n        let info = this.state.info;\r\n\r\n        return (\r\n            <div>\r\n                <CurdComponent\r\n                    // rowKey={\"index\"}\r\n                    // btnText2=\"查全部\"\r\n                    // isShowSearchForm={false}\r\n                    onSearchClick={this.handleSearch}\r\n                    getSearchFormFields={getSearchFormFields}\r\n                    // searchLoading={this.state.searchLoading}\r\n                    // insertBtnText={\"新增\"} // 不传 就没新增按钮\r\n                    // getInsertFormFields={getInsertFormFields}\r\n                    // insertRecord={this.handleInsertRecord}\r\n                    // col=\"2\"\r\n                    width=\"600px\"\r\n                    pagination={this.state.pagination}\r\n                    centered={true}\r\n                    columns={this.columns}\r\n                    dataSource={info}\r\n                    scroll={scroll}\r\n                >\r\n                    <div\r\n                        urlPrefix=\"/counter-user-info\"\r\n                        title=\"柜台用户22\"\r\n                        sucCallback={this.getData}\r\n                    ></div>\r\n                </CurdComponent>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Form.create()(FileOrder);\r\n"]},"metadata":{},"sourceType":"module"}