{"ast":null,"code":"import \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/form/style\";\nimport _Form from \"antd/lib/form\";\nimport _classCallCheck from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport \"antd/lib/select/style\";\nimport _Select from \"antd/lib/select\";\nimport \"antd/lib/date-picker/style\";\nimport _DatePicker from \"antd/lib/date-picker\";\nvar _jsxFileName = \"D:\\\\company\\\\algo-manage\\\\src\\\\algo\\\\modules\\\\tradeStatistics\\\\pages\\\\algorithmicTrad\\\\index.js\";\nimport React from \"react\";\nimport styles from \"./style.module.less\";\nimport echarts from \"echarts\";\nimport { connect } from \"react-redux\";\nvar RangePicker = _DatePicker.RangePicker;\nvar Option = _Select.Option;\nimport moment from \"moment\";\nimport { lte } from \"semver\";\nimport { tuple } from \"antd/lib/_util/type\";\n\nvar AlgorithmicTrad =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(AlgorithmicTrad, _React$PureComponent);\n\n  function AlgorithmicTrad() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, AlgorithmicTrad);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AlgorithmicTrad)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      numberText: \"笔\",\n      securityList: [],\n      algoList: [],\n      userList: []\n    };\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n\n      _this.props.form.validateFields(function (err, values) {\n        if (!err) {\n          console.log(values);\n          var noTime = values[\"pickerTime\"].length < 1;\n          var params = {\n            securityId: values.securityId,\n            algorithmId: values.algorithmId,\n            uuserId: values.uuserId,\n            countWay: values.countWay,\n            startTime: noTime ? \"\" : Date.parse(values[\"pickerTime\"][0]) * 1000,\n            endTime: noTime ? \"\" : Date.parse(values[\"pickerTime\"][1]) * 1000\n          };\n\n          _this.getData(params);\n\n          _this.setState({\n            numberText: values.countWay == \"0\" ? \"笔\" : \"元\"\n          });\n        }\n      });\n    };\n\n    _this.getData = function (params) {\n      var count = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      http.post({\n        url: \"/statistics/algo\",\n        data: params\n      }).then(function (res) {\n        if (res.code == 0) {\n          var data = res.data;\n          var echartLen = Object.keys(data);\n          console.log(data, \"data\");\n          echartLen.forEach(function (item) {\n            if (!data[item].length) {\n              message.error(\"该时间段暂无数据\");\n            }\n\n            _this.generateChart(data[item], item);\n          });\n        } else {\n          message.error(\"服务异常\");\n        }\n      });\n    };\n\n    _this.generateChart = function (list, type) {\n      if (list.length == 1) {\n        list.push({\n          x: \"\",\n          y: list[0].y\n        });\n      }\n\n      var lineObj = {\n        algoOrder: {\n          name: \"母单信息\",\n          color: \"#F78B7F\"\n        },\n        childOrder: {\n          name: \"子单信息\",\n          color: \"#FFD747\"\n        },\n        dealAlgoOrder: {\n          name: \"成交信息\",\n          color: \"#65D2FF\"\n        }\n      };\n      var isNull = list.length ? false : true;\n      var option = {\n        title: {\n          top: \"12px\",\n          left: \"32px\",\n          text: \"{a|}  \" + lineObj[type].name,\n          textStyle: {\n            color: \"#333333\",\n            fontSize: 14,\n            fontWeight: 500,\n            rich: {\n              a: {\n                backgroundColor: \"#3281FF\",\n                height: 10,\n                width: 2\n              }\n            }\n          }\n        },\n        textStyle: {\n          color: \"#333\"\n        },\n        tooltip: {\n          trigger: \"axis\",\n          backgroundColor: \"#1F2329\",\n          boxShadow: \"0px 2px 8px 0px rgba(0, 0, 0, 0.15)\",\n          borderColor: \"#1F2329\",\n          textStyle: {\n            color: \"#fff\"\n          }\n        },\n        dataset: {\n          dimensions: [\"x\", \"y\"],\n          source: list\n        },\n        grid: {\n          left: \"34px\",\n          right: \"50px\",\n          bottom: \"24px\",\n          top: \"75px\",\n          containLabel: true\n        },\n        xAxis: {\n          type: \"category\",\n          boundaryGap: false,\n          splitLine: {\n            show: true,\n            lineStyle: {\n              color: \"#E9E9E9\",\n              type: \"dashed\"\n            }\n          },\n          axisLabel: {// interval: 0,\n            // rotate: 30,\n          },\n          axisTick: {\n            show: true,\n            //显示X轴刻度\n            lineStyle: {\n              color: \"#E9E9E9\"\n            }\n          },\n          axisLine: {\n            // 刻度线的颜色\n            show: false\n          },\n          axisPointer: {\n            type: \"line\",\n            lineStyle: {\n              color: \"#BDBEBF\"\n            }\n          }\n        },\n        yAxis: [{\n          type: \"value\",\n          name: \"\\u5355\\u4F4D\\uFF1A(\".concat(_this.state.numberText, \")\"),\n          nameLocation: \"end\",\n          axisLine: {\n            show: false\n          },\n          nameTextStyle: {\n            color: \"#666\"\n          },\n          axisTick: {\n            show: false //隐藏X轴刻度\n\n          },\n          splitLine: {\n            show: true,\n            lineStyle: {\n              color: \"#E9E9E9\",\n              type: \"dashed\"\n            }\n          },\n          min: isNull ? 0 : null,\n          max: isNull ? 100 : null // nameTextStyle: {\n          //     padding: [0, 0, 0, 20],\n          // },\n\n        }],\n        series: [{\n          name: \"算法单数\",\n          type: \"line\",\n          smooth: true,\n          showSymbol: false,\n          // symbol: \"circle\",\n          itemStyle: {\n            normal: {\n              color: lineObj[type].color\n            }\n          },\n          areaStyle: {\n            normal: {\n              color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\n                offset: 0,\n                color: lineObj[type].color\n              }, {\n                offset: 1,\n                color: \"rgba(255,255,255,0)\"\n              }], false),\n              shadowColor: \"rgba(0, 0, 0, 0.1)\",\n              shadowBlur: 10\n            }\n          }\n        }]\n      };\n      var myChart = echarts.init(document.getElementById(type));\n      myChart.setOption(option);\n      myChart.resize();\n    };\n\n    _this.chartResize = function () {\n      var domList2 = [\"algoOrder\", \"childOrder\", \"dealAlgoOrder\"];\n      domList2.forEach(function (item) {\n        echarts.init(document.getElementById(item)).resize();\n      });\n    };\n\n    _this.getSelectList = function () {\n      //证券\n      http.get({\n        url: \"security/listAll\"\n      }).then(function (res1) {\n        // 算法\n        http.get({\n          url: \"/algo/listAll\"\n        }).then(function (res2) {\n          // 用户\n          http.get({\n            url: \"/user/listAll\"\n          }).then(function (res3) {\n            _this.setState({\n              securityList: res1.data,\n              algoList: res2.data,\n              userList: res3.data\n            });\n          });\n        });\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(AlgorithmicTrad, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getData({\n        securityId: \"\",\n        algorithmId: \"\",\n        uuserId: \"\",\n        startTime: \"\",\n        endTime: \"\",\n        countWay: \"0\"\n      });\n      this.getSelectList();\n    }\n  }, {\n    key: \"handleFilter\",\n    value: function handleFilter(input, option) {\n      console.log(input, option);\n      return true;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      // console.log(this.props.path);\n      window.cpuResize = this.chartResize;\n\n      if (this.props.path == \"/main/tradeStatistics/algorithmicTrad\") {\n        window.addEventListener(\"resize\", window.cpuResize);\n      } else {\n        window.removeEventListener(\"resize\", window.cpuResize);\n      }\n\n      var _this$state = this.state,\n          algoList = _this$state.algoList,\n          userList = _this$state.userList,\n          securityList = _this$state.securityList;\n      var children = algoList.map(function (d) {\n        return React.createElement(Option, {\n          key: d.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 278\n          },\n          __self: this\n        }, d.algoName);\n      });\n      var children2 = userList.map(function (d) {\n        return React.createElement(Option, {\n          key: d.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 281\n          },\n          __self: this\n        }, d.userName);\n      });\n      var children3 = securityList.map(function (d, index) {\n        if (index < 10) {\n          return React.createElement(Option, {\n            key: d.securityId,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 285\n            },\n            __self: this\n          }, d.securityName);\n        }\n      });\n      var getFieldDecorator = this.props.form.getFieldDecorator;\n      return React.createElement(\"div\", {\n        className: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: styles.search,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292\n        },\n        __self: this\n      }, React.createElement(_Form, {\n        layout: \"inline\",\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293\n        },\n        __self: this\n      }, React.createElement(_Form.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294\n        },\n        __self: this\n      }, getFieldDecorator(\"countWay\", {\n        initialValue: \"0\"\n      })(React.createElement(_Select, {\n        showSearch: true,\n        style: {\n          width: 160\n        },\n        placeholder: \"\\u9009\\u62E9\\u5355\\u4F4D\",\n        optionFilterProp: \"children\",\n        filterOption: function filterOption(input, option) {\n          return option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298\n        },\n        __self: this\n      }, React.createElement(Option, {\n        value: \"0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309\n        },\n        __self: this\n      }, \"\\u7B14\\u6570\"), React.createElement(Option, {\n        value: \"1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310\n        },\n        __self: this\n      }, \"\\u91D1\\u989D\")))), React.createElement(_Form.Item, {\n        style: {\n          marginLeft: \"12px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314\n        },\n        __self: this\n      }, getFieldDecorator(\"securityId\", {\n        initialValue: \"\"\n      })( // <Input placeholder=\"请输入证券代码\" />\n      React.createElement(_Select, {\n        placeholder: \"\\u8BF7\\u8F93\\u5165\\u7B97\\u6CD5ID\",\n        showSearch: true,\n        style: {\n          width: 160\n        },\n        optionFilterProp: \"children\",\n        filterOption: function filterOption(input, option) {\n          return _this2.handleFilter(input, option);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319\n        },\n        __self: this\n      }, children3))), React.createElement(_Form.Item, {\n        style: {\n          marginLeft: \"12px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332\n        },\n        __self: this\n      }, getFieldDecorator(\"algorithmId\")( // <Input placeholder=\"请输入算法ID\" />\n      React.createElement(_Select, {\n        allowClear: true,\n        placeholder: \"\\u8BF7\\u8F93\\u5165\\u7B97\\u6CD5ID\",\n        showSearch: true,\n        style: {\n          width: 160\n        },\n        optionFilterProp: \"children\",\n        filterOption: function filterOption(input, option) {\n          return option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 336\n        },\n        __self: this\n      }, children))), React.createElement(_Form.Item, {\n        style: {\n          marginLeft: \"12px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 352\n        },\n        __self: this\n      }, getFieldDecorator(\"uuserId\")( // <Input placeholder=\"请输入用户名\" />\n      React.createElement(_Select, {\n        allowClear: true,\n        showSearch: true,\n        style: {\n          width: 160\n        },\n        placeholder: \"\\u8BF7\\u8F93\\u5165\\u7528\\u6237\\u540D\",\n        optionFilterProp: \"children\",\n        filterOption: function filterOption(input, option) {\n          return option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 355\n        },\n        __self: this\n      }, children2))), React.createElement(_Form.Item, {\n        style: {\n          marginLeft: \"12px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 371\n        },\n        __self: this\n      }, getFieldDecorator(\"pickerTime\", {\n        initialValue: []\n      })(React.createElement(RangePicker, {\n        style: {\n          width: 432\n        },\n        showTime: true,\n        format: \"YYYY-MM-DD HH:mm:ss\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 375\n        },\n        __self: this\n      }))), React.createElement(_Form.Item, {\n        style: {\n          float: \"right\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 382\n        },\n        __self: this\n      }, React.createElement(_Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        style: {\n          width: 76\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 383\n        },\n        __self: this\n      }, \"\\u786E\\u5B9A\")))), React.createElement(\"div\", {\n        className: styles.chart,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 393\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"algoOrder\",\n        className: styles.chartBox,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 394\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        id: \"childOrder\",\n        className: styles.chartBox,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 395\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        id: \"dealAlgoOrder\",\n        className: styles.chartBox,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 396\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return AlgorithmicTrad;\n}(React.PureComponent);\n\nvar mapStateToProps = function mapStateToProps(state, ownProps) {\n  return {\n    path: state.RouterModel.path\n  };\n};\n\nexport default connect(mapStateToProps, null)(_Form.create()(AlgorithmicTrad));","map":{"version":3,"sources":["D:/company/algo-manage/src/algo/modules/tradeStatistics/pages/algorithmicTrad/index.js"],"names":["React","styles","echarts","connect","RangePicker","Option","moment","lte","tuple","AlgorithmicTrad","state","numberText","securityList","algoList","userList","handleSubmit","e","preventDefault","props","form","validateFields","err","values","console","log","noTime","length","params","securityId","algorithmId","uuserId","countWay","startTime","Date","parse","endTime","getData","setState","count","http","post","url","data","then","res","code","echartLen","Object","keys","forEach","item","message","error","generateChart","list","type","push","x","y","lineObj","algoOrder","name","color","childOrder","dealAlgoOrder","isNull","option","title","top","left","text","textStyle","fontSize","fontWeight","rich","a","backgroundColor","height","width","tooltip","trigger","boxShadow","borderColor","dataset","dimensions","source","grid","right","bottom","containLabel","xAxis","boundaryGap","splitLine","show","lineStyle","axisLabel","axisTick","axisLine","axisPointer","yAxis","nameLocation","nameTextStyle","min","max","series","smooth","showSymbol","itemStyle","normal","areaStyle","graphic","LinearGradient","offset","shadowColor","shadowBlur","myChart","init","document","getElementById","setOption","resize","chartResize","domList2","getSelectList","get","res1","res2","res3","input","window","cpuResize","path","addEventListener","removeEventListener","children","map","d","id","algoName","children2","userName","children3","index","securityName","getFieldDecorator","container","search","initialValue","toLowerCase","indexOf","marginLeft","handleFilter","float","chart","chartBox","PureComponent","mapStateToProps","ownProps","RouterModel","create"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,OAAP,MAAoB,SAApB;AAYA,SAASC,OAAT,QAAwB,aAAxB;IAEQC,W,eAAAA,W;IACAC,M,WAAAA,M;AACR,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,GAAT,QAAoB,QAApB;AACA,SAASC,KAAT,QAAsB,qBAAtB;;IACMC,e;;;;;;;;;;;;;;;;;UACFC,K,GAAQ;AACJC,MAAAA,UAAU,EAAE,GADR;AAEJC,MAAAA,YAAY,EAAE,EAFV;AAGJC,MAAAA,QAAQ,EAAE,EAHN;AAIJC,MAAAA,QAAQ,EAAE;AAJN,K;;UAMRC,Y,GAAe,UAACC,CAAD,EAAO;AAClBA,MAAAA,CAAC,CAACC,cAAF;;AACA,YAAKC,KAAL,CAAWC,IAAX,CAAgBC,cAAhB,CAA+B,UAACC,GAAD,EAAMC,MAAN,EAAiB;AAC5C,YAAI,CAACD,GAAL,EAAU;AACNE,UAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACA,cAAIG,MAAM,GAAGH,MAAM,CAAC,YAAD,CAAN,CAAqBI,MAArB,GAA8B,CAA3C;AACA,cAAIC,MAAM,GAAG;AACTC,YAAAA,UAAU,EAAEN,MAAM,CAACM,UADV;AAETC,YAAAA,WAAW,EAAEP,MAAM,CAACO,WAFX;AAGTC,YAAAA,OAAO,EAAER,MAAM,CAACQ,OAHP;AAITC,YAAAA,QAAQ,EAAET,MAAM,CAACS,QAJR;AAKTC,YAAAA,SAAS,EAAEP,MAAM,GACX,EADW,GAEXQ,IAAI,CAACC,KAAL,CAAWZ,MAAM,CAAC,YAAD,CAAN,CAAqB,CAArB,CAAX,IAAsC,IAPnC;AAQTa,YAAAA,OAAO,EAAEV,MAAM,GACT,EADS,GAETQ,IAAI,CAACC,KAAL,CAAWZ,MAAM,CAAC,YAAD,CAAN,CAAqB,CAArB,CAAX,IAAsC;AAVnC,WAAb;;AAYA,gBAAKc,OAAL,CAAaT,MAAb;;AACA,gBAAKU,QAAL,CAAc;AACV1B,YAAAA,UAAU,EAAEW,MAAM,CAACS,QAAP,IAAmB,GAAnB,GAAyB,GAAzB,GAA+B;AADjC,WAAd;AAGH;AACJ,OArBD;AAsBH,K;;UACDK,O,GAAU,UAACT,MAAD,EAAuB;AAAA,UAAdW,KAAc,uEAAN,CAAM;AAC7BC,MAAAA,IAAI,CAACC,IAAL,CAAU;AACNC,QAAAA,GAAG,EAAE,kBADC;AAENC,QAAAA,IAAI,EAAEf;AAFA,OAAV,EAGGgB,IAHH,CAGQ,UAACC,GAAD,EAAS;AACb,YAAIA,GAAG,CAACC,IAAJ,IAAY,CAAhB,EAAmB;AACf,cAAIH,IAAI,GAAGE,GAAG,CAACF,IAAf;AACA,cAAII,SAAS,GAAGC,MAAM,CAACC,IAAP,CAAYN,IAAZ,CAAhB;AACAnB,UAAAA,OAAO,CAACC,GAAR,CAAYkB,IAAZ,EAAkB,MAAlB;AACAI,UAAAA,SAAS,CAACG,OAAV,CAAkB,UAACC,IAAD,EAAU;AACxB,gBAAI,CAACR,IAAI,CAACQ,IAAD,CAAJ,CAAWxB,MAAhB,EAAwB;AACpByB,cAAAA,OAAO,CAACC,KAAR,CAAc,UAAd;AACH;;AACD,kBAAKC,aAAL,CAAmBX,IAAI,CAACQ,IAAD,CAAvB,EAA+BA,IAA/B;AACH,WALD;AAMH,SAVD,MAUO;AACHC,UAAAA,OAAO,CAACC,KAAR,CAAc,MAAd;AACH;AACJ,OAjBD;AAkBH,K;;UACDC,a,GAAgB,UAACC,IAAD,EAAOC,IAAP,EAAgB;AAC5B,UAAID,IAAI,CAAC5B,MAAL,IAAe,CAAnB,EAAsB;AAClB4B,QAAAA,IAAI,CAACE,IAAL,CAAU;AAAEC,UAAAA,CAAC,EAAE,EAAL;AAASC,UAAAA,CAAC,EAAEJ,IAAI,CAAC,CAAD,CAAJ,CAAQI;AAApB,SAAV;AACH;;AACD,UAAIC,OAAO,GAAG;AACVC,QAAAA,SAAS,EAAE;AAAEC,UAAAA,IAAI,EAAE,MAAR;AAAgBC,UAAAA,KAAK,EAAE;AAAvB,SADD;AAEVC,QAAAA,UAAU,EAAE;AAAEF,UAAAA,IAAI,EAAE,MAAR;AAAgBC,UAAAA,KAAK,EAAE;AAAvB,SAFF;AAGVE,QAAAA,aAAa,EAAE;AAAEH,UAAAA,IAAI,EAAE,MAAR;AAAgBC,UAAAA,KAAK,EAAE;AAAvB;AAHL,OAAd;AAKA,UAAIG,MAAM,GAAGX,IAAI,CAAC5B,MAAL,GAAc,KAAd,GAAsB,IAAnC;AACA,UAAIwC,MAAM,GAAG;AACTC,QAAAA,KAAK,EAAE;AACHC,UAAAA,GAAG,EAAE,MADF;AAEHC,UAAAA,IAAI,EAAE,MAFH;AAGHC,UAAAA,IAAI,EAAE,WAAWX,OAAO,CAACJ,IAAD,CAAP,CAAcM,IAH5B;AAIHU,UAAAA,SAAS,EAAE;AACPT,YAAAA,KAAK,EAAE,SADA;AAEPU,YAAAA,QAAQ,EAAE,EAFH;AAGPC,YAAAA,UAAU,EAAE,GAHL;AAIPC,YAAAA,IAAI,EAAE;AACFC,cAAAA,CAAC,EAAE;AACCC,gBAAAA,eAAe,EAAE,SADlB;AAECC,gBAAAA,MAAM,EAAE,EAFT;AAGCC,gBAAAA,KAAK,EAAE;AAHR;AADD;AAJC;AAJR,SADE;AAkBTP,QAAAA,SAAS,EAAE;AACPT,UAAAA,KAAK,EAAE;AADA,SAlBF;AAqBTiB,QAAAA,OAAO,EAAE;AACLC,UAAAA,OAAO,EAAE,MADJ;AAELJ,UAAAA,eAAe,EAAE,SAFZ;AAGLK,UAAAA,SAAS,EAAE,qCAHN;AAILC,UAAAA,WAAW,EAAE,SAJR;AAKLX,UAAAA,SAAS,EAAE;AACPT,YAAAA,KAAK,EAAE;AADA;AALN,SArBA;AA8BTqB,QAAAA,OAAO,EAAE;AACLC,UAAAA,UAAU,EAAE,CAAC,GAAD,EAAM,GAAN,CADP;AAELC,UAAAA,MAAM,EAAE/B;AAFH,SA9BA;AAkCTgC,QAAAA,IAAI,EAAE;AACFjB,UAAAA,IAAI,EAAE,MADJ;AAEFkB,UAAAA,KAAK,EAAE,MAFL;AAGFC,UAAAA,MAAM,EAAE,MAHN;AAIFpB,UAAAA,GAAG,EAAE,MAJH;AAKFqB,UAAAA,YAAY,EAAE;AALZ,SAlCG;AAyCTC,QAAAA,KAAK,EAAE;AACHnC,UAAAA,IAAI,EAAE,UADH;AAEHoC,UAAAA,WAAW,EAAE,KAFV;AAGHC,UAAAA,SAAS,EAAE;AACPC,YAAAA,IAAI,EAAE,IADC;AAEPC,YAAAA,SAAS,EAAE;AACPhC,cAAAA,KAAK,EAAE,SADA;AAEPP,cAAAA,IAAI,EAAE;AAFC;AAFJ,WAHR;AAUHwC,UAAAA,SAAS,EAAE,CACP;AACA;AAFO,WAVR;AAcHC,UAAAA,QAAQ,EAAE;AACNH,YAAAA,IAAI,EAAE,IADA;AACM;AACZC,YAAAA,SAAS,EAAE;AACPhC,cAAAA,KAAK,EAAE;AADA;AAFL,WAdP;AAoBHmC,UAAAA,QAAQ,EAAE;AACN;AACAJ,YAAAA,IAAI,EAAE;AAFA,WApBP;AAwBHK,UAAAA,WAAW,EAAE;AACT3C,YAAAA,IAAI,EAAE,MADG;AAETuC,YAAAA,SAAS,EAAE;AAAEhC,cAAAA,KAAK,EAAE;AAAT;AAFF;AAxBV,SAzCE;AAsETqC,QAAAA,KAAK,EAAE,CACH;AACI5C,UAAAA,IAAI,EAAE,OADV;AAEIM,UAAAA,IAAI,+BAAS,MAAKnD,KAAL,CAAWC,UAApB,MAFR;AAGIyF,UAAAA,YAAY,EAAE,KAHlB;AAIIH,UAAAA,QAAQ,EAAE;AACNJ,YAAAA,IAAI,EAAE;AADA,WAJd;AAOIQ,UAAAA,aAAa,EAAE;AACXvC,YAAAA,KAAK,EAAE;AADI,WAPnB;AAUIkC,UAAAA,QAAQ,EAAE;AACNH,YAAAA,IAAI,EAAE,KADA,CACO;;AADP,WAVd;AAaID,UAAAA,SAAS,EAAE;AACPC,YAAAA,IAAI,EAAE,IADC;AAEPC,YAAAA,SAAS,EAAE;AACPhC,cAAAA,KAAK,EAAE,SADA;AAEPP,cAAAA,IAAI,EAAE;AAFC;AAFJ,WAbf;AAoBI+C,UAAAA,GAAG,EAAErC,MAAM,GAAG,CAAH,GAAO,IApBtB;AAqBIsC,UAAAA,GAAG,EAAEtC,MAAM,GAAG,GAAH,GAAS,IArBxB,CAsBI;AACA;AACA;;AAxBJ,SADG,CAtEE;AAkGTuC,QAAAA,MAAM,EAAE,CACJ;AACI3C,UAAAA,IAAI,EAAE,MADV;AAEIN,UAAAA,IAAI,EAAE,MAFV;AAGIkD,UAAAA,MAAM,EAAE,IAHZ;AAIIC,UAAAA,UAAU,EAAE,KAJhB;AAKI;AACAC,UAAAA,SAAS,EAAE;AACPC,YAAAA,MAAM,EAAE;AACJ9C,cAAAA,KAAK,EAAEH,OAAO,CAACJ,IAAD,CAAP,CAAcO;AADjB;AADD,WANf;AAWI+C,UAAAA,SAAS,EAAE;AACPD,YAAAA,MAAM,EAAE;AACJ9C,cAAAA,KAAK,EAAE,IAAI5D,OAAO,CAAC4G,OAAR,CAAgBC,cAApB,CACH,CADG,EAEH,CAFG,EAGH,CAHG,EAIH,CAJG,EAKH,CACI;AACIC,gBAAAA,MAAM,EAAE,CADZ;AAEIlD,gBAAAA,KAAK,EAAEH,OAAO,CAACJ,IAAD,CAAP,CAAcO;AAFzB,eADJ,EAKI;AACIkD,gBAAAA,MAAM,EAAE,CADZ;AAEIlD,gBAAAA,KAAK,EAAE;AAFX,eALJ,CALG,EAeH,KAfG,CADH;AAkBJmD,cAAAA,WAAW,EAAE,oBAlBT;AAmBJC,cAAAA,UAAU,EAAE;AAnBR;AADD;AAXf,SADI;AAlGC,OAAb;AAwIA,UAAIC,OAAO,GAAGjH,OAAO,CAACkH,IAAR,CAAaC,QAAQ,CAACC,cAAT,CAAwB/D,IAAxB,CAAb,CAAd;AACA4D,MAAAA,OAAO,CAACI,SAAR,CAAkBrD,MAAlB;AACAiD,MAAAA,OAAO,CAACK,MAAR;AACH,K;;UACDC,W,GAAc,YAAM;AAChB,UAAIC,QAAQ,GAAG,CAAC,WAAD,EAAc,YAAd,EAA4B,eAA5B,CAAf;AACAA,MAAAA,QAAQ,CAACzE,OAAT,CAAiB,UAACC,IAAD,EAAU;AACvBhD,QAAAA,OAAO,CAACkH,IAAR,CAAaC,QAAQ,CAACC,cAAT,CAAwBpE,IAAxB,CAAb,EAA4CsE,MAA5C;AACH,OAFD;AAGH,K;;UAaDG,a,GAAgB,YAAM;AAClB;AACApF,MAAAA,IAAI,CAACqF,GAAL,CAAS;AACLnF,QAAAA,GAAG,EAAE;AADA,OAAT,EAEGE,IAFH,CAEQ,UAACkF,IAAD,EAAU;AACd;AACAtF,QAAAA,IAAI,CAACqF,GAAL,CAAS;AACLnF,UAAAA,GAAG,EAAE;AADA,SAAT,EAEGE,IAFH,CAEQ,UAACmF,IAAD,EAAU;AACd;AACAvF,UAAAA,IAAI,CAACqF,GAAL,CAAS;AACLnF,YAAAA,GAAG,EAAE;AADA,WAAT,EAEGE,IAFH,CAEQ,UAACoF,IAAD,EAAU;AACd,kBAAK1F,QAAL,CAAc;AACVzB,cAAAA,YAAY,EAAEiH,IAAI,CAACnF,IADT;AAEV7B,cAAAA,QAAQ,EAAEiH,IAAI,CAACpF,IAFL;AAGV5B,cAAAA,QAAQ,EAAEiH,IAAI,CAACrF;AAHL,aAAd;AAKH,WARD;AASH,SAbD;AAcH,OAlBD;AAmBH,K;;;;;;;wCAhCmB;AAChB,WAAKN,OAAL,CAAa;AACTR,QAAAA,UAAU,EAAE,EADH;AAETC,QAAAA,WAAW,EAAE,EAFJ;AAGTC,QAAAA,OAAO,EAAE,EAHA;AAITE,QAAAA,SAAS,EAAE,EAJF;AAKTG,QAAAA,OAAO,EAAE,EALA;AAMTJ,QAAAA,QAAQ,EAAE;AAND,OAAb;AAQA,WAAK4F,aAAL;AACH;;;iCAuBYK,K,EAAO9D,M,EAAQ;AACxB3C,MAAAA,OAAO,CAACC,GAAR,CAAYwG,KAAZ,EAAmB9D,MAAnB;AACA,aAAO,IAAP;AACH;;;6BACQ;AAAA;;AACL;AACA+D,MAAAA,MAAM,CAACC,SAAP,GAAmB,KAAKT,WAAxB;;AACA,UAAI,KAAKvG,KAAL,CAAWiH,IAAX,IAAmB,uCAAvB,EAAgE;AAC5DF,QAAAA,MAAM,CAACG,gBAAP,CAAwB,QAAxB,EAAkCH,MAAM,CAACC,SAAzC;AACH,OAFD,MAEO;AACHD,QAAAA,MAAM,CAACI,mBAAP,CAA2B,QAA3B,EAAqCJ,MAAM,CAACC,SAA5C;AACH;;AAPI,wBAQwC,KAAKxH,KAR7C;AAAA,UAQGG,QARH,eAQGA,QARH;AAAA,UAQaC,QARb,eAQaA,QARb;AAAA,UAQuBF,YARvB,eAQuBA,YARvB;AASL,UAAM0H,QAAQ,GAAGzH,QAAQ,CAAC0H,GAAT,CAAa,UAACC,CAAD;AAAA,eAC1B,oBAAC,MAAD;AAAQ,UAAA,GAAG,EAAEA,CAAC,CAACC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAoBD,CAAC,CAACE,QAAtB,CAD0B;AAAA,OAAb,CAAjB;AAGA,UAAMC,SAAS,GAAG7H,QAAQ,CAACyH,GAAT,CAAa,UAACC,CAAD;AAAA,eAC3B,oBAAC,MAAD;AAAQ,UAAA,GAAG,EAAEA,CAAC,CAACC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAoBD,CAAC,CAACI,QAAtB,CAD2B;AAAA,OAAb,CAAlB;AAGA,UAAMC,SAAS,GAAGjI,YAAY,CAAC2H,GAAb,CAAiB,UAACC,CAAD,EAAIM,KAAJ,EAAc;AAC7C,YAAIA,KAAK,GAAG,EAAZ,EAAgB;AACZ,iBAAO,oBAAC,MAAD;AAAQ,YAAA,GAAG,EAAEN,CAAC,CAAC5G,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAA4B4G,CAAC,CAACO,YAA9B,CAAP;AACH;AACJ,OAJiB,CAAlB;AAfK,UAqBGC,iBArBH,GAqByB,KAAK9H,KAAL,CAAWC,IArBpC,CAqBG6H,iBArBH;AAsBL,aACI;AAAK,QAAA,SAAS,EAAE/I,MAAM,CAACgJ,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAEhJ,MAAM,CAACiJ,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAM,QAAA,MAAM,EAAC,QAAb;AAAsB,QAAA,QAAQ,EAAE,KAAKnI,YAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,0BAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKiI,iBAAiB,CAAC,UAAD,EAAa;AAC3BG,QAAAA,YAAY,EAAE;AADa,OAAb,CAAjB,CAGG;AACI,QAAA,UAAU,MADd;AAEI,QAAA,KAAK,EAAE;AAAErE,UAAAA,KAAK,EAAE;AAAT,SAFX;AAGI,QAAA,WAAW,EAAC,0BAHhB;AAII,QAAA,gBAAgB,EAAC,UAJrB;AAKI,QAAA,YAAY,EAAE,sBAACkD,KAAD,EAAQ9D,MAAR;AAAA,iBACVA,MAAM,CAAChD,KAAP,CAAaoH,QAAb,CACKc,WADL,GAEKC,OAFL,CAEarB,KAAK,CAACoB,WAAN,EAFb,KAEqC,CAH3B;AAAA,SALlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAWI,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAXJ,EAYI,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAZJ,CAHH,CADL,CADJ,EAqBI,0BAAM,IAAN;AAAW,QAAA,KAAK,EAAE;AAAEE,UAAAA,UAAU,EAAE;AAAd,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKN,iBAAiB,CAAC,YAAD,EAAe;AAC7BG,QAAAA,YAAY,EAAE;AADe,OAAf,CAAjB,EAGG;AACA;AACI,QAAA,WAAW,EAAC,kCADhB;AAEI,QAAA,UAAU,MAFd;AAGI,QAAA,KAAK,EAAE;AAAErE,UAAAA,KAAK,EAAE;AAAT,SAHX;AAII,QAAA,gBAAgB,EAAC,UAJrB;AAKI,QAAA,YAAY,EAAE,sBAACkD,KAAD,EAAQ9D,MAAR;AAAA,iBACV,MAAI,CAACqF,YAAL,CAAkBvB,KAAlB,EAAyB9D,MAAzB,CADU;AAAA,SALlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SASK2E,SATL,CAJH,CADL,CArBJ,EAuCI,0BAAM,IAAN;AAAW,QAAA,KAAK,EAAE;AAAES,UAAAA,UAAU,EAAE;AAAd,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKN,iBAAiB,CAAC,aAAD,CAAjB,EACG;AAEA;AACI,QAAA,UAAU,EAAE,IADhB;AAEI,QAAA,WAAW,EAAC,kCAFhB;AAGI,QAAA,UAAU,MAHd;AAII,QAAA,KAAK,EAAE;AAAElE,UAAAA,KAAK,EAAE;AAAT,SAJX;AAKI,QAAA,gBAAgB,EAAC,UALrB;AAMI,QAAA,YAAY,EAAE,sBAACkD,KAAD,EAAQ9D,MAAR;AAAA,iBACVA,MAAM,CAAChD,KAAP,CAAaoH,QAAb,CACKc,WADL,GAEKC,OAFL,CAEarB,KAAK,CAACoB,WAAN,EAFb,KAEqC,CAH3B;AAAA,SANlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAYKd,QAZL,CAHH,CADL,CAvCJ,EA2DI,0BAAM,IAAN;AAAW,QAAA,KAAK,EAAE;AAAEgB,UAAAA,UAAU,EAAE;AAAd,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKN,iBAAiB,CAAC,SAAD,CAAjB,EACG;AACA;AACI,QAAA,UAAU,EAAE,IADhB;AAEI,QAAA,UAAU,MAFd;AAGI,QAAA,KAAK,EAAE;AAAElE,UAAAA,KAAK,EAAE;AAAT,SAHX;AAII,QAAA,WAAW,EAAC,sCAJhB;AAKI,QAAA,gBAAgB,EAAC,UALrB;AAMI,QAAA,YAAY,EAAE,sBAACkD,KAAD,EAAQ9D,MAAR;AAAA,iBACVA,MAAM,CAAChD,KAAP,CAAaoH,QAAb,CACKc,WADL,GAEKC,OAFL,CAEarB,KAAK,CAACoB,WAAN,EAFb,KAEqC,CAH3B;AAAA,SANlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAYKT,SAZL,CAFH,CADL,CA3DJ,EA8EI,0BAAM,IAAN;AAAW,QAAA,KAAK,EAAE;AAAEW,UAAAA,UAAU,EAAE;AAAd,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKN,iBAAiB,CAAC,YAAD,EAAe;AAC7BG,QAAAA,YAAY,EAAE;AADe,OAAf,CAAjB,CAGG,oBAAC,WAAD;AACI,QAAA,KAAK,EAAE;AAAErE,UAAAA,KAAK,EAAE;AAAT,SADX;AAEI,QAAA,QAAQ,MAFZ;AAGI,QAAA,MAAM,EAAC,qBAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHH,CADL,CA9EJ,EAyFI,0BAAM,IAAN;AAAW,QAAA,KAAK,EAAE;AAAE0E,UAAAA,KAAK,EAAE;AAAT,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AACI,QAAA,IAAI,EAAC,SADT;AAEI,QAAA,QAAQ,EAAC,QAFb;AAGI,QAAA,KAAK,EAAE;AAAE1E,UAAAA,KAAK,EAAE;AAAT,SAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,CAzFJ,CADJ,CADJ,EAsGI;AAAK,QAAA,SAAS,EAAE7E,MAAM,CAACwJ,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,EAAE,EAAC,WAAR;AAAoB,QAAA,SAAS,EAAExJ,MAAM,CAACyJ,QAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI;AAAK,QAAA,EAAE,EAAC,YAAR;AAAqB,QAAA,SAAS,EAAEzJ,MAAM,CAACyJ,QAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAGI;AAAK,QAAA,EAAE,EAAC,eAAR;AAAwB,QAAA,SAAS,EAAEzJ,MAAM,CAACyJ,QAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHJ,CAtGJ,CADJ;AA0HH;;;;EAtYyB1J,KAAK,CAAC2J,a;;AAwYpC,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAClJ,KAAD,EAAQmJ,QAAR,EAAqB;AACzC,SAAO;AACH1B,IAAAA,IAAI,EAAEzH,KAAK,CAACoJ,WAAN,CAAkB3B;AADrB,GAAP;AAGH,CAJD;;AAKA,eAAehI,OAAO,CAACyJ,eAAD,EAAkB,IAAlB,CAAP,CAA+B,MAAKG,MAAL,GAActJ,eAAd,CAA/B,CAAf","sourcesContent":["import React from \"react\";\r\nimport styles from \"./style.module.less\";\r\nimport echarts from \"echarts\";\r\nimport {\r\n    SearchForm,\r\n    Input,\r\n    TimePicker,\r\n    Form,\r\n    Button,\r\n    Icon,\r\n    DatePicker,\r\n    Select,\r\n    AutoComplete,\r\n} from \"antd\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst { RangePicker } = DatePicker;\r\nconst { Option } = Select;\r\nimport moment from \"moment\";\r\nimport { lte } from \"semver\";\r\nimport { tuple } from \"antd/lib/_util/type\";\r\nclass AlgorithmicTrad extends React.PureComponent {\r\n    state = {\r\n        numberText: \"笔\",\r\n        securityList: [],\r\n        algoList: [],\r\n        userList: [],\r\n    };\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.form.validateFields((err, values) => {\r\n            if (!err) {\r\n                console.log(values);\r\n                let noTime = values[\"pickerTime\"].length < 1;\r\n                let params = {\r\n                    securityId: values.securityId,\r\n                    algorithmId: values.algorithmId,\r\n                    uuserId: values.uuserId,\r\n                    countWay: values.countWay,\r\n                    startTime: noTime\r\n                        ? \"\"\r\n                        : Date.parse(values[\"pickerTime\"][0]) * 1000,\r\n                    endTime: noTime\r\n                        ? \"\"\r\n                        : Date.parse(values[\"pickerTime\"][1]) * 1000,\r\n                };\r\n                this.getData(params);\r\n                this.setState({\r\n                    numberText: values.countWay == \"0\" ? \"笔\" : \"元\",\r\n                });\r\n            }\r\n        });\r\n    };\r\n    getData = (params, count = 0) => {\r\n        http.post({\r\n            url: \"/statistics/algo\",\r\n            data: params,\r\n        }).then((res) => {\r\n            if (res.code == 0) {\r\n                let data = res.data;\r\n                let echartLen = Object.keys(data);\r\n                console.log(data, \"data\");\r\n                echartLen.forEach((item) => {\r\n                    if (!data[item].length) {\r\n                        message.error(\"该时间段暂无数据\");\r\n                    }\r\n                    this.generateChart(data[item], item);\r\n                });\r\n            } else {\r\n                message.error(\"服务异常\");\r\n            }\r\n        });\r\n    };\r\n    generateChart = (list, type) => {\r\n        if (list.length == 1) {\r\n            list.push({ x: \"\", y: list[0].y });\r\n        }\r\n        let lineObj = {\r\n            algoOrder: { name: \"母单信息\", color: \"#F78B7F\" },\r\n            childOrder: { name: \"子单信息\", color: \"#FFD747\" },\r\n            dealAlgoOrder: { name: \"成交信息\", color: \"#65D2FF\" },\r\n        };\r\n        let isNull = list.length ? false : true;\r\n        let option = {\r\n            title: {\r\n                top: \"12px\",\r\n                left: \"32px\",\r\n                text: \"{a|}  \" + lineObj[type].name,\r\n                textStyle: {\r\n                    color: \"#333333\",\r\n                    fontSize: 14,\r\n                    fontWeight: 500,\r\n                    rich: {\r\n                        a: {\r\n                            backgroundColor: \"#3281FF\",\r\n                            height: 10,\r\n                            width: 2,\r\n                        },\r\n                    },\r\n                },\r\n            },\r\n            textStyle: {\r\n                color: \"#333\",\r\n            },\r\n            tooltip: {\r\n                trigger: \"axis\",\r\n                backgroundColor: \"#1F2329\",\r\n                boxShadow: \"0px 2px 8px 0px rgba(0, 0, 0, 0.15)\",\r\n                borderColor: \"#1F2329\",\r\n                textStyle: {\r\n                    color: \"#fff\",\r\n                },\r\n            },\r\n            dataset: {\r\n                dimensions: [\"x\", \"y\"],\r\n                source: list,\r\n            },\r\n            grid: {\r\n                left: \"34px\",\r\n                right: \"50px\",\r\n                bottom: \"24px\",\r\n                top: \"75px\",\r\n                containLabel: true,\r\n            },\r\n            xAxis: {\r\n                type: \"category\",\r\n                boundaryGap: false,\r\n                splitLine: {\r\n                    show: true,\r\n                    lineStyle: {\r\n                        color: \"#E9E9E9\",\r\n                        type: \"dashed\",\r\n                    },\r\n                },\r\n                axisLabel: {\r\n                    // interval: 0,\r\n                    // rotate: 30,\r\n                },\r\n                axisTick: {\r\n                    show: true, //显示X轴刻度\r\n                    lineStyle: {\r\n                        color: \"#E9E9E9\",\r\n                    },\r\n                },\r\n                axisLine: {\r\n                    // 刻度线的颜色\r\n                    show: false,\r\n                },\r\n                axisPointer: {\r\n                    type: \"line\",\r\n                    lineStyle: { color: \"#BDBEBF\" },\r\n                },\r\n            },\r\n            yAxis: [\r\n                {\r\n                    type: \"value\",\r\n                    name: `单位：(${this.state.numberText})`,\r\n                    nameLocation: \"end\",\r\n                    axisLine: {\r\n                        show: false,\r\n                    },\r\n                    nameTextStyle: {\r\n                        color: \"#666\",\r\n                    },\r\n                    axisTick: {\r\n                        show: false, //隐藏X轴刻度\r\n                    },\r\n                    splitLine: {\r\n                        show: true,\r\n                        lineStyle: {\r\n                            color: \"#E9E9E9\",\r\n                            type: \"dashed\",\r\n                        },\r\n                    },\r\n                    min: isNull ? 0 : null,\r\n                    max: isNull ? 100 : null,\r\n                    // nameTextStyle: {\r\n                    //     padding: [0, 0, 0, 20],\r\n                    // },\r\n                },\r\n            ],\r\n            series: [\r\n                {\r\n                    name: \"算法单数\",\r\n                    type: \"line\",\r\n                    smooth: true,\r\n                    showSymbol: false,\r\n                    // symbol: \"circle\",\r\n                    itemStyle: {\r\n                        normal: {\r\n                            color: lineObj[type].color,\r\n                        },\r\n                    },\r\n                    areaStyle: {\r\n                        normal: {\r\n                            color: new echarts.graphic.LinearGradient(\r\n                                0,\r\n                                0,\r\n                                0,\r\n                                1,\r\n                                [\r\n                                    {\r\n                                        offset: 0,\r\n                                        color: lineObj[type].color,\r\n                                    },\r\n                                    {\r\n                                        offset: 1,\r\n                                        color: \"rgba(255,255,255,0)\",\r\n                                    },\r\n                                ],\r\n                                false\r\n                            ),\r\n                            shadowColor: \"rgba(0, 0, 0, 0.1)\",\r\n                            shadowBlur: 10,\r\n                        },\r\n                    },\r\n                },\r\n            ],\r\n        };\r\n        var myChart = echarts.init(document.getElementById(type));\r\n        myChart.setOption(option);\r\n        myChart.resize();\r\n    };\r\n    chartResize = () => {\r\n        let domList2 = [\"algoOrder\", \"childOrder\", \"dealAlgoOrder\"];\r\n        domList2.forEach((item) => {\r\n            echarts.init(document.getElementById(item)).resize();\r\n        });\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.getData({\r\n            securityId: \"\",\r\n            algorithmId: \"\",\r\n            uuserId: \"\",\r\n            startTime: \"\",\r\n            endTime: \"\",\r\n            countWay: \"0\",\r\n        });\r\n        this.getSelectList();\r\n    }\r\n    getSelectList = () => {\r\n        //证券\r\n        http.get({\r\n            url: \"security/listAll\",\r\n        }).then((res1) => {\r\n            // 算法\r\n            http.get({\r\n                url: \"/algo/listAll\",\r\n            }).then((res2) => {\r\n                // 用户\r\n                http.get({\r\n                    url: \"/user/listAll\",\r\n                }).then((res3) => {\r\n                    this.setState({\r\n                        securityList: res1.data,\r\n                        algoList: res2.data,\r\n                        userList: res3.data,\r\n                    });\r\n                });\r\n            });\r\n        });\r\n    };\r\n    handleFilter(input, option) {\r\n        console.log(input, option);\r\n        return true;\r\n    }\r\n    render() {\r\n        // console.log(this.props.path);\r\n        window.cpuResize = this.chartResize;\r\n        if (this.props.path == \"/main/tradeStatistics/algorithmicTrad\") {\r\n            window.addEventListener(\"resize\", window.cpuResize);\r\n        } else {\r\n            window.removeEventListener(\"resize\", window.cpuResize);\r\n        }\r\n        const { algoList, userList, securityList } = this.state;\r\n        const children = algoList.map((d) => (\r\n            <Option key={d.id}>{d.algoName}</Option>\r\n        ));\r\n        const children2 = userList.map((d) => (\r\n            <Option key={d.id}>{d.userName}</Option>\r\n        ));\r\n        const children3 = securityList.map((d, index) => {\r\n            if (index < 10) {\r\n                return <Option key={d.securityId}>{d.securityName}</Option>;\r\n            }\r\n        });\r\n\r\n        const { getFieldDecorator } = this.props.form;\r\n        return (\r\n            <div className={styles.container}>\r\n                <div className={styles.search}>\r\n                    <Form layout=\"inline\" onSubmit={this.handleSubmit}>\r\n                        <Form.Item>\r\n                            {getFieldDecorator(\"countWay\", {\r\n                                initialValue: \"0\",\r\n                            })(\r\n                                <Select\r\n                                    showSearch\r\n                                    style={{ width: 160 }}\r\n                                    placeholder=\"选择单位\"\r\n                                    optionFilterProp=\"children\"\r\n                                    filterOption={(input, option) =>\r\n                                        option.props.children\r\n                                            .toLowerCase()\r\n                                            .indexOf(input.toLowerCase()) >= 0\r\n                                    }\r\n                                >\r\n                                    <Option value=\"0\">笔数</Option>\r\n                                    <Option value=\"1\">金额</Option>\r\n                                </Select>\r\n                            )}\r\n                        </Form.Item>\r\n                        <Form.Item style={{ marginLeft: \"12px\" }}>\r\n                            {getFieldDecorator(\"securityId\", {\r\n                                initialValue: \"\",\r\n                            })(\r\n                                // <Input placeholder=\"请输入证券代码\" />\r\n                                <Select\r\n                                    placeholder=\"请输入算法ID\"\r\n                                    showSearch\r\n                                    style={{ width: 160 }}\r\n                                    optionFilterProp=\"children\"\r\n                                    filterOption={(input, option) =>\r\n                                        this.handleFilter(input, option)\r\n                                    }\r\n                                >\r\n                                    {children3}\r\n                                </Select>\r\n                            )}\r\n                        </Form.Item>\r\n                        <Form.Item style={{ marginLeft: \"12px\" }}>\r\n                            {getFieldDecorator(\"algorithmId\")(\r\n                                // <Input placeholder=\"请输入算法ID\" />\r\n\r\n                                <Select\r\n                                    allowClear={true}\r\n                                    placeholder=\"请输入算法ID\"\r\n                                    showSearch\r\n                                    style={{ width: 160 }}\r\n                                    optionFilterProp=\"children\"\r\n                                    filterOption={(input, option) =>\r\n                                        option.props.children\r\n                                            .toLowerCase()\r\n                                            .indexOf(input.toLowerCase()) >= 0\r\n                                    }\r\n                                >\r\n                                    {children}\r\n                                </Select>\r\n                            )}\r\n                        </Form.Item>\r\n                        <Form.Item style={{ marginLeft: \"12px\" }}>\r\n                            {getFieldDecorator(\"uuserId\")(\r\n                                // <Input placeholder=\"请输入用户名\" />\r\n                                <Select\r\n                                    allowClear={true}\r\n                                    showSearch\r\n                                    style={{ width: 160 }}\r\n                                    placeholder=\"请输入用户名\"\r\n                                    optionFilterProp=\"children\"\r\n                                    filterOption={(input, option) =>\r\n                                        option.props.children\r\n                                            .toLowerCase()\r\n                                            .indexOf(input.toLowerCase()) >= 0\r\n                                    }\r\n                                >\r\n                                    {children2}\r\n                                </Select>\r\n                            )}\r\n                        </Form.Item>\r\n                        <Form.Item style={{ marginLeft: \"12px\" }}>\r\n                            {getFieldDecorator(\"pickerTime\", {\r\n                                initialValue: [],\r\n                            })(\r\n                                <RangePicker\r\n                                    style={{ width: 432 }}\r\n                                    showTime\r\n                                    format=\"YYYY-MM-DD HH:mm:ss\"\r\n                                />\r\n                            )}\r\n                        </Form.Item>\r\n                        <Form.Item style={{ float: \"right\" }}>\r\n                            <Button\r\n                                type=\"primary\"\r\n                                htmlType=\"submit\"\r\n                                style={{ width: 76 }}\r\n                            >\r\n                                确定\r\n                            </Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </div>\r\n                <div className={styles.chart}>\r\n                    <div id=\"algoOrder\" className={styles.chartBox}></div>\r\n                    <div id=\"childOrder\" className={styles.chartBox}></div>\r\n                    <div id=\"dealAlgoOrder\" className={styles.chartBox}></div>\r\n                    {/* <div\r\n                        id=\"main_1\"\r\n                        style={{ width: \"48%\", height: \"500px\", float: \"left\" }}\r\n                    ></div>\r\n                    <div\r\n                        id=\"main_2\"\r\n                        style={{\r\n                            width: \"48%\",\r\n                            height: \"500px\",\r\n                            float: \"right\",\r\n                        }}\r\n                    ></div> */}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        path: state.RouterModel.path,\r\n    };\r\n};\r\nexport default connect(mapStateToProps, null)(Form.create()(AlgorithmicTrad));\r\n"]},"metadata":{},"sourceType":"module"}