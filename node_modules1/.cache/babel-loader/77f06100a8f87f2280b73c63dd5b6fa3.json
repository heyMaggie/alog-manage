{"ast":null,"code":"import \"antd/lib/form/style\";\nimport _Form from \"antd/lib/form\";\nimport _defineProperty from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport \"antd/lib/message/style\";\nimport _message from \"antd/lib/message\";\nimport _classCallCheck from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport \"antd/lib/input/style\";\nimport _Input from \"antd/lib/input\";\nvar _jsxFileName = \"D:\\\\company\\\\algo-manage\\\\src\\\\algo\\\\modules\\\\manage\\\\pages\\\\fileOrder\\\\index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport CurdComponent from \"@/components/CurdComponent\";\nimport SelectOption from \"@/components/SelectOption\";\nimport Table from \"@/components/Table\";\n\nvar getSearchFormFields = function getSearchFormFields() {\n  return [{\n    label: \"文件类型\",\n    id: \"fileType\",\n    component: React.createElement(_Input, {\n      placeholder: \"\\u8BF7\\u8F93\\u5165\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    })\n  }, {\n    label: \"用户ID\",\n    id: \"userId\",\n    component: React.createElement(_Input, {\n      placeholder: \"\\u8BF7\\u8F93\\u5165\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    })\n  }];\n};\n\nvar getInsertFormFields = function getInsertFormFields() {\n  return [{\n    label: \"用户ID\",\n    id: \"userId\",\n    rules: [{\n      required: true,\n      message: \"参数不能为空\"\n    }, {\n      validator: checkLength(12),\n      trigger: [\"change\", \"blur\"]\n    }],\n    component: React.createElement(_Input, {\n      placeholder: \"\\u8BF7\\u8F93\\u5165\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    })\n  }, {\n    label: \"用户名\",\n    id: \"userName\",\n    rules: [{\n      required: true,\n      message: \"参数不能为空\"\n    }, {\n      validator: checkLength(32),\n      trigger: [\"change\", \"blur\"]\n    }],\n    component: React.createElement(_Input, {\n      placeholder: \"\\u8BF7\\u8F93\\u5165\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    })\n  }, {\n    label: \"用户密码\",\n    id: \"userPasswd\",\n    initialValue: \"\",\n    rules: [{\n      required: true,\n      message: \"参数不能为空\"\n    }, {\n      validator: checkLength(32),\n      trigger: [\"change\", \"blur\"]\n    }],\n    component: React.createElement(_Input, {\n      placeholder: \"\\u8BF7\\u8F93\\u5165\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    })\n  }, {\n    label: \"柜台网关ID\",\n    id: \"counterGwId\",\n    rules: [{\n      required: true,\n      message: \"柜台网关Id不能为空\"\n    }, {\n      validator: checkLength(10),\n      trigger: [\"change\", \"blur\"]\n    }],\n    component: React.createElement(_Input, {\n      placeholder: \"\\u8BF7\\u8F93\\u5165\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    })\n  }, {\n    label: \"来自柜台\",\n    id: \"counterUserId\",\n    rules: [{\n      required: true,\n      message: \"参数不能为空\"\n    }, {\n      validator: checkLength(10),\n      trigger: [\"change\", \"blur\"]\n    }],\n    component: React.createElement(_Input, {\n      placeholder: \"\\u8BF7\\u8F93\\u5165\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    })\n  }, {\n    label: \"业务类型\",\n    id: \"businessType\",\n    initialValue: \"1\",\n    rules: [{\n      required: true,\n      message: \"参数不能为空\"\n    }],\n    component: SelectOption(dict.businessType, {\n      placeholder: \"请选择\",\n      allowClear: false,\n      style: {\n        width: 400\n      }\n    })\n  }, // {\n  //     label: \"登录状态\",\n  //     id: \"loginStatus\",\n  //     initialValue: \"0\",\n  //     rules: [\n  //         {\n  //             required: true,\n  //             message: \"参数不能为空\",\n  //         },\n  //     ],\n  //     component: SelectOption(dict.loginStatus, {\n  //         placeholder: \"请选择\",\n  //         allowClear: false,\n  //         style: {\n  //             width: 400,\n  //         },\n  //     }),\n  // },\n  {\n    label: \"客户类型\",\n    id: \"clientType\",\n    initialValue: \"0\",\n    rules: [{\n      required: true,\n      message: \"参数不能为空\"\n    }],\n    component: SelectOption(dict.clientType, {\n      placeholder: \"请选择\",\n      allowClear: false,\n      style: {\n        width: 400\n      }\n    })\n  }, {\n    label: \"算法平台用户ID\",\n    id: \"uuserId\",\n    rules: [{\n      required: true,\n      message: \"参数不能为空\"\n    }, {\n      validator: checkLength(10),\n      trigger: [\"change\", \"blur\"]\n    }],\n    component: React.createElement(_Input, {\n      placeholder: \"\\u8BF7\\u8F93\\u5165\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    })\n  }];\n};\n\nvar getUpdateFormFields = function getUpdateFormFields() {\n  return [{\n    label: \"用户ID\",\n    id: \"userId\",\n    rules: [{\n      required: true,\n      message: \"参数不能为空\"\n    }, {\n      validator: checkLength(12),\n      trigger: [\"change\", \"blur\"]\n    }],\n    component: React.createElement(_Input, {\n      placeholder: \"\\u8BF7\\u8F93\\u5165\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    })\n  }, {\n    label: \"用户名\",\n    id: \"userName\",\n    rules: [{\n      required: true,\n      message: \"参数不能为空\"\n    }, {\n      validator: checkLength(32),\n      trigger: [\"change\", \"blur\"]\n    }],\n    component: React.createElement(_Input, {\n      placeholder: \"\\u8BF7\\u8F93\\u5165\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    })\n  }, {\n    label: \"用户密码\",\n    id: \"userPasswd\",\n    initialValue: \"\",\n    rules: [{\n      required: true,\n      message: \"参数不能为空\"\n    }, {\n      validator: checkLength(32),\n      trigger: [\"change\", \"blur\"]\n    }],\n    component: React.createElement(_Input, {\n      placeholder: \"\\u8BF7\\u8F93\\u5165\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    })\n  }, {\n    label: \"柜台网关ID\",\n    id: \"counterGwId\",\n    rules: [{\n      required: true,\n      message: \"柜台网关Id不能为空\"\n    }, {\n      validator: checkLength(10),\n      trigger: [\"change\", \"blur\"]\n    }],\n    component: React.createElement(_Input, {\n      placeholder: \"\\u8BF7\\u8F93\\u5165\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    })\n  }, {\n    label: \"来自柜台\",\n    id: \"counterUserId\",\n    rules: [{\n      required: true,\n      message: \"参数不能为空\"\n    }, {\n      validator: checkLength(10),\n      trigger: [\"change\", \"blur\"]\n    }],\n    component: React.createElement(_Input, {\n      placeholder: \"\\u8BF7\\u8F93\\u5165\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    })\n  }, {\n    label: \"业务类型\",\n    id: \"businessType\",\n    initialValue: \"1\",\n    rules: [{\n      required: true,\n      message: \"参数不能为空\"\n    }],\n    component: SelectOption(dict.businessType, {\n      placeholder: \"请选择\",\n      allowClear: false,\n      style: {\n        width: 400\n      }\n    })\n  }, // {\n  //     label: \"登录状态\",\n  //     id: \"loginStatus\",\n  //     initialValue: \"0\",\n  //     rules: [\n  //         {\n  //             required: true,\n  //             message: \"参数不能为空\",\n  //         },\n  //     ],\n  //     component: SelectOption(dict.loginStatus, {\n  //         placeholder: \"请选择\",\n  //         allowClear: false,\n  //         style: {\n  //             width: 400,\n  //         },\n  //     }),\n  // },\n  {\n    label: \"客户类型\",\n    id: \"clientType\",\n    initialValue: \"0\",\n    rules: [{\n      required: true,\n      message: \"参数不能为空\"\n    }],\n    component: SelectOption(dict.clientType, {\n      placeholder: \"请选择\",\n      allowClear: false,\n      style: {\n        width: 400\n      }\n    })\n  }, {\n    label: \"算法平台用户ID\",\n    id: \"uuserId\",\n    rules: [{\n      required: true,\n      message: \"参数不能为空\"\n    }, {\n      validator: checkLength(10),\n      trigger: [\"change\", \"blur\"]\n    }],\n    component: React.createElement(_Input, {\n      placeholder: \"\\u8BF7\\u8F93\\u5165\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315\n      },\n      __self: this\n    })\n  }, {\n    label: \"更新时间\",\n    id: \"createTime\",\n    initialValue: \"\",\n    component: React.createElement(_Input, {\n      placeholder: \"\\u8BF7\\u8F93\\u5165\",\n      readOnly: true,\n      disabled: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321\n      },\n      __self: this\n    })\n  }];\n};\n\nvar FileOrder =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(FileOrder, _React$PureComponent);\n\n  function FileOrder() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, FileOrder);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(FileOrder)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.columns = function (params) {\n      return [{\n        title: \"用户ID\",\n        dataIndex: \"userId\"\n      }, {\n        title: \"文件名\",\n        dataIndex: \"fileName\"\n      }, {\n        title: \"创建时间\",\n        dataIndex: \"createTime\"\n      }, {\n        title: \"错误信息\",\n        dataIndex: \"errCode\"\n      }, {\n        title: \"下载\",\n        key: \"operation\",\n        fixed: \"right\",\n        width: 100,\n        render: function render(text, record) {\n          return React.createElement(\"a\", {\n            onClick: function onClick(e) {\n              _this.handleUpdateBtn(record);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 350\n            },\n            __self: this\n          }, \"\\u4E0B\\u8F7D\");\n        }\n      }];\n    };\n\n    _this.state = {\n      searchLoading: false,\n      selectedRowKeys: [],\n      info: [],\n      updateArr: [],\n      updateModalVisible: false\n    };\n\n    _this.getCounterInfo = function () {\n      var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      // params.token = \"\";\n      // console.log(this.record);\n      params.businessType = _this.record.businessType;\n      http.post({\n        url: \"/counter-info/listAll\",\n        data: params\n      }).then(function (res) {\n        console.log(\"柜台信息\", res); //解析数据字典\n\n        if (res.data.length > 0) {\n          parseDict(res.data); // // showTip(this);\n\n          _this.setState({\n            updateModalVisible: true,\n            selectedRowKeys: [_this.record.counterGwId]\n          }, function () {\n            _this.setState({\n              updateArr: res.data\n            }, function () {\n              _this.refs.counterTable.querySelector(\".ant-table-body\").style.height = \"600px\";\n            });\n          });\n        } else {\n          _message.info(\"柜台用户信息查询结果为空\");\n        }\n      }).catch(function (e) {\n        _message.error(\"柜台用户信息查询失败\");\n      });\n    };\n\n    _this.handleUpdateBtn = function (record) {\n      console.log(\"下载按钮\", record);\n      _this.record = record;\n      _this.isInsert = false;\n      _this.isUpdate = true;\n\n      _this.getCounterInfo();\n    };\n\n    _this.handleUpdateRecord2 = function () {\n      // let formData = form.getFieldsValue();\n      var params = {};\n      params.UuserId = _this.record.uuserId;\n      params.BusinessType = _this.record.businessType; // let dataArr = this.record.businessType.split(\"-\");\n      // console.log(dataArr);\n      // if (dataArr.length == 2) {\n      //     params.BusinessType = dataArr[0] / 1;\n      // }\n\n      params.GwId = _this.state.selectedRowKeys[0] / 1;\n      console.log(\"更新记录\", params); // return;\n\n      http.post({\n        url: \"/counter-user-info/updateUserCounterGw\",\n        data: params\n      }).then(function (res) {\n        console.log(res);\n        _this.isAction = true; //解析数据字典\n\n        if (res.code == 0) {\n          _message.success(\"修改柜台网关Id成功\");\n\n          _this.setState({\n            updateModalVisible: false\n          });\n\n          _this.getData(_this.searchParam, _this.state.pagination); // this.getData();\n\n        } else {\n          _message.error(\"修改柜台网关Id失败\");\n        }\n      });\n    };\n\n    _this.handleUpdateModalCancel = function () {\n      _this.setState({\n        updateModalVisible: false\n      });\n    };\n\n    _this.getData = function () {\n      var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var pagination = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n        current: 1,\n        pageSize: 11\n      };\n      params = _objectSpread({}, params, {\n        pageId: pagination.current,\n        pageNum: pagination.pageSize\n      }); // params.token = \"\";\n\n      http.post({\n        url: \"/counter-user-info/list\",\n        data: params\n      }).then(function (res) {\n        console.log(res); //解析数据字典\n\n        if (res.data.records && res.data.records.length > 0) {\n          // parseDict(res.data);\n          parseDictValue(res.data.records); // showTip(this);\n        } else {\n          _message.info(\"查询结果为空\");\n        }\n\n        var pgn = {\n          current: res.data.current,\n          pageSize: pagination.pageSize,\n          total: res.data.total || 0\n        };\n\n        _this.setState({\n          info: res.data.records,\n          pagination: pgn\n        });\n      });\n    };\n\n    _this.handleSearch = function (params, pagination) {\n      _this.searchParam = params;\n\n      _this.getData(params, pagination);\n    };\n\n    return _this;\n  }\n\n  _createClass(FileOrder, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getData();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var scroll = {\n        x: 1000,\n        y: 445\n      };\n      var info = this.state.info;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 500\n        },\n        __self: this\n      }, React.createElement(CurdComponent // rowKey={\"index\"}\n      // btnText2=\"查全部\"\n      // isShowSearchForm={false}\n      , {\n        onSearchClick: this.handleSearch,\n        getSearchFormFields: getSearchFormFields // searchLoading={this.state.searchLoading}\n        // insertBtnText={\"新增\"} // 不传 就没新增按钮\n        ,\n        getInsertFormFields: getInsertFormFields // insertRecord={this.handleInsertRecord}\n        // col=\"2\"\n        ,\n        width: \"600px\",\n        pagination: this.state.pagination // updateModalText=\"修改柜台网关Id\"\n        ,\n        getUpdateFormFields: getUpdateFormFields // setUpdateModal={this.setUpdateModal}\n        // updateRecord={this.handleUpdateRecord} // 不传 就没编辑\n        // deleteRecord={this.handleDeleteRecord} // 不传 就没删除\n        ,\n        centered: true,\n        columns: this.columns,\n        dataSource: info,\n        scroll: scroll,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 501\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        urlPrefix: \"/counter-user-info\",\n        title: \"\\u67DC\\u53F0\\u7528\\u6237\",\n        sucCallback: this.getData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 524\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return FileOrder;\n}(React.PureComponent);\n\nexport default _Form.create()(FileOrder);","map":{"version":3,"sources":["D:/company/algo-manage/src/algo/modules/manage/pages/fileOrder/index.js"],"names":["React","CurdComponent","SelectOption","Table","getSearchFormFields","label","id","component","getInsertFormFields","rules","required","message","validator","checkLength","trigger","initialValue","dict","businessType","placeholder","allowClear","style","width","clientType","getUpdateFormFields","FileOrder","columns","params","title","dataIndex","key","fixed","render","text","record","e","handleUpdateBtn","state","searchLoading","selectedRowKeys","info","updateArr","updateModalVisible","getCounterInfo","http","post","url","data","then","res","console","log","length","parseDict","setState","counterGwId","refs","counterTable","querySelector","height","catch","error","isInsert","isUpdate","handleUpdateRecord2","UuserId","uuserId","BusinessType","GwId","isAction","code","success","getData","searchParam","pagination","handleUpdateModalCancel","current","pageSize","pageId","pageNum","records","parseDictValue","pgn","total","handleSearch","scroll","x","y","PureComponent","create"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport CurdComponent from \"@/components/CurdComponent\";\r\nimport SelectOption from \"@/components/SelectOption\";\r\nimport { Input, Modal, Form, message, Icon, Tooltip } from \"antd\";\r\nimport Table from \"@/components/Table\";\r\n\r\nlet getSearchFormFields = () => {\r\n    return [\r\n        {\r\n            label: \"文件类型\",\r\n            id: \"fileType\",\r\n            component: <Input placeholder=\"请输入\" />,\r\n        },\r\n        {\r\n            label: \"用户ID\",\r\n            id: \"userId\",\r\n            component: <Input placeholder=\"请输入\" />,\r\n        },\r\n    ];\r\n};\r\nconst getInsertFormFields = () => {\r\n    return [\r\n        {\r\n            label: \"用户ID\",\r\n            id: \"userId\",\r\n            rules: [\r\n                {\r\n                    required: true,\r\n                    message: \"参数不能为空\",\r\n                },\r\n                {\r\n                    validator: checkLength(12),\r\n                    trigger: [\"change\", \"blur\"],\r\n                },\r\n            ],\r\n            component: <Input placeholder=\"请输入\" />,\r\n        },\r\n        {\r\n            label: \"用户名\",\r\n            id: \"userName\",\r\n            rules: [\r\n                {\r\n                    required: true,\r\n                    message: \"参数不能为空\",\r\n                },\r\n                {\r\n                    validator: checkLength(32),\r\n                    trigger: [\"change\", \"blur\"],\r\n                },\r\n            ],\r\n            component: <Input placeholder=\"请输入\" />,\r\n        },\r\n        {\r\n            label: \"用户密码\",\r\n            id: \"userPasswd\",\r\n            initialValue: \"\",\r\n            rules: [\r\n                {\r\n                    required: true,\r\n                    message: \"参数不能为空\",\r\n                },\r\n                {\r\n                    validator: checkLength(32),\r\n                    trigger: [\"change\", \"blur\"],\r\n                },\r\n            ],\r\n            component: <Input placeholder=\"请输入\" />,\r\n        },\r\n        {\r\n            label: \"柜台网关ID\",\r\n            id: \"counterGwId\",\r\n            rules: [\r\n                {\r\n                    required: true,\r\n                    message: \"柜台网关Id不能为空\",\r\n                },\r\n                {\r\n                    validator: checkLength(10),\r\n                    trigger: [\"change\", \"blur\"],\r\n                },\r\n            ],\r\n            component: <Input placeholder=\"请输入\" />,\r\n        },\r\n        {\r\n            label: \"来自柜台\",\r\n            id: \"counterUserId\",\r\n            rules: [\r\n                {\r\n                    required: true,\r\n                    message: \"参数不能为空\",\r\n                },\r\n                {\r\n                    validator: checkLength(10),\r\n                    trigger: [\"change\", \"blur\"],\r\n                },\r\n            ],\r\n            component: <Input placeholder=\"请输入\" />,\r\n        },\r\n        {\r\n            label: \"业务类型\",\r\n            id: \"businessType\",\r\n            initialValue: \"1\",\r\n            rules: [\r\n                {\r\n                    required: true,\r\n                    message: \"参数不能为空\",\r\n                },\r\n            ],\r\n            component: SelectOption(dict.businessType, {\r\n                placeholder: \"请选择\",\r\n                allowClear: false,\r\n                style: {\r\n                    width: 400,\r\n                },\r\n            }),\r\n        },\r\n        // {\r\n        //     label: \"登录状态\",\r\n        //     id: \"loginStatus\",\r\n        //     initialValue: \"0\",\r\n        //     rules: [\r\n        //         {\r\n        //             required: true,\r\n        //             message: \"参数不能为空\",\r\n        //         },\r\n        //     ],\r\n        //     component: SelectOption(dict.loginStatus, {\r\n        //         placeholder: \"请选择\",\r\n        //         allowClear: false,\r\n        //         style: {\r\n        //             width: 400,\r\n        //         },\r\n        //     }),\r\n        // },\r\n        {\r\n            label: \"客户类型\",\r\n            id: \"clientType\",\r\n            initialValue: \"0\",\r\n            rules: [\r\n                {\r\n                    required: true,\r\n                    message: \"参数不能为空\",\r\n                },\r\n            ],\r\n            component: SelectOption(dict.clientType, {\r\n                placeholder: \"请选择\",\r\n                allowClear: false,\r\n                style: {\r\n                    width: 400,\r\n                },\r\n            }),\r\n        },\r\n        {\r\n            label: \"算法平台用户ID\",\r\n            id: \"uuserId\",\r\n            rules: [\r\n                {\r\n                    required: true,\r\n                    message: \"参数不能为空\",\r\n                },\r\n                {\r\n                    validator: checkLength(10),\r\n                    trigger: [\"change\", \"blur\"],\r\n                },\r\n            ],\r\n            component: <Input placeholder=\"请输入\" />,\r\n        },\r\n    ];\r\n};\r\nconst getUpdateFormFields = () => {\r\n    return [\r\n        {\r\n            label: \"用户ID\",\r\n            id: \"userId\",\r\n            rules: [\r\n                {\r\n                    required: true,\r\n                    message: \"参数不能为空\",\r\n                },\r\n                {\r\n                    validator: checkLength(12),\r\n                    trigger: [\"change\", \"blur\"],\r\n                },\r\n            ],\r\n            component: <Input placeholder=\"请输入\" />,\r\n        },\r\n        {\r\n            label: \"用户名\",\r\n            id: \"userName\",\r\n            rules: [\r\n                {\r\n                    required: true,\r\n                    message: \"参数不能为空\",\r\n                },\r\n                {\r\n                    validator: checkLength(32),\r\n                    trigger: [\"change\", \"blur\"],\r\n                },\r\n            ],\r\n            component: <Input placeholder=\"请输入\" />,\r\n        },\r\n        {\r\n            label: \"用户密码\",\r\n            id: \"userPasswd\",\r\n            initialValue: \"\",\r\n            rules: [\r\n                {\r\n                    required: true,\r\n                    message: \"参数不能为空\",\r\n                },\r\n                {\r\n                    validator: checkLength(32),\r\n                    trigger: [\"change\", \"blur\"],\r\n                },\r\n            ],\r\n            component: <Input placeholder=\"请输入\" />,\r\n        },\r\n        {\r\n            label: \"柜台网关ID\",\r\n            id: \"counterGwId\",\r\n            rules: [\r\n                {\r\n                    required: true,\r\n                    message: \"柜台网关Id不能为空\",\r\n                },\r\n                {\r\n                    validator: checkLength(10),\r\n                    trigger: [\"change\", \"blur\"],\r\n                },\r\n            ],\r\n            component: <Input placeholder=\"请输入\" />,\r\n        },\r\n        {\r\n            label: \"来自柜台\",\r\n            id: \"counterUserId\",\r\n            rules: [\r\n                {\r\n                    required: true,\r\n                    message: \"参数不能为空\",\r\n                },\r\n                {\r\n                    validator: checkLength(10),\r\n                    trigger: [\"change\", \"blur\"],\r\n                },\r\n            ],\r\n            component: <Input placeholder=\"请输入\" />,\r\n        },\r\n        {\r\n            label: \"业务类型\",\r\n            id: \"businessType\",\r\n            initialValue: \"1\",\r\n            rules: [\r\n                {\r\n                    required: true,\r\n                    message: \"参数不能为空\",\r\n                },\r\n            ],\r\n            component: SelectOption(dict.businessType, {\r\n                placeholder: \"请选择\",\r\n                allowClear: false,\r\n                style: {\r\n                    width: 400,\r\n                },\r\n            }),\r\n        },\r\n        // {\r\n        //     label: \"登录状态\",\r\n        //     id: \"loginStatus\",\r\n        //     initialValue: \"0\",\r\n        //     rules: [\r\n        //         {\r\n        //             required: true,\r\n        //             message: \"参数不能为空\",\r\n        //         },\r\n        //     ],\r\n        //     component: SelectOption(dict.loginStatus, {\r\n        //         placeholder: \"请选择\",\r\n        //         allowClear: false,\r\n        //         style: {\r\n        //             width: 400,\r\n        //         },\r\n        //     }),\r\n        // },\r\n        {\r\n            label: \"客户类型\",\r\n            id: \"clientType\",\r\n            initialValue: \"0\",\r\n            rules: [\r\n                {\r\n                    required: true,\r\n                    message: \"参数不能为空\",\r\n                },\r\n            ],\r\n            component: SelectOption(dict.clientType, {\r\n                placeholder: \"请选择\",\r\n                allowClear: false,\r\n                style: {\r\n                    width: 400,\r\n                },\r\n            }),\r\n        },\r\n        {\r\n            label: \"算法平台用户ID\",\r\n            id: \"uuserId\",\r\n            rules: [\r\n                {\r\n                    required: true,\r\n                    message: \"参数不能为空\",\r\n                },\r\n                {\r\n                    validator: checkLength(10),\r\n                    trigger: [\"change\", \"blur\"],\r\n                },\r\n            ],\r\n            component: <Input placeholder=\"请输入\" />,\r\n        },\r\n        {\r\n            label: \"更新时间\",\r\n            id: \"createTime\",\r\n            initialValue: \"\",\r\n            component: <Input placeholder=\"请输入\" readOnly disabled />,\r\n        },\r\n    ];\r\n};\r\nclass FileOrder extends React.PureComponent {\r\n    columns = (params) => {\r\n        return [\r\n            {\r\n                title: \"用户ID\",\r\n                dataIndex: \"userId\",\r\n            },\r\n            {\r\n                title: \"文件名\",\r\n                dataIndex: \"fileName\",\r\n            },\r\n            {\r\n                title: \"创建时间\",\r\n                dataIndex: \"createTime\",\r\n            },\r\n            {\r\n                title: \"错误信息\",\r\n                dataIndex: \"errCode\",\r\n            },\r\n            {\r\n                title: \"下载\",\r\n                key: \"operation\",\r\n                fixed: \"right\",\r\n                width: 100,\r\n                render: (text, record) => (\r\n                    <a\r\n                        onClick={(e) => {\r\n                            this.handleUpdateBtn(record);\r\n                        }}\r\n                    >\r\n                        下载\r\n                    </a>\r\n                ),\r\n            },\r\n        ];\r\n    };\r\n\r\n    state = {\r\n        searchLoading: false,\r\n        selectedRowKeys: [],\r\n        info: [],\r\n        updateArr: [],\r\n        updateModalVisible: false,\r\n    };\r\n\r\n    getCounterInfo = (params = {}) => {\r\n        // params.token = \"\";\r\n        // console.log(this.record);\r\n        params.businessType = this.record.businessType;\r\n        http.post({\r\n            url: \"/counter-info/listAll\",\r\n            data: params,\r\n        })\r\n            .then((res) => {\r\n                console.log(\"柜台信息\", res);\r\n                //解析数据字典\r\n                if (res.data.length > 0) {\r\n                    parseDict(res.data);\r\n                    // // showTip(this);\r\n                    this.setState(\r\n                        {\r\n                            updateModalVisible: true,\r\n                            selectedRowKeys: [this.record.counterGwId],\r\n                        },\r\n                        () => {\r\n                            this.setState(\r\n                                {\r\n                                    updateArr: res.data,\r\n                                },\r\n                                () => {\r\n                                    this.refs.counterTable.querySelector(\r\n                                        \".ant-table-body\"\r\n                                    ).style.height = \"600px\";\r\n                                }\r\n                            );\r\n                        }\r\n                    );\r\n                } else {\r\n                    message.info(\"柜台用户信息查询结果为空\");\r\n                }\r\n            })\r\n            .catch((e) => {\r\n                message.error(\"柜台用户信息查询失败\");\r\n            });\r\n    };\r\n    // 下载按钮点击事件\r\n    handleUpdateBtn = (record) => {\r\n        console.log(\"下载按钮\", record);\r\n        this.record = record;\r\n        this.isInsert = false;\r\n        this.isUpdate = true;\r\n        this.getCounterInfo();\r\n    };\r\n\r\n    //更新记录\r\n    handleUpdateRecord2 = () => {\r\n        // let formData = form.getFieldsValue();\r\n        let params = {};\r\n        params.UuserId = this.record.uuserId;\r\n        params.BusinessType = this.record.businessType;\r\n        // let dataArr = this.record.businessType.split(\"-\");\r\n        // console.log(dataArr);\r\n        // if (dataArr.length == 2) {\r\n        //     params.BusinessType = dataArr[0] / 1;\r\n        // }\r\n        params.GwId = this.state.selectedRowKeys[0] / 1;\r\n        console.log(\"更新记录\", params);\r\n        // return;\r\n        http.post({\r\n            url: \"/counter-user-info/updateUserCounterGw\",\r\n            data: params,\r\n        }).then((res) => {\r\n            console.log(res);\r\n            this.isAction = true;\r\n            //解析数据字典\r\n            if (res.code == 0) {\r\n                message.success(\"修改柜台网关Id成功\");\r\n                this.setState({\r\n                    updateModalVisible: false,\r\n                });\r\n                this.getData(this.searchParam, this.state.pagination);\r\n                // this.getData();\r\n            } else {\r\n                message.error(\"修改柜台网关Id失败\");\r\n            }\r\n        });\r\n    };\r\n    handleUpdateModalCancel = () => {\r\n        this.setState({\r\n            updateModalVisible: false,\r\n        });\r\n    };\r\n    getData = (params = {}, pagination = { current: 1, pageSize: 11 }) => {\r\n        params = {\r\n            ...params,\r\n            pageId: pagination.current,\r\n            pageNum: pagination.pageSize,\r\n        };\r\n        // params.token = \"\";\r\n        http.post({\r\n            url: \"/counter-user-info/list\",\r\n            data: params,\r\n        }).then((res) => {\r\n            console.log(res);\r\n            //解析数据字典\r\n            if (res.data.records && res.data.records.length > 0) {\r\n                // parseDict(res.data);\r\n                parseDictValue(res.data.records);\r\n                // showTip(this);\r\n            } else {\r\n                message.info(\"查询结果为空\");\r\n            }\r\n            let pgn = {\r\n                current: res.data.current,\r\n                pageSize: pagination.pageSize,\r\n                total: res.data.total || 0,\r\n            };\r\n            this.setState({\r\n                info: res.data.records,\r\n                pagination: pgn,\r\n            });\r\n        });\r\n    };\r\n    handleSearch = (params, pagination) => {\r\n        this.searchParam = params;\r\n        this.getData(params, pagination);\r\n    };\r\n    componentDidMount() {\r\n        this.getData();\r\n    }\r\n    render() {\r\n        let scroll = { x: 1000, y: 445 };\r\n        let info = this.state.info;\r\n\r\n        return (\r\n            <div>\r\n                <CurdComponent\r\n                    // rowKey={\"index\"}\r\n                    // btnText2=\"查全部\"\r\n                    // isShowSearchForm={false}\r\n                    onSearchClick={this.handleSearch}\r\n                    getSearchFormFields={getSearchFormFields}\r\n                    // searchLoading={this.state.searchLoading}\r\n                    // insertBtnText={\"新增\"} // 不传 就没新增按钮\r\n                    getInsertFormFields={getInsertFormFields}\r\n                    // insertRecord={this.handleInsertRecord}\r\n                    // col=\"2\"\r\n                    width=\"600px\"\r\n                    pagination={this.state.pagination}\r\n                    // updateModalText=\"修改柜台网关Id\"\r\n                    getUpdateFormFields={getUpdateFormFields}\r\n                    // setUpdateModal={this.setUpdateModal}\r\n                    // updateRecord={this.handleUpdateRecord} // 不传 就没编辑\r\n                    // deleteRecord={this.handleDeleteRecord} // 不传 就没删除\r\n                    centered={true}\r\n                    columns={this.columns}\r\n                    dataSource={info}\r\n                    scroll={scroll}\r\n                >\r\n                    <div\r\n                        urlPrefix=\"/counter-user-info\"\r\n                        title=\"柜台用户\"\r\n                        sucCallback={this.getData}\r\n                    ></div>\r\n                </CurdComponent>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Form.create()(FileOrder);\r\n"]},"metadata":{},"sourceType":"module"}