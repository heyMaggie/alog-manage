{"ast":null,"code":"import _defineProperty from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport \"antd/lib/input/style\";\nimport _Input from \"antd/lib/input\";\nvar _jsxFileName = \"D:\\\\company\\\\algo-manage\\\\src\\\\algo\\\\modules\\\\manage\\\\pages\\\\positionQuery\\\\index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport CurdComponent from \"@/components/CurdComponent\";\nimport SelectOption from \"@/components/SelectOption\";\n\nvar getSearchFormFields = function getSearchFormFields() {\n  return [{\n    label: \"用户ID\",\n    id: \"uuserId\",\n    // initialValue: \"\",\n    component: React.createElement(_Input, {\n      placeholder: \"\\u8BF7\\u8F93\\u5165\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    })\n  }, {\n    label: \"证券账户\",\n    id: \"accountId\",\n    // initialValue: \"\",\n    component: React.createElement(_Input, {\n      placeholder: \"\\u8BF7\\u8F93\\u5165\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    })\n  }, {\n    label: \"证券代码\",\n    id: \"securityId\",\n    // initialValue: \"\",\n    component: React.createElement(_Input, {\n      placeholder: \"\\u8BF7\\u8F93\\u5165\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    })\n  }, {\n    label: \"业务类型\",\n    id: \"accountType\",\n    initialValue: \"1\",\n    component: SelectOption(dict.businessTypeSelect, {\n      placeholder: \"请选择\" // allowClear: true,\n\n    })\n  }];\n};\n\nvar getInsertFormFields = function getInsertFormFields() {\n  return [{\n    label: \"用户ID\",\n    id: \"uuserId\",\n    initialValue: \"\",\n    rules: [{\n      required: true,\n      message: \"参数不能为空\"\n    }, {\n      validator: checkLength(10),\n      trigger: [\"change\", \"blur\"]\n    }],\n    component: React.createElement(_Input, {\n      placeholder: \"\\u8BF7\\u8F93\\u5165\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    })\n  }, {\n    label: \"证券账户\",\n    id: \"accountId\",\n    initialValue: \"\",\n    rules: [{\n      required: true,\n      message: \"参数不能为空\"\n    }, {\n      validator: checkLength(12),\n      trigger: [\"change\", \"blur\"]\n    }],\n    component: // <Input placeholder=\"请输入\" readOnly disabled />\n    React.createElement(_Input, {\n      placeholder: \"\\u8BF7\\u8F93\\u5165\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    })\n  }, {\n    label: \"证券代码\",\n    id: \"securityId\",\n    initialValue: \"\",\n    rules: [{\n      required: true,\n      message: \"参数不能为空\"\n    }, {\n      validator: checkLength(8),\n      trigger: [\"change\", \"blur\"]\n    }],\n    component: // <Input placeholder=\"请输入\" readOnly disabled />\n    React.createElement(_Input, {\n      placeholder: \"\\u8BF7\\u8F93\\u5165\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    })\n  }, {\n    label: \"证券代码源\",\n    id: \"securityIdSource\",\n    initialValue: \"\",\n    rules: [{\n      required: true,\n      message: \"参数不能为空\"\n    }, {\n      validator: checkLength(4),\n      trigger: [\"change\", \"blur\"]\n    }],\n    component: React.createElement(_Input, {\n      placeholder: \"\\u8BF7\\u8F93\\u5165\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    })\n  }, {\n    label: \"持仓类型\",\n    id: \"positionType\",\n    initialValue: \"0\",\n    rules: [{\n      required: true,\n      message: \"参数不能为空\"\n    }],\n    component: SelectOption(dict.positionType, {\n      placeholder: \"请选择\",\n      allowClear: false,\n      style: {\n        width: 400\n      }\n    })\n  }, {\n    label: \"持仓数量\",\n    id: \"positionQty\",\n    initialValue: \"\",\n    rules: [{\n      required: true,\n      message: \"参数不能为空\"\n    }, {\n      validator: checkLength(20),\n      trigger: [\"change\", \"blur\"]\n    }],\n    component: React.createElement(_Input, {\n      placeholder: \"\\u8BF7\\u8F93\\u5165\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    })\n  }, {\n    label: \"日初持仓数量\",\n    id: \"originQty\",\n    initialValue: \"\",\n    rules: [{\n      required: true,\n      message: \"参数不能为空\"\n    }, {\n      validator: checkLength(20),\n      trigger: [\"change\", \"blur\"]\n    }],\n    component: // <Input placeholder=\"请输入\" readOnly disabled />\n    React.createElement(_Input, {\n      placeholder: \"\\u8BF7\\u8F93\\u5165\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    })\n  }, {\n    label: \"日初开仓均价\",\n    id: \"originOpenPrice\",\n    initialValue: \"\",\n    rules: [{\n      required: true,\n      message: \"参数不能为空\"\n    }, {\n      validator: checkLength(20),\n      trigger: [\"change\", \"blur\"]\n    }],\n    component: // <Input placeholder=\"请输入\" readOnly disabled />\n    React.createElement(_Input, {\n      placeholder: \"\\u8BF7\\u8F93\\u5165\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    })\n  }, {\n    label: \"可卖数量\",\n    id: \"freeQty\",\n    initialValue: \"\",\n    rules: [{\n      required: true,\n      message: \"参数不能为空\"\n    }, {\n      validator: checkLength(20),\n      trigger: [\"change\", \"blur\"]\n    }],\n    component: React.createElement(_Input, {\n      placeholder: \"\\u8BF7\\u8F93\\u5165\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    })\n  }, {\n    label: \"冻结数量\",\n    id: \"frozenQty\",\n    initialValue: \"\",\n    rules: [{\n      required: true,\n      message: \"参数不能为空\"\n    }, {\n      validator: checkLength(20),\n      trigger: [\"change\", \"blur\"]\n    }],\n    component: React.createElement(_Input, {\n      placeholder: \"\\u8BF7\\u8F93\\u5165\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    })\n  }, {\n    label: \"平均价格\",\n    id: \"avgPrice\",\n    initialValue: \"\",\n    rules: [{\n      required: true,\n      message: \"参数不能为空\"\n    }, {\n      validator: checkLength(20),\n      trigger: [\"change\", \"blur\"]\n    }],\n    component: React.createElement(_Input, {\n      placeholder: \"\\u8BF7\\u8F93\\u5165\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    })\n  }];\n};\n\nvar getUpdateFormFields = function getUpdateFormFields() {\n  return [{\n    label: \"用户ID\",\n    id: \"uuserId\",\n    initialValue: \"\",\n    rules: [{\n      required: true,\n      message: \"参数不能为空\"\n    }, {\n      validator: checkLength(10),\n      trigger: [\"change\", \"blur\"]\n    }],\n    component: React.createElement(_Input, {\n      placeholder: \"\\u8BF7\\u8F93\\u5165\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    })\n  }, {\n    label: \"证券账户\",\n    id: \"accountId\",\n    initialValue: \"\",\n    rules: [{\n      required: true,\n      message: \"参数不能为空\"\n    }, {\n      validator: checkLength(12),\n      trigger: [\"change\", \"blur\"]\n    }],\n    component: // <Input placeholder=\"请输入\" readOnly disabled />\n    React.createElement(_Input, {\n      placeholder: \"\\u8BF7\\u8F93\\u5165\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    })\n  }, {\n    label: \"证券代码\",\n    id: \"securityId\",\n    initialValue: \"\",\n    rules: [{\n      required: true,\n      message: \"参数不能为空\"\n    }, {\n      validator: checkLength(8),\n      trigger: [\"change\", \"blur\"]\n    }],\n    component: // <Input placeholder=\"请输入\" readOnly disabled />\n    React.createElement(_Input, {\n      placeholder: \"\\u8BF7\\u8F93\\u5165\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285\n      },\n      __self: this\n    })\n  }, {\n    label: \"证券代码源\",\n    id: \"securityIdSource\",\n    initialValue: \"\",\n    rules: [{\n      required: true,\n      message: \"参数不能为空\"\n    }, {\n      validator: checkLength(4),\n      trigger: [\"change\", \"blur\"]\n    }],\n    component: React.createElement(_Input, {\n      placeholder: \"\\u8BF7\\u8F93\\u5165\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302\n      },\n      __self: this\n    })\n  }, {\n    label: \"持仓类型\",\n    id: \"positionType\",\n    initialValue: \"0\",\n    rules: [{\n      required: true,\n      message: \"参数不能为空\"\n    }],\n    component: SelectOption(dict.positionType, {\n      placeholder: \"请选择\",\n      allowClear: false,\n      style: {\n        width: 400\n      }\n    })\n  }, {\n    label: \"持仓数量\",\n    id: \"positionQty\",\n    initialValue: \"\",\n    rules: [{\n      required: true,\n      message: \"参数不能为空\"\n    }, {\n      validator: checkLength(20),\n      trigger: [\"change\", \"blur\"]\n    }],\n    component: React.createElement(_Input, {\n      placeholder: \"\\u8BF7\\u8F93\\u5165\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336\n      },\n      __self: this\n    })\n  }, {\n    label: \"日初持仓数量\",\n    id: \"originQty\",\n    initialValue: \"\",\n    rules: [{\n      required: true,\n      message: \"参数不能为空\"\n    }, {\n      validator: checkLength(20),\n      trigger: [\"change\", \"blur\"]\n    }],\n    component: // <Input placeholder=\"请输入\" readOnly disabled />\n    React.createElement(_Input, {\n      placeholder: \"\\u8BF7\\u8F93\\u5165\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354\n      },\n      __self: this\n    })\n  }, {\n    label: \"日初开仓均价\",\n    id: \"originOpenPrice\",\n    initialValue: \"\",\n    rules: [{\n      required: true,\n      message: \"参数不能为空\"\n    }, {\n      validator: checkLength(20),\n      trigger: [\"change\", \"blur\"]\n    }],\n    component: // <Input placeholder=\"请输入\" readOnly disabled />\n    React.createElement(_Input, {\n      placeholder: \"\\u8BF7\\u8F93\\u5165\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373\n      },\n      __self: this\n    })\n  }, {\n    label: \"可卖数量\",\n    id: \"freeQty\",\n    initialValue: \"\",\n    rules: [{\n      required: true,\n      message: \"参数不能为空\"\n    }, {\n      validator: checkLength(20),\n      trigger: [\"change\", \"blur\"]\n    }],\n    component: React.createElement(_Input, {\n      placeholder: \"\\u8BF7\\u8F93\\u5165\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 390\n      },\n      __self: this\n    })\n  }, {\n    label: \"冻结数量\",\n    id: \"frozenQty\",\n    initialValue: \"\",\n    rules: [{\n      required: true,\n      message: \"参数不能为空\"\n    }, {\n      validator: checkLength(20),\n      trigger: [\"change\", \"blur\"]\n    }],\n    component: React.createElement(_Input, {\n      placeholder: \"\\u8BF7\\u8F93\\u5165\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 406\n      },\n      __self: this\n    })\n  }, {\n    label: \"平均价格\",\n    id: \"avgPrice\",\n    initialValue: \"\",\n    rules: [{\n      required: true,\n      message: \"参数不能为空\"\n    }, {\n      validator: checkLength(20),\n      trigger: [\"change\", \"blur\"]\n    }],\n    component: React.createElement(_Input, {\n      placeholder: \"\\u8BF7\\u8F93\\u5165\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 422\n      },\n      __self: this\n    })\n  }, {\n    label: \"更新时间\",\n    id: \"updateTime\",\n    initialValue: \"\",\n    component: React.createElement(_Input, {\n      placeholder: \"\\u8BF7\\u8F93\\u5165\",\n      readOnly: true,\n      disabled: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 428\n      },\n      __self: this\n    })\n  }];\n};\n\nvar columns = function columns() {\n  return [{\n    title: \"用户ID\",\n    dataIndex: \"uuserId\",\n    key: \"uuserId\",\n    width: 80\n  }, {\n    title: \"证券账户\",\n    dataIndex: \"accountId\",\n    key: \"accountId\",\n    width: 120\n  }, {\n    title: \"证券代码\",\n    dataIndex: \"securityId\",\n    key: \"securityId\",\n    width: 100\n  }, {\n    title: \"证券代码源\",\n    dataIndex: \"securityIdSource\",\n    key: \"securityIdSource\",\n    width: 120\n  }, {\n    title: \"持仓类型\",\n    dataIndex: \"positionTypeValue\",\n    key: \"positionType\",\n    width: 100\n  }, {\n    title: \"持仓数量\",\n    dataIndex: \"positionQty\",\n    key: \"positionQty\",\n    width: 100\n  }, {\n    title: \"日初持仓数量\",\n    dataIndex: \"originQty\",\n    width: 200\n  }, {\n    title: \"日初开仓均价\",\n    dataIndex: \"originOpenPrice\",\n    width: 250\n  }, {\n    title: \"可卖数量\",\n    dataIndex: \"freeQty\",\n    key: \"freeQty\",\n    width: 100\n  }, {\n    title: \"冻结数量\",\n    dataIndex: \"frozenQty\",\n    key: \"frozenQty\",\n    width: 100\n  }, {\n    title: \"平均价格\",\n    dataIndex: \"avgPrice\",\n    width: 100\n  }, {\n    title: \"盈亏\",\n    dataIndex: \"profitAndLoss\",\n    key: \"profitAndLoss\",\n    width: 180\n  }, {\n    title: \"收益率\",\n    dataIndex: \"profitRate\",\n    key: \"profitRate\",\n    width: 180\n  }, {\n    title: \"版本号\",\n    dataIndex: \"version\",\n    width: 120\n  }, {\n    title: \"更新时间\",\n    dataIndex: \"updateTime\",\n    key: \"updateTime\",\n    width: 180\n  }];\n};\n\nvar dtColumns = function dtColumns() {\n  return columns();\n};\n\nvar Cccx =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(Cccx, _React$PureComponent);\n\n  function Cccx() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Cccx);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Cccx)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      searchLoading: false,\n      info: [],\n      pagination: {\n        total: 0\n      }\n    };\n\n    _this.handleSearch = function (params, pagination) {\n      // console.log(\"获取搜索栏数据 \", params);\n      _this.getData(params, pagination);\n    };\n\n    _this.getData = function () {\n      var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var pagination = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n        current: 1,\n        pageSize: 13\n      };\n      params = _objectSpread({}, params, {\n        pageId: pagination.current,\n        pageNum: pagination.pageSize\n      }); // console.log(pagination);\n\n      http.post({\n        url: \"/user-position/list\",\n        data: params\n      }).then(function (res) {\n        console.log(res); //解析数据字典\n\n        if (res.data.records && res.data.records.length > 0) {\n          res.data.records.forEach(function (item) {\n            return item.rnd = Math.random();\n          });\n          console.log(res.data.records);\n          parseDictValue(res.data.records); // showTip(this);\n        } else {\n          message.info(\"查询结果为空\");\n        }\n\n        var pgn = {\n          current: res.data.current,\n          pageSize: pagination.pageSize,\n          total: res.data.total || 0\n        };\n\n        _this.setState({\n          info: res.data.records,\n          pagination: pgn\n        });\n      }); // this.setState({ info: msg.content, pagination: pgn });\n    };\n\n    _this.handleInsertRecord = function (fromData) {\n      console.log(\"新增接口\", fromData);\n      var params = {\n        UuserId: fromData.uuserId / 1,\n        AccountId: fromData.accountId,\n        SecurityId: fromData.securityId,\n        SecurityIdSource: fromData.securityIdSource,\n        PositionType: fromData.positionType / 1,\n        PositionQty: fromData.positionQty * 100,\n        OriginQty: fromData.originQty * 100,\n        OriginOpenPrice: fromData.originOpenPrice * 10000,\n        FreeQty: fromData.freeQty * 100,\n        FrozenQty: fromData.frozenQty * 100,\n        AvgPrice: fromData.avgPrice * 10000\n      };\n      http.post({\n        url: \"/user-position/addUserPosition\",\n        data: params\n      }).then(function (res) {\n        var msg = res.message;\n\n        if (res.code == 0) {\n          message.success(msg); // this.getData();\n        } else if (res.code == 20000) {\n          message.error(msg.substring(msg.indexOf(\"[\") + 1, msg.lastIndexOf(\"]\")));\n        } else {\n          message.error(msg);\n        }\n\n        _this.isAction = true;\n      });\n    };\n\n    _this.handleUpdateRecord = function (_ref) {\n      var form = _ref.form;\n      console.log(form.getFieldsValue(), _this.record); // return;\n\n      var fromData = form.getFieldsValue();\n      var params = {\n        Id: _this.record.id / 1,\n        UuserId: fromData.uuserId,\n        AccountId: fromData.accountId,\n        SecurityId: fromData.securityId,\n        SecurityIdSource: fromData.securityIdSource,\n        PositionType: fromData.positionType / 1,\n        PositionQty: fromData.positionQty * 100,\n        OriginQty: fromData.originQty * 100,\n        OriginOpenPrice: fromData.originOpenPrice * 10000,\n        FreeQty: fromData.freeQty * 100,\n        FrozenQty: fromData.frozenQty * 100,\n        AvgPrice: fromData.avgPrice * 10000\n      }; // 发送更新请求\n\n      http.post({\n        url: \"/user-position/updateUserPosition\",\n        data: params\n      }).then(function (res) {\n        var msg = res.message;\n\n        if (res.code == 0) {\n          message.success(msg); // this.getData();\n        } else if (res.code == 20000) {\n          message.error(msg.substring(msg.indexOf(\"[\") + 1, msg.lastIndexOf(\"]\")));\n        } else {\n          message.error(msg);\n        }\n\n        _this.isAction = true;\n      });\n    };\n\n    _this.setUpdateModal = function (_ref2) {\n      var form = _ref2.form,\n          record = _ref2.record;\n      _this.record = record;\n      form.setFieldsValue({\n        // userName1: record.v_gthth,\n        // id: record.id,\n        uuserId: record.uuserId,\n        accountId: record.accountId,\n        securityId: record.securityId,\n        securityIdSource: record.securityIdSource,\n        positionType: record.positionType + \"\",\n        positionQty: record.positionQty,\n        originQty: record.originQty,\n        originOpenPrice: record.originOpenPrice,\n        freeQty: record.freeQty,\n        frozenQty: record.frozenQty,\n        avgPrice: record.avgPrice,\n        // profitAndLoss: record.profitAndLoss,\n        // profitRate: record.profitRate,\n        // version: record.version,\n        updateTime: record.updateTime\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Cccx, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getData();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var scroll = {\n        x: 2500,\n        y: 445\n      };\n      var info = this.state.info;\n      return React.createElement(CurdComponent // isShowSearchForm={false}\n      , {\n        onSearchClick: this.handleSearch,\n        getSearchFormFields: getSearchFormFields,\n        searchLoading: this.state.searchLoading,\n        isShowInsert: false,\n        width: \"789px\",\n        rowKey: \"rnd\",\n        pagination: this.state.pagination,\n        dataSource: info,\n        insertBtnText: \"新增\" // 不传 就没新增按钮\n        ,\n        getInsertFormFields: getInsertFormFields,\n        insertRecord: this.handleInsertRecord,\n        getUpdateFormFields: getUpdateFormFields,\n        setUpdateModal: this.setUpdateModal,\n        updateRecord: this.handleUpdateRecord // 不传 就没编辑\n        // deleteRecord={this.handleDeleteRecord}\n        ,\n        centered: true,\n        columns: columns,\n        scroll: scroll //dtColumns={dtColumns()} //详情列表\n        ,\n        dtCol: 2 //详情列数\n        // dtWidth={800} //详情弹窗宽度\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 674\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        urlPrefix: \"/user-position\",\n        noUpload: true,\n        title: \"\\u6301\\u4ED3\\u4FE1\\u606F\",\n        sucCallback: this.getData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 698\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Cccx;\n}(React.PureComponent);\n\nexport { Cccx as default };","map":{"version":3,"sources":["D:/company/algo-manage/src/algo/modules/manage/pages/positionQuery/index.js"],"names":["React","CurdComponent","SelectOption","getSearchFormFields","label","id","component","initialValue","dict","businessTypeSelect","placeholder","getInsertFormFields","rules","required","message","validator","checkLength","trigger","positionType","allowClear","style","width","getUpdateFormFields","columns","title","dataIndex","key","dtColumns","Cccx","state","searchLoading","info","pagination","total","handleSearch","params","getData","current","pageSize","pageId","pageNum","http","post","url","data","then","res","console","log","records","length","forEach","item","rnd","Math","random","parseDictValue","pgn","setState","handleInsertRecord","fromData","UuserId","uuserId","AccountId","accountId","SecurityId","securityId","SecurityIdSource","securityIdSource","PositionType","PositionQty","positionQty","OriginQty","originQty","OriginOpenPrice","originOpenPrice","FreeQty","freeQty","FrozenQty","frozenQty","AvgPrice","avgPrice","msg","code","success","error","substring","indexOf","lastIndexOf","isAction","handleUpdateRecord","form","getFieldsValue","record","Id","setUpdateModal","setFieldsValue","updateTime","scroll","x","y","PureComponent"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,OAAOC,aAAP,MAA0B,4BAA1B;AACA,OAAOC,YAAP,MAAyB,2BAAzB;;AAEA,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,GAAM;AAC9B,SAAO,CACH;AACIC,IAAAA,KAAK,EAAE,MADX;AAEIC,IAAAA,EAAE,EAAE,SAFR;AAGI;AACAC,IAAAA,SAAS,EAAE;AAAO,MAAA,WAAW,EAAC,oBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJf,GADG,EAOH;AACIF,IAAAA,KAAK,EAAE,MADX;AAEIC,IAAAA,EAAE,EAAE,WAFR;AAGI;AACAC,IAAAA,SAAS,EAAE;AAAO,MAAA,WAAW,EAAC,oBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJf,GAPG,EAaH;AACIF,IAAAA,KAAK,EAAE,MADX;AAEIC,IAAAA,EAAE,EAAE,YAFR;AAGI;AACAC,IAAAA,SAAS,EAAE;AAAO,MAAA,WAAW,EAAC,oBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJf,GAbG,EAmBH;AACIF,IAAAA,KAAK,EAAE,MADX;AAEIC,IAAAA,EAAE,EAAE,aAFR;AAGIE,IAAAA,YAAY,EAAE,GAHlB;AAIID,IAAAA,SAAS,EAAEJ,YAAY,CAACM,IAAI,CAACC,kBAAN,EAA0B;AAC7CC,MAAAA,WAAW,EAAE,KADgC,CAE7C;;AAF6C,KAA1B;AAJ3B,GAnBG,CAAP;AA6BH,CA9BD;;AA+BA,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,GAAM;AAC9B,SAAO,CACH;AACIP,IAAAA,KAAK,EAAE,MADX;AAEIC,IAAAA,EAAE,EAAE,SAFR;AAGIE,IAAAA,YAAY,EAAE,EAHlB;AAIIK,IAAAA,KAAK,EAAE,CACH;AACIC,MAAAA,QAAQ,EAAE,IADd;AAEIC,MAAAA,OAAO,EAAE;AAFb,KADG,EAKH;AACIC,MAAAA,SAAS,EAAEC,WAAW,CAAC,EAAD,CAD1B;AAEIC,MAAAA,OAAO,EAAE,CAAC,QAAD,EAAW,MAAX;AAFb,KALG,CAJX;AAcIX,IAAAA,SAAS,EAAE;AAAO,MAAA,WAAW,EAAC,oBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAdf,GADG,EAiBH;AACIF,IAAAA,KAAK,EAAE,MADX;AAEIC,IAAAA,EAAE,EAAE,WAFR;AAGIE,IAAAA,YAAY,EAAE,EAHlB;AAIIK,IAAAA,KAAK,EAAE,CACH;AACIC,MAAAA,QAAQ,EAAE,IADd;AAEIC,MAAAA,OAAO,EAAE;AAFb,KADG,EAKH;AACIC,MAAAA,SAAS,EAAEC,WAAW,CAAC,EAAD,CAD1B;AAEIC,MAAAA,OAAO,EAAE,CAAC,QAAD,EAAW,MAAX;AAFb,KALG,CAJX;AAcIX,IAAAA,SAAS,EACL;AACA;AAAO,MAAA,WAAW,EAAC,oBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAhBR,GAjBG,EAoCH;AACIF,IAAAA,KAAK,EAAE,MADX;AAEIC,IAAAA,EAAE,EAAE,YAFR;AAGIE,IAAAA,YAAY,EAAE,EAHlB;AAIIK,IAAAA,KAAK,EAAE,CACH;AACIC,MAAAA,QAAQ,EAAE,IADd;AAEIC,MAAAA,OAAO,EAAE;AAFb,KADG,EAKH;AACIC,MAAAA,SAAS,EAAEC,WAAW,CAAC,CAAD,CAD1B;AAEIC,MAAAA,OAAO,EAAE,CAAC,QAAD,EAAW,MAAX;AAFb,KALG,CAJX;AAcIX,IAAAA,SAAS,EACL;AACA;AAAO,MAAA,WAAW,EAAC,oBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAhBR,GApCG,EAuDH;AACIF,IAAAA,KAAK,EAAE,OADX;AAEIC,IAAAA,EAAE,EAAE,kBAFR;AAGIE,IAAAA,YAAY,EAAE,EAHlB;AAIIK,IAAAA,KAAK,EAAE,CACH;AACIC,MAAAA,QAAQ,EAAE,IADd;AAEIC,MAAAA,OAAO,EAAE;AAFb,KADG,EAKH;AACIC,MAAAA,SAAS,EAAEC,WAAW,CAAC,CAAD,CAD1B;AAEIC,MAAAA,OAAO,EAAE,CAAC,QAAD,EAAW,MAAX;AAFb,KALG,CAJX;AAcIX,IAAAA,SAAS,EAAE;AAAO,MAAA,WAAW,EAAC,oBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAdf,GAvDG,EAuEH;AACIF,IAAAA,KAAK,EAAE,MADX;AAEIC,IAAAA,EAAE,EAAE,cAFR;AAGIE,IAAAA,YAAY,EAAE,GAHlB;AAIIK,IAAAA,KAAK,EAAE,CACH;AACIC,MAAAA,QAAQ,EAAE,IADd;AAEIC,MAAAA,OAAO,EAAE;AAFb,KADG,CAJX;AAUIR,IAAAA,SAAS,EAAEJ,YAAY,CAACM,IAAI,CAACU,YAAN,EAAoB;AACvCR,MAAAA,WAAW,EAAE,KAD0B;AAEvCS,MAAAA,UAAU,EAAE,KAF2B;AAGvCC,MAAAA,KAAK,EAAE;AACHC,QAAAA,KAAK,EAAE;AADJ;AAHgC,KAApB;AAV3B,GAvEG,EAyFH;AACIjB,IAAAA,KAAK,EAAE,MADX;AAEIC,IAAAA,EAAE,EAAE,aAFR;AAGIE,IAAAA,YAAY,EAAE,EAHlB;AAIIK,IAAAA,KAAK,EAAE,CACH;AACIC,MAAAA,QAAQ,EAAE,IADd;AAEIC,MAAAA,OAAO,EAAE;AAFb,KADG,EAKH;AACIC,MAAAA,SAAS,EAAEC,WAAW,CAAC,EAAD,CAD1B;AAEIC,MAAAA,OAAO,EAAE,CAAC,QAAD,EAAW,MAAX;AAFb,KALG,CAJX;AAcIX,IAAAA,SAAS,EAAE;AAAO,MAAA,WAAW,EAAC,oBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAdf,GAzFG,EAyGH;AACIF,IAAAA,KAAK,EAAE,QADX;AAEIC,IAAAA,EAAE,EAAE,WAFR;AAGIE,IAAAA,YAAY,EAAE,EAHlB;AAIIK,IAAAA,KAAK,EAAE,CACH;AACIC,MAAAA,QAAQ,EAAE,IADd;AAEIC,MAAAA,OAAO,EAAE;AAFb,KADG,EAKH;AACIC,MAAAA,SAAS,EAAEC,WAAW,CAAC,EAAD,CAD1B;AAEIC,MAAAA,OAAO,EAAE,CAAC,QAAD,EAAW,MAAX;AAFb,KALG,CAJX;AAcIX,IAAAA,SAAS,EACL;AACA;AAAO,MAAA,WAAW,EAAC,oBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAhBR,GAzGG,EA4HH;AACIF,IAAAA,KAAK,EAAE,QADX;AAEIC,IAAAA,EAAE,EAAE,iBAFR;AAGIE,IAAAA,YAAY,EAAE,EAHlB;AAIIK,IAAAA,KAAK,EAAE,CACH;AACIC,MAAAA,QAAQ,EAAE,IADd;AAEIC,MAAAA,OAAO,EAAE;AAFb,KADG,EAKH;AACIC,MAAAA,SAAS,EAAEC,WAAW,CAAC,EAAD,CAD1B;AAEIC,MAAAA,OAAO,EAAE,CAAC,QAAD,EAAW,MAAX;AAFb,KALG,CAJX;AAcIX,IAAAA,SAAS,EACL;AACA;AAAO,MAAA,WAAW,EAAC,oBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAhBR,GA5HG,EA+IH;AACIF,IAAAA,KAAK,EAAE,MADX;AAEIC,IAAAA,EAAE,EAAE,SAFR;AAGIE,IAAAA,YAAY,EAAE,EAHlB;AAIIK,IAAAA,KAAK,EAAE,CACH;AACIC,MAAAA,QAAQ,EAAE,IADd;AAEIC,MAAAA,OAAO,EAAE;AAFb,KADG,EAKH;AACIC,MAAAA,SAAS,EAAEC,WAAW,CAAC,EAAD,CAD1B;AAEIC,MAAAA,OAAO,EAAE,CAAC,QAAD,EAAW,MAAX;AAFb,KALG,CAJX;AAcIX,IAAAA,SAAS,EAAE;AAAO,MAAA,WAAW,EAAC,oBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAdf,GA/IG,EA+JH;AACIF,IAAAA,KAAK,EAAE,MADX;AAEIC,IAAAA,EAAE,EAAE,WAFR;AAGIE,IAAAA,YAAY,EAAE,EAHlB;AAIIK,IAAAA,KAAK,EAAE,CACH;AACIC,MAAAA,QAAQ,EAAE,IADd;AAEIC,MAAAA,OAAO,EAAE;AAFb,KADG,EAKH;AACIC,MAAAA,SAAS,EAAEC,WAAW,CAAC,EAAD,CAD1B;AAEIC,MAAAA,OAAO,EAAE,CAAC,QAAD,EAAW,MAAX;AAFb,KALG,CAJX;AAcIX,IAAAA,SAAS,EAAE;AAAO,MAAA,WAAW,EAAC,oBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAdf,GA/JG,EA+KH;AACIF,IAAAA,KAAK,EAAE,MADX;AAEIC,IAAAA,EAAE,EAAE,UAFR;AAGIE,IAAAA,YAAY,EAAE,EAHlB;AAIIK,IAAAA,KAAK,EAAE,CACH;AACIC,MAAAA,QAAQ,EAAE,IADd;AAEIC,MAAAA,OAAO,EAAE;AAFb,KADG,EAKH;AACIC,MAAAA,SAAS,EAAEC,WAAW,CAAC,EAAD,CAD1B;AAEIC,MAAAA,OAAO,EAAE,CAAC,QAAD,EAAW,MAAX;AAFb,KALG,CAJX;AAcIX,IAAAA,SAAS,EAAE;AAAO,MAAA,WAAW,EAAC,oBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAdf,GA/KG,CAAP;AAgMH,CAjMD;;AAkMA,IAAMgB,mBAAmB,GAAG,SAAtBA,mBAAsB,GAAM;AAC9B,SAAO,CACH;AACIlB,IAAAA,KAAK,EAAE,MADX;AAEIC,IAAAA,EAAE,EAAE,SAFR;AAGIE,IAAAA,YAAY,EAAE,EAHlB;AAIIK,IAAAA,KAAK,EAAE,CACH;AACIC,MAAAA,QAAQ,EAAE,IADd;AAEIC,MAAAA,OAAO,EAAE;AAFb,KADG,EAKH;AACIC,MAAAA,SAAS,EAAEC,WAAW,CAAC,EAAD,CAD1B;AAEIC,MAAAA,OAAO,EAAE,CAAC,QAAD,EAAW,MAAX;AAFb,KALG,CAJX;AAcIX,IAAAA,SAAS,EAAE;AAAO,MAAA,WAAW,EAAC,oBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAdf,GADG,EAiBH;AACIF,IAAAA,KAAK,EAAE,MADX;AAEIC,IAAAA,EAAE,EAAE,WAFR;AAGIE,IAAAA,YAAY,EAAE,EAHlB;AAIIK,IAAAA,KAAK,EAAE,CACH;AACIC,MAAAA,QAAQ,EAAE,IADd;AAEIC,MAAAA,OAAO,EAAE;AAFb,KADG,EAKH;AACIC,MAAAA,SAAS,EAAEC,WAAW,CAAC,EAAD,CAD1B;AAEIC,MAAAA,OAAO,EAAE,CAAC,QAAD,EAAW,MAAX;AAFb,KALG,CAJX;AAcIX,IAAAA,SAAS,EACL;AACA;AAAO,MAAA,WAAW,EAAC,oBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAhBR,GAjBG,EAoCH;AACIF,IAAAA,KAAK,EAAE,MADX;AAEIC,IAAAA,EAAE,EAAE,YAFR;AAGIE,IAAAA,YAAY,EAAE,EAHlB;AAIIK,IAAAA,KAAK,EAAE,CACH;AACIC,MAAAA,QAAQ,EAAE,IADd;AAEIC,MAAAA,OAAO,EAAE;AAFb,KADG,EAKH;AACIC,MAAAA,SAAS,EAAEC,WAAW,CAAC,CAAD,CAD1B;AAEIC,MAAAA,OAAO,EAAE,CAAC,QAAD,EAAW,MAAX;AAFb,KALG,CAJX;AAcIX,IAAAA,SAAS,EACL;AACA;AAAO,MAAA,WAAW,EAAC,oBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAhBR,GApCG,EAuDH;AACIF,IAAAA,KAAK,EAAE,OADX;AAEIC,IAAAA,EAAE,EAAE,kBAFR;AAGIE,IAAAA,YAAY,EAAE,EAHlB;AAIIK,IAAAA,KAAK,EAAE,CACH;AACIC,MAAAA,QAAQ,EAAE,IADd;AAEIC,MAAAA,OAAO,EAAE;AAFb,KADG,EAKH;AACIC,MAAAA,SAAS,EAAEC,WAAW,CAAC,CAAD,CAD1B;AAEIC,MAAAA,OAAO,EAAE,CAAC,QAAD,EAAW,MAAX;AAFb,KALG,CAJX;AAcIX,IAAAA,SAAS,EAAE;AAAO,MAAA,WAAW,EAAC,oBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAdf,GAvDG,EAuEH;AACIF,IAAAA,KAAK,EAAE,MADX;AAEIC,IAAAA,EAAE,EAAE,cAFR;AAGIE,IAAAA,YAAY,EAAE,GAHlB;AAIIK,IAAAA,KAAK,EAAE,CACH;AACIC,MAAAA,QAAQ,EAAE,IADd;AAEIC,MAAAA,OAAO,EAAE;AAFb,KADG,CAJX;AAUIR,IAAAA,SAAS,EAAEJ,YAAY,CAACM,IAAI,CAACU,YAAN,EAAoB;AACvCR,MAAAA,WAAW,EAAE,KAD0B;AAEvCS,MAAAA,UAAU,EAAE,KAF2B;AAGvCC,MAAAA,KAAK,EAAE;AACHC,QAAAA,KAAK,EAAE;AADJ;AAHgC,KAApB;AAV3B,GAvEG,EAyFH;AACIjB,IAAAA,KAAK,EAAE,MADX;AAEIC,IAAAA,EAAE,EAAE,aAFR;AAGIE,IAAAA,YAAY,EAAE,EAHlB;AAIIK,IAAAA,KAAK,EAAE,CACH;AACIC,MAAAA,QAAQ,EAAE,IADd;AAEIC,MAAAA,OAAO,EAAE;AAFb,KADG,EAKH;AACIC,MAAAA,SAAS,EAAEC,WAAW,CAAC,EAAD,CAD1B;AAEIC,MAAAA,OAAO,EAAE,CAAC,QAAD,EAAW,MAAX;AAFb,KALG,CAJX;AAcIX,IAAAA,SAAS,EAAE;AAAO,MAAA,WAAW,EAAC,oBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAdf,GAzFG,EAyGH;AACIF,IAAAA,KAAK,EAAE,QADX;AAEIC,IAAAA,EAAE,EAAE,WAFR;AAGIE,IAAAA,YAAY,EAAE,EAHlB;AAIIK,IAAAA,KAAK,EAAE,CACH;AACIC,MAAAA,QAAQ,EAAE,IADd;AAEIC,MAAAA,OAAO,EAAE;AAFb,KADG,EAKH;AACIC,MAAAA,SAAS,EAAEC,WAAW,CAAC,EAAD,CAD1B;AAEIC,MAAAA,OAAO,EAAE,CAAC,QAAD,EAAW,MAAX;AAFb,KALG,CAJX;AAcIX,IAAAA,SAAS,EACL;AACA;AAAO,MAAA,WAAW,EAAC,oBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAhBR,GAzGG,EA4HH;AACIF,IAAAA,KAAK,EAAE,QADX;AAEIC,IAAAA,EAAE,EAAE,iBAFR;AAGIE,IAAAA,YAAY,EAAE,EAHlB;AAIIK,IAAAA,KAAK,EAAE,CACH;AACIC,MAAAA,QAAQ,EAAE,IADd;AAEIC,MAAAA,OAAO,EAAE;AAFb,KADG,EAKH;AACIC,MAAAA,SAAS,EAAEC,WAAW,CAAC,EAAD,CAD1B;AAEIC,MAAAA,OAAO,EAAE,CAAC,QAAD,EAAW,MAAX;AAFb,KALG,CAJX;AAcIX,IAAAA,SAAS,EACL;AACA;AAAO,MAAA,WAAW,EAAC,oBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAhBR,GA5HG,EA+IH;AACIF,IAAAA,KAAK,EAAE,MADX;AAEIC,IAAAA,EAAE,EAAE,SAFR;AAGIE,IAAAA,YAAY,EAAE,EAHlB;AAIIK,IAAAA,KAAK,EAAE,CACH;AACIC,MAAAA,QAAQ,EAAE,IADd;AAEIC,MAAAA,OAAO,EAAE;AAFb,KADG,EAKH;AACIC,MAAAA,SAAS,EAAEC,WAAW,CAAC,EAAD,CAD1B;AAEIC,MAAAA,OAAO,EAAE,CAAC,QAAD,EAAW,MAAX;AAFb,KALG,CAJX;AAcIX,IAAAA,SAAS,EAAE;AAAO,MAAA,WAAW,EAAC,oBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAdf,GA/IG,EA+JH;AACIF,IAAAA,KAAK,EAAE,MADX;AAEIC,IAAAA,EAAE,EAAE,WAFR;AAGIE,IAAAA,YAAY,EAAE,EAHlB;AAIIK,IAAAA,KAAK,EAAE,CACH;AACIC,MAAAA,QAAQ,EAAE,IADd;AAEIC,MAAAA,OAAO,EAAE;AAFb,KADG,EAKH;AACIC,MAAAA,SAAS,EAAEC,WAAW,CAAC,EAAD,CAD1B;AAEIC,MAAAA,OAAO,EAAE,CAAC,QAAD,EAAW,MAAX;AAFb,KALG,CAJX;AAcIX,IAAAA,SAAS,EAAE;AAAO,MAAA,WAAW,EAAC,oBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAdf,GA/JG,EA+KH;AACIF,IAAAA,KAAK,EAAE,MADX;AAEIC,IAAAA,EAAE,EAAE,UAFR;AAGIE,IAAAA,YAAY,EAAE,EAHlB;AAIIK,IAAAA,KAAK,EAAE,CACH;AACIC,MAAAA,QAAQ,EAAE,IADd;AAEIC,MAAAA,OAAO,EAAE;AAFb,KADG,EAKH;AACIC,MAAAA,SAAS,EAAEC,WAAW,CAAC,EAAD,CAD1B;AAEIC,MAAAA,OAAO,EAAE,CAAC,QAAD,EAAW,MAAX;AAFb,KALG,CAJX;AAcIX,IAAAA,SAAS,EAAE;AAAO,MAAA,WAAW,EAAC,oBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAdf,GA/KG,EA+LH;AACIF,IAAAA,KAAK,EAAE,MADX;AAEIC,IAAAA,EAAE,EAAE,YAFR;AAGIE,IAAAA,YAAY,EAAE,EAHlB;AAIID,IAAAA,SAAS,EAAE;AAAO,MAAA,WAAW,EAAC,oBAAnB;AAAyB,MAAA,QAAQ,MAAjC;AAAkC,MAAA,QAAQ,MAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJf,GA/LG,CAAP;AAsMH,CAvMD;;AAyMA,IAAIiB,OAAO,GAAG,SAAVA,OAAU,GAAM;AAChB,SAAO,CACH;AACIC,IAAAA,KAAK,EAAE,MADX;AAEIC,IAAAA,SAAS,EAAE,SAFf;AAGIC,IAAAA,GAAG,EAAE,SAHT;AAIIL,IAAAA,KAAK,EAAE;AAJX,GADG,EAOH;AACIG,IAAAA,KAAK,EAAE,MADX;AAEIC,IAAAA,SAAS,EAAE,WAFf;AAGIC,IAAAA,GAAG,EAAE,WAHT;AAIIL,IAAAA,KAAK,EAAE;AAJX,GAPG,EAaH;AACIG,IAAAA,KAAK,EAAE,MADX;AAEIC,IAAAA,SAAS,EAAE,YAFf;AAGIC,IAAAA,GAAG,EAAE,YAHT;AAIIL,IAAAA,KAAK,EAAE;AAJX,GAbG,EAmBH;AACIG,IAAAA,KAAK,EAAE,OADX;AAEIC,IAAAA,SAAS,EAAE,kBAFf;AAGIC,IAAAA,GAAG,EAAE,kBAHT;AAIIL,IAAAA,KAAK,EAAE;AAJX,GAnBG,EAyBH;AACIG,IAAAA,KAAK,EAAE,MADX;AAEIC,IAAAA,SAAS,EAAE,mBAFf;AAGIC,IAAAA,GAAG,EAAE,cAHT;AAIIL,IAAAA,KAAK,EAAE;AAJX,GAzBG,EA+BH;AACIG,IAAAA,KAAK,EAAE,MADX;AAEIC,IAAAA,SAAS,EAAE,aAFf;AAGIC,IAAAA,GAAG,EAAE,aAHT;AAIIL,IAAAA,KAAK,EAAE;AAJX,GA/BG,EAqCH;AACIG,IAAAA,KAAK,EAAE,QADX;AAEIC,IAAAA,SAAS,EAAE,WAFf;AAGIJ,IAAAA,KAAK,EAAE;AAHX,GArCG,EA0CH;AACIG,IAAAA,KAAK,EAAE,QADX;AAEIC,IAAAA,SAAS,EAAE,iBAFf;AAGIJ,IAAAA,KAAK,EAAE;AAHX,GA1CG,EA+CH;AACIG,IAAAA,KAAK,EAAE,MADX;AAEIC,IAAAA,SAAS,EAAE,SAFf;AAGIC,IAAAA,GAAG,EAAE,SAHT;AAIIL,IAAAA,KAAK,EAAE;AAJX,GA/CG,EAqDH;AACIG,IAAAA,KAAK,EAAE,MADX;AAEIC,IAAAA,SAAS,EAAE,WAFf;AAGIC,IAAAA,GAAG,EAAE,WAHT;AAIIL,IAAAA,KAAK,EAAE;AAJX,GArDG,EA2DH;AACIG,IAAAA,KAAK,EAAE,MADX;AAEIC,IAAAA,SAAS,EAAE,UAFf;AAGIJ,IAAAA,KAAK,EAAE;AAHX,GA3DG,EAgEH;AACIG,IAAAA,KAAK,EAAE,IADX;AAEIC,IAAAA,SAAS,EAAE,eAFf;AAGIC,IAAAA,GAAG,EAAE,eAHT;AAIIL,IAAAA,KAAK,EAAE;AAJX,GAhEG,EAsEH;AACIG,IAAAA,KAAK,EAAE,KADX;AAEIC,IAAAA,SAAS,EAAE,YAFf;AAGIC,IAAAA,GAAG,EAAE,YAHT;AAIIL,IAAAA,KAAK,EAAE;AAJX,GAtEG,EA4EH;AACIG,IAAAA,KAAK,EAAE,KADX;AAEIC,IAAAA,SAAS,EAAE,SAFf;AAGIJ,IAAAA,KAAK,EAAE;AAHX,GA5EG,EAiFH;AACIG,IAAAA,KAAK,EAAE,MADX;AAEIC,IAAAA,SAAS,EAAE,YAFf;AAGIC,IAAAA,GAAG,EAAE,YAHT;AAIIL,IAAAA,KAAK,EAAE;AAJX,GAjFG,CAAP;AAwFH,CAzFD;;AA0FA,IAAIM,SAAS,GAAG,SAAZA,SAAY,GAAM;AAClB,SAAOJ,OAAO,EAAd;AACH,CAFD;;IAGqBK,I;;;;;;;;;;;;;;;;;UACjBC,K,GAAQ;AACJC,MAAAA,aAAa,EAAE,KADX;AAEJC,MAAAA,IAAI,EAAE,EAFF;AAGJC,MAAAA,UAAU,EAAE;AAAEC,QAAAA,KAAK,EAAE;AAAT;AAHR,K;;UAKRC,Y,GAAe,UAACC,MAAD,EAASH,UAAT,EAAwB;AACnC;AACA,YAAKI,OAAL,CAAaD,MAAb,EAAqBH,UAArB;AACH,K;;UACDI,O,GAAU,YAA4D;AAAA,UAA3DD,MAA2D,uEAAlD,EAAkD;AAAA,UAA9CH,UAA8C,uEAAjC;AAAEK,QAAAA,OAAO,EAAE,CAAX;AAAcC,QAAAA,QAAQ,EAAE;AAAxB,OAAiC;AAClEH,MAAAA,MAAM,qBACCA,MADD;AAEFI,QAAAA,MAAM,EAAEP,UAAU,CAACK,OAFjB;AAGFG,QAAAA,OAAO,EAAER,UAAU,CAACM;AAHlB,QAAN,CADkE,CAMlE;;AACAG,MAAAA,IAAI,CAACC,IAAL,CAAU;AACNC,QAAAA,GAAG,EAAE,qBADC;AAENC,QAAAA,IAAI,EAAET;AAFA,OAAV,EAGGU,IAHH,CAGQ,UAACC,GAAD,EAAS;AACbC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ,EADa,CAEb;;AACA,YAAIA,GAAG,CAACF,IAAJ,CAASK,OAAT,IAAoBH,GAAG,CAACF,IAAJ,CAASK,OAAT,CAAiBC,MAAjB,GAA0B,CAAlD,EAAqD;AACjDJ,UAAAA,GAAG,CAACF,IAAJ,CAASK,OAAT,CAAiBE,OAAjB,CAAyB,UAACC,IAAD;AAAA,mBAAWA,IAAI,CAACC,GAAL,GAAWC,IAAI,CAACC,MAAL,EAAtB;AAAA,WAAzB;AACAR,UAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACF,IAAJ,CAASK,OAArB;AACAO,UAAAA,cAAc,CAACV,GAAG,CAACF,IAAJ,CAASK,OAAV,CAAd,CAHiD,CAIjD;AACH,SALD,MAKO;AACHnC,UAAAA,OAAO,CAACiB,IAAR,CAAa,QAAb;AACH;;AACD,YAAI0B,GAAG,GAAG;AACNpB,UAAAA,OAAO,EAAES,GAAG,CAACF,IAAJ,CAASP,OADZ;AAENC,UAAAA,QAAQ,EAAEN,UAAU,CAACM,QAFf;AAGNL,UAAAA,KAAK,EAAEa,GAAG,CAACF,IAAJ,CAASX,KAAT,IAAkB;AAHnB,SAAV;;AAKA,cAAKyB,QAAL,CAAc;AACV3B,UAAAA,IAAI,EAAEe,GAAG,CAACF,IAAJ,CAASK,OADL;AAEVjB,UAAAA,UAAU,EAAEyB;AAFF,SAAd;AAIH,OAvBD,EAPkE,CA+BlE;AACH,K;;UACDE,kB,GAAqB,UAACC,QAAD,EAAc;AAC/Bb,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBY,QAApB;AACA,UAAIzB,MAAM,GAAG;AACT0B,QAAAA,OAAO,EAAED,QAAQ,CAACE,OAAT,GAAmB,CADnB;AAETC,QAAAA,SAAS,EAAEH,QAAQ,CAACI,SAFX;AAGTC,QAAAA,UAAU,EAAEL,QAAQ,CAACM,UAHZ;AAITC,QAAAA,gBAAgB,EAAEP,QAAQ,CAACQ,gBAJlB;AAKTC,QAAAA,YAAY,EAAET,QAAQ,CAAC1C,YAAT,GAAwB,CAL7B;AAMToD,QAAAA,WAAW,EAAEV,QAAQ,CAACW,WAAT,GAAuB,GAN3B;AAOTC,QAAAA,SAAS,EAAEZ,QAAQ,CAACa,SAAT,GAAqB,GAPvB;AAQTC,QAAAA,eAAe,EAAEd,QAAQ,CAACe,eAAT,GAA2B,KARnC;AASTC,QAAAA,OAAO,EAAEhB,QAAQ,CAACiB,OAAT,GAAmB,GATnB;AAUTC,QAAAA,SAAS,EAAElB,QAAQ,CAACmB,SAAT,GAAqB,GAVvB;AAWTC,QAAAA,QAAQ,EAAEpB,QAAQ,CAACqB,QAAT,GAAoB;AAXrB,OAAb;AAaAxC,MAAAA,IAAI,CAACC,IAAL,CAAU;AACNC,QAAAA,GAAG,EAAE,gCADC;AAENC,QAAAA,IAAI,EAAET;AAFA,OAAV,EAGGU,IAHH,CAGQ,UAACC,GAAD,EAAS;AACb,YAAIoC,GAAG,GAAGpC,GAAG,CAAChC,OAAd;;AACA,YAAIgC,GAAG,CAACqC,IAAJ,IAAY,CAAhB,EAAmB;AACfrE,UAAAA,OAAO,CAACsE,OAAR,CAAgBF,GAAhB,EADe,CAEf;AACH,SAHD,MAGO,IAAIpC,GAAG,CAACqC,IAAJ,IAAY,KAAhB,EAAuB;AAC1BrE,UAAAA,OAAO,CAACuE,KAAR,CACIH,GAAG,CAACI,SAAJ,CAAcJ,GAAG,CAACK,OAAJ,CAAY,GAAZ,IAAmB,CAAjC,EAAoCL,GAAG,CAACM,WAAJ,CAAgB,GAAhB,CAApC,CADJ;AAGH,SAJM,MAIA;AACH1E,UAAAA,OAAO,CAACuE,KAAR,CAAcH,GAAd;AACH;;AACD,cAAKO,QAAL,GAAgB,IAAhB;AACH,OAhBD;AAiBH,K;;UAEDC,kB,GAAqB,gBAAc;AAAA,UAAXC,IAAW,QAAXA,IAAW;AAC/B5C,MAAAA,OAAO,CAACC,GAAR,CAAY2C,IAAI,CAACC,cAAL,EAAZ,EAAmC,MAAKC,MAAxC,EAD+B,CAE/B;;AACA,UAAIjC,QAAQ,GAAG+B,IAAI,CAACC,cAAL,EAAf;AACA,UAAIzD,MAAM,GAAG;AACT2D,QAAAA,EAAE,EAAE,MAAKD,MAAL,CAAYxF,EAAZ,GAAiB,CADZ;AAETwD,QAAAA,OAAO,EAAED,QAAQ,CAACE,OAFT;AAGTC,QAAAA,SAAS,EAAEH,QAAQ,CAACI,SAHX;AAITC,QAAAA,UAAU,EAAEL,QAAQ,CAACM,UAJZ;AAKTC,QAAAA,gBAAgB,EAAEP,QAAQ,CAACQ,gBALlB;AAMTC,QAAAA,YAAY,EAAET,QAAQ,CAAC1C,YAAT,GAAwB,CAN7B;AAOToD,QAAAA,WAAW,EAAEV,QAAQ,CAACW,WAAT,GAAuB,GAP3B;AAQTC,QAAAA,SAAS,EAAEZ,QAAQ,CAACa,SAAT,GAAqB,GARvB;AASTC,QAAAA,eAAe,EAAEd,QAAQ,CAACe,eAAT,GAA2B,KATnC;AAUTC,QAAAA,OAAO,EAAEhB,QAAQ,CAACiB,OAAT,GAAmB,GAVnB;AAWTC,QAAAA,SAAS,EAAElB,QAAQ,CAACmB,SAAT,GAAqB,GAXvB;AAYTC,QAAAA,QAAQ,EAAEpB,QAAQ,CAACqB,QAAT,GAAoB;AAZrB,OAAb,CAJ+B,CAkB/B;;AACAxC,MAAAA,IAAI,CAACC,IAAL,CAAU;AACNC,QAAAA,GAAG,EAAE,mCADC;AAENC,QAAAA,IAAI,EAAET;AAFA,OAAV,EAGGU,IAHH,CAGQ,UAACC,GAAD,EAAS;AACb,YAAIoC,GAAG,GAAGpC,GAAG,CAAChC,OAAd;;AACA,YAAIgC,GAAG,CAACqC,IAAJ,IAAY,CAAhB,EAAmB;AACfrE,UAAAA,OAAO,CAACsE,OAAR,CAAgBF,GAAhB,EADe,CAEf;AACH,SAHD,MAGO,IAAIpC,GAAG,CAACqC,IAAJ,IAAY,KAAhB,EAAuB;AAC1BrE,UAAAA,OAAO,CAACuE,KAAR,CACIH,GAAG,CAACI,SAAJ,CAAcJ,GAAG,CAACK,OAAJ,CAAY,GAAZ,IAAmB,CAAjC,EAAoCL,GAAG,CAACM,WAAJ,CAAgB,GAAhB,CAApC,CADJ;AAGH,SAJM,MAIA;AACH1E,UAAAA,OAAO,CAACuE,KAAR,CAAcH,GAAd;AACH;;AACD,cAAKO,QAAL,GAAgB,IAAhB;AACH,OAhBD;AAiBH,K;;UAMDM,c,GAAiB,iBAAsB;AAAA,UAAnBJ,IAAmB,SAAnBA,IAAmB;AAAA,UAAbE,MAAa,SAAbA,MAAa;AACnC,YAAKA,MAAL,GAAcA,MAAd;AACAF,MAAAA,IAAI,CAACK,cAAL,CAAoB;AAChB;AACA;AACAlC,QAAAA,OAAO,EAAE+B,MAAM,CAAC/B,OAHA;AAIhBE,QAAAA,SAAS,EAAE6B,MAAM,CAAC7B,SAJF;AAKhBE,QAAAA,UAAU,EAAE2B,MAAM,CAAC3B,UALH;AAMhBE,QAAAA,gBAAgB,EAAEyB,MAAM,CAACzB,gBANT;AAOhBlD,QAAAA,YAAY,EAAE2E,MAAM,CAAC3E,YAAP,GAAsB,EAPpB;AAQhBqD,QAAAA,WAAW,EAAEsB,MAAM,CAACtB,WARJ;AAShBE,QAAAA,SAAS,EAAEoB,MAAM,CAACpB,SATF;AAUhBE,QAAAA,eAAe,EAAEkB,MAAM,CAAClB,eAVR;AAWhBE,QAAAA,OAAO,EAAEgB,MAAM,CAAChB,OAXA;AAYhBE,QAAAA,SAAS,EAAEc,MAAM,CAACd,SAZF;AAahBE,QAAAA,QAAQ,EAAEY,MAAM,CAACZ,QAbD;AAchB;AACA;AACA;AACAgB,QAAAA,UAAU,EAAEJ,MAAM,CAACI;AAjBH,OAApB;AAmBH,K;;;;;;;wCACmB;AAChB,WAAK7D,OAAL;AACH;;;6BACQ;AACL,UAAI8D,MAAM,GAAG;AAAEC,QAAAA,CAAC,EAAE,IAAL;AAAWC,QAAAA,CAAC,EAAE;AAAd,OAAb;AACA,UAAIrE,IAAI,GAAG,KAAKF,KAAL,CAAWE,IAAtB;AACA,aACI,oBAAC,aAAD,CACI;AADJ;AAEI,QAAA,aAAa,EAAE,KAAKG,YAFxB;AAGI,QAAA,mBAAmB,EAAE/B,mBAHzB;AAII,QAAA,aAAa,EAAE,KAAK0B,KAAL,CAAWC,aAJ9B;AAKI,QAAA,YAAY,EAAE,KALlB;AAMI,QAAA,KAAK,EAAC,OANV;AAOI,QAAA,MAAM,EAAC,KAPX;AAQI,QAAA,UAAU,EAAE,KAAKD,KAAL,CAAWG,UAR3B;AASI,QAAA,UAAU,EAAED,IAThB;AAUI,QAAA,aAAa,EAAE,IAVnB,CAUyB;AAVzB;AAWI,QAAA,mBAAmB,EAAEpB,mBAXzB;AAYI,QAAA,YAAY,EAAE,KAAKgD,kBAZvB;AAaI,QAAA,mBAAmB,EAAErC,mBAbzB;AAcI,QAAA,cAAc,EAAE,KAAKyE,cAdzB;AAeI,QAAA,YAAY,EAAE,KAAKL,kBAfvB,CAe2C;AACvC;AAhBJ;AAiBI,QAAA,QAAQ,EAAE,IAjBd;AAkBI,QAAA,OAAO,EAAEnE,OAlBb;AAmBI,QAAA,MAAM,EAAE2E,MAnBZ,CAoBI;AApBJ;AAqBI,QAAA,KAAK,EAAE,CArBX,CAqBc;AACV;AAtBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAwBI;AACI,QAAA,SAAS,EAAC,gBADd;AAEI,QAAA,QAAQ,EAAE,IAFd;AAGI,QAAA,KAAK,EAAC,0BAHV;AAII,QAAA,WAAW,EAAE,KAAK9D,OAJtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAxBJ,CADJ;AAiCH;;;;EApL6BpC,KAAK,CAACqG,a;;SAAnBzE,I","sourcesContent":["import React from \"react\";\r\nimport { Input, TimePicker } from \"antd\";\r\n\r\nimport CurdComponent from \"@/components/CurdComponent\";\r\nimport SelectOption from \"@/components/SelectOption\";\r\n\r\nconst getSearchFormFields = () => {\r\n    return [\r\n        {\r\n            label: \"用户ID\",\r\n            id: \"uuserId\",\r\n            // initialValue: \"\",\r\n            component: <Input placeholder=\"请输入\" />,\r\n        },\r\n        {\r\n            label: \"证券账户\",\r\n            id: \"accountId\",\r\n            // initialValue: \"\",\r\n            component: <Input placeholder=\"请输入\" />,\r\n        },\r\n        {\r\n            label: \"证券代码\",\r\n            id: \"securityId\",\r\n            // initialValue: \"\",\r\n            component: <Input placeholder=\"请输入\" />,\r\n        },\r\n        {\r\n            label: \"业务类型\",\r\n            id: \"accountType\",\r\n            initialValue: \"1\",\r\n            component: SelectOption(dict.businessTypeSelect, {\r\n                placeholder: \"请选择\",\r\n                // allowClear: true,\r\n            }),\r\n        },\r\n    ];\r\n};\r\nconst getInsertFormFields = () => {\r\n    return [\r\n        {\r\n            label: \"用户ID\",\r\n            id: \"uuserId\",\r\n            initialValue: \"\",\r\n            rules: [\r\n                {\r\n                    required: true,\r\n                    message: \"参数不能为空\",\r\n                },\r\n                {\r\n                    validator: checkLength(10),\r\n                    trigger: [\"change\", \"blur\"],\r\n                },\r\n            ],\r\n            component: <Input placeholder=\"请输入\" />,\r\n        },\r\n        {\r\n            label: \"证券账户\",\r\n            id: \"accountId\",\r\n            initialValue: \"\",\r\n            rules: [\r\n                {\r\n                    required: true,\r\n                    message: \"参数不能为空\",\r\n                },\r\n                {\r\n                    validator: checkLength(12),\r\n                    trigger: [\"change\", \"blur\"],\r\n                },\r\n            ],\r\n            component: (\r\n                // <Input placeholder=\"请输入\" readOnly disabled />\r\n                <Input placeholder=\"请输入\" />\r\n            ),\r\n        },\r\n        {\r\n            label: \"证券代码\",\r\n            id: \"securityId\",\r\n            initialValue: \"\",\r\n            rules: [\r\n                {\r\n                    required: true,\r\n                    message: \"参数不能为空\",\r\n                },\r\n                {\r\n                    validator: checkLength(8),\r\n                    trigger: [\"change\", \"blur\"],\r\n                },\r\n            ],\r\n            component: (\r\n                // <Input placeholder=\"请输入\" readOnly disabled />\r\n                <Input placeholder=\"请输入\" />\r\n            ),\r\n        },\r\n        {\r\n            label: \"证券代码源\",\r\n            id: \"securityIdSource\",\r\n            initialValue: \"\",\r\n            rules: [\r\n                {\r\n                    required: true,\r\n                    message: \"参数不能为空\",\r\n                },\r\n                {\r\n                    validator: checkLength(4),\r\n                    trigger: [\"change\", \"blur\"],\r\n                },\r\n            ],\r\n            component: <Input placeholder=\"请输入\" />,\r\n        },\r\n        {\r\n            label: \"持仓类型\",\r\n            id: \"positionType\",\r\n            initialValue: \"0\",\r\n            rules: [\r\n                {\r\n                    required: true,\r\n                    message: \"参数不能为空\",\r\n                },\r\n            ],\r\n            component: SelectOption(dict.positionType, {\r\n                placeholder: \"请选择\",\r\n                allowClear: false,\r\n                style: {\r\n                    width: 400,\r\n                },\r\n            }),\r\n        },\r\n        {\r\n            label: \"持仓数量\",\r\n            id: \"positionQty\",\r\n            initialValue: \"\",\r\n            rules: [\r\n                {\r\n                    required: true,\r\n                    message: \"参数不能为空\",\r\n                },\r\n                {\r\n                    validator: checkLength(20),\r\n                    trigger: [\"change\", \"blur\"],\r\n                },\r\n            ],\r\n            component: <Input placeholder=\"请输入\" />,\r\n        },\r\n        {\r\n            label: \"日初持仓数量\",\r\n            id: \"originQty\",\r\n            initialValue: \"\",\r\n            rules: [\r\n                {\r\n                    required: true,\r\n                    message: \"参数不能为空\",\r\n                },\r\n                {\r\n                    validator: checkLength(20),\r\n                    trigger: [\"change\", \"blur\"],\r\n                },\r\n            ],\r\n            component: (\r\n                // <Input placeholder=\"请输入\" readOnly disabled />\r\n                <Input placeholder=\"请输入\" />\r\n            ),\r\n        },\r\n        {\r\n            label: \"日初开仓均价\",\r\n            id: \"originOpenPrice\",\r\n            initialValue: \"\",\r\n            rules: [\r\n                {\r\n                    required: true,\r\n                    message: \"参数不能为空\",\r\n                },\r\n                {\r\n                    validator: checkLength(20),\r\n                    trigger: [\"change\", \"blur\"],\r\n                },\r\n            ],\r\n            component: (\r\n                // <Input placeholder=\"请输入\" readOnly disabled />\r\n                <Input placeholder=\"请输入\" />\r\n            ),\r\n        },\r\n        {\r\n            label: \"可卖数量\",\r\n            id: \"freeQty\",\r\n            initialValue: \"\",\r\n            rules: [\r\n                {\r\n                    required: true,\r\n                    message: \"参数不能为空\",\r\n                },\r\n                {\r\n                    validator: checkLength(20),\r\n                    trigger: [\"change\", \"blur\"],\r\n                },\r\n            ],\r\n            component: <Input placeholder=\"请输入\" />,\r\n        },\r\n        {\r\n            label: \"冻结数量\",\r\n            id: \"frozenQty\",\r\n            initialValue: \"\",\r\n            rules: [\r\n                {\r\n                    required: true,\r\n                    message: \"参数不能为空\",\r\n                },\r\n                {\r\n                    validator: checkLength(20),\r\n                    trigger: [\"change\", \"blur\"],\r\n                },\r\n            ],\r\n            component: <Input placeholder=\"请输入\" />,\r\n        },\r\n        {\r\n            label: \"平均价格\",\r\n            id: \"avgPrice\",\r\n            initialValue: \"\",\r\n            rules: [\r\n                {\r\n                    required: true,\r\n                    message: \"参数不能为空\",\r\n                },\r\n                {\r\n                    validator: checkLength(20),\r\n                    trigger: [\"change\", \"blur\"],\r\n                },\r\n            ],\r\n            component: <Input placeholder=\"请输入\" />,\r\n        },\r\n    ];\r\n};\r\nconst getUpdateFormFields = () => {\r\n    return [\r\n        {\r\n            label: \"用户ID\",\r\n            id: \"uuserId\",\r\n            initialValue: \"\",\r\n            rules: [\r\n                {\r\n                    required: true,\r\n                    message: \"参数不能为空\",\r\n                },\r\n                {\r\n                    validator: checkLength(10),\r\n                    trigger: [\"change\", \"blur\"],\r\n                },\r\n            ],\r\n            component: <Input placeholder=\"请输入\" />,\r\n        },\r\n        {\r\n            label: \"证券账户\",\r\n            id: \"accountId\",\r\n            initialValue: \"\",\r\n            rules: [\r\n                {\r\n                    required: true,\r\n                    message: \"参数不能为空\",\r\n                },\r\n                {\r\n                    validator: checkLength(12),\r\n                    trigger: [\"change\", \"blur\"],\r\n                },\r\n            ],\r\n            component: (\r\n                // <Input placeholder=\"请输入\" readOnly disabled />\r\n                <Input placeholder=\"请输入\" />\r\n            ),\r\n        },\r\n        {\r\n            label: \"证券代码\",\r\n            id: \"securityId\",\r\n            initialValue: \"\",\r\n            rules: [\r\n                {\r\n                    required: true,\r\n                    message: \"参数不能为空\",\r\n                },\r\n                {\r\n                    validator: checkLength(8),\r\n                    trigger: [\"change\", \"blur\"],\r\n                },\r\n            ],\r\n            component: (\r\n                // <Input placeholder=\"请输入\" readOnly disabled />\r\n                <Input placeholder=\"请输入\" />\r\n            ),\r\n        },\r\n        {\r\n            label: \"证券代码源\",\r\n            id: \"securityIdSource\",\r\n            initialValue: \"\",\r\n            rules: [\r\n                {\r\n                    required: true,\r\n                    message: \"参数不能为空\",\r\n                },\r\n                {\r\n                    validator: checkLength(4),\r\n                    trigger: [\"change\", \"blur\"],\r\n                },\r\n            ],\r\n            component: <Input placeholder=\"请输入\" />,\r\n        },\r\n        {\r\n            label: \"持仓类型\",\r\n            id: \"positionType\",\r\n            initialValue: \"0\",\r\n            rules: [\r\n                {\r\n                    required: true,\r\n                    message: \"参数不能为空\",\r\n                },\r\n            ],\r\n            component: SelectOption(dict.positionType, {\r\n                placeholder: \"请选择\",\r\n                allowClear: false,\r\n                style: {\r\n                    width: 400,\r\n                },\r\n            }),\r\n        },\r\n        {\r\n            label: \"持仓数量\",\r\n            id: \"positionQty\",\r\n            initialValue: \"\",\r\n            rules: [\r\n                {\r\n                    required: true,\r\n                    message: \"参数不能为空\",\r\n                },\r\n                {\r\n                    validator: checkLength(20),\r\n                    trigger: [\"change\", \"blur\"],\r\n                },\r\n            ],\r\n            component: <Input placeholder=\"请输入\" />,\r\n        },\r\n        {\r\n            label: \"日初持仓数量\",\r\n            id: \"originQty\",\r\n            initialValue: \"\",\r\n            rules: [\r\n                {\r\n                    required: true,\r\n                    message: \"参数不能为空\",\r\n                },\r\n                {\r\n                    validator: checkLength(20),\r\n                    trigger: [\"change\", \"blur\"],\r\n                },\r\n            ],\r\n            component: (\r\n                // <Input placeholder=\"请输入\" readOnly disabled />\r\n                <Input placeholder=\"请输入\" />\r\n            ),\r\n        },\r\n        {\r\n            label: \"日初开仓均价\",\r\n            id: \"originOpenPrice\",\r\n            initialValue: \"\",\r\n            rules: [\r\n                {\r\n                    required: true,\r\n                    message: \"参数不能为空\",\r\n                },\r\n                {\r\n                    validator: checkLength(20),\r\n                    trigger: [\"change\", \"blur\"],\r\n                },\r\n            ],\r\n            component: (\r\n                // <Input placeholder=\"请输入\" readOnly disabled />\r\n                <Input placeholder=\"请输入\" />\r\n            ),\r\n        },\r\n        {\r\n            label: \"可卖数量\",\r\n            id: \"freeQty\",\r\n            initialValue: \"\",\r\n            rules: [\r\n                {\r\n                    required: true,\r\n                    message: \"参数不能为空\",\r\n                },\r\n                {\r\n                    validator: checkLength(20),\r\n                    trigger: [\"change\", \"blur\"],\r\n                },\r\n            ],\r\n            component: <Input placeholder=\"请输入\" />,\r\n        },\r\n        {\r\n            label: \"冻结数量\",\r\n            id: \"frozenQty\",\r\n            initialValue: \"\",\r\n            rules: [\r\n                {\r\n                    required: true,\r\n                    message: \"参数不能为空\",\r\n                },\r\n                {\r\n                    validator: checkLength(20),\r\n                    trigger: [\"change\", \"blur\"],\r\n                },\r\n            ],\r\n            component: <Input placeholder=\"请输入\" />,\r\n        },\r\n        {\r\n            label: \"平均价格\",\r\n            id: \"avgPrice\",\r\n            initialValue: \"\",\r\n            rules: [\r\n                {\r\n                    required: true,\r\n                    message: \"参数不能为空\",\r\n                },\r\n                {\r\n                    validator: checkLength(20),\r\n                    trigger: [\"change\", \"blur\"],\r\n                },\r\n            ],\r\n            component: <Input placeholder=\"请输入\" />,\r\n        },\r\n        {\r\n            label: \"更新时间\",\r\n            id: \"updateTime\",\r\n            initialValue: \"\",\r\n            component: <Input placeholder=\"请输入\" readOnly disabled />,\r\n        },\r\n    ];\r\n};\r\n\r\nlet columns = () => {\r\n    return [\r\n        {\r\n            title: \"用户ID\",\r\n            dataIndex: \"uuserId\",\r\n            key: \"uuserId\",\r\n            width: 80,\r\n        },\r\n        {\r\n            title: \"证券账户\",\r\n            dataIndex: \"accountId\",\r\n            key: \"accountId\",\r\n            width: 120,\r\n        },\r\n        {\r\n            title: \"证券代码\",\r\n            dataIndex: \"securityId\",\r\n            key: \"securityId\",\r\n            width: 100,\r\n        },\r\n        {\r\n            title: \"证券代码源\",\r\n            dataIndex: \"securityIdSource\",\r\n            key: \"securityIdSource\",\r\n            width: 120,\r\n        },\r\n        {\r\n            title: \"持仓类型\",\r\n            dataIndex: \"positionTypeValue\",\r\n            key: \"positionType\",\r\n            width: 100,\r\n        },\r\n        {\r\n            title: \"持仓数量\",\r\n            dataIndex: \"positionQty\",\r\n            key: \"positionQty\",\r\n            width: 100,\r\n        },\r\n        {\r\n            title: \"日初持仓数量\",\r\n            dataIndex: \"originQty\",\r\n            width: 200,\r\n        },\r\n        {\r\n            title: \"日初开仓均价\",\r\n            dataIndex: \"originOpenPrice\",\r\n            width: 250,\r\n        },\r\n        {\r\n            title: \"可卖数量\",\r\n            dataIndex: \"freeQty\",\r\n            key: \"freeQty\",\r\n            width: 100,\r\n        },\r\n        {\r\n            title: \"冻结数量\",\r\n            dataIndex: \"frozenQty\",\r\n            key: \"frozenQty\",\r\n            width: 100,\r\n        },\r\n        {\r\n            title: \"平均价格\",\r\n            dataIndex: \"avgPrice\",\r\n            width: 100,\r\n        },\r\n        {\r\n            title: \"盈亏\",\r\n            dataIndex: \"profitAndLoss\",\r\n            key: \"profitAndLoss\",\r\n            width: 180,\r\n        },\r\n        {\r\n            title: \"收益率\",\r\n            dataIndex: \"profitRate\",\r\n            key: \"profitRate\",\r\n            width: 180,\r\n        },\r\n        {\r\n            title: \"版本号\",\r\n            dataIndex: \"version\",\r\n            width: 120,\r\n        },\r\n        {\r\n            title: \"更新时间\",\r\n            dataIndex: \"updateTime\",\r\n            key: \"updateTime\",\r\n            width: 180,\r\n        },\r\n    ];\r\n};\r\nlet dtColumns = () => {\r\n    return columns();\r\n};\r\nexport default class Cccx extends React.PureComponent {\r\n    state = {\r\n        searchLoading: false,\r\n        info: [],\r\n        pagination: { total: 0 },\r\n    };\r\n    handleSearch = (params, pagination) => {\r\n        // console.log(\"获取搜索栏数据 \", params);\r\n        this.getData(params, pagination);\r\n    };\r\n    getData = (params = {}, pagination = { current: 1, pageSize: 13 }) => {\r\n        params = {\r\n            ...params,\r\n            pageId: pagination.current,\r\n            pageNum: pagination.pageSize,\r\n        };\r\n        // console.log(pagination);\r\n        http.post({\r\n            url: \"/user-position/list\",\r\n            data: params,\r\n        }).then((res) => {\r\n            console.log(res);\r\n            //解析数据字典\r\n            if (res.data.records && res.data.records.length > 0) {\r\n                res.data.records.forEach((item) => (item.rnd = Math.random()));\r\n                console.log(res.data.records);\r\n                parseDictValue(res.data.records);\r\n                // showTip(this);\r\n            } else {\r\n                message.info(\"查询结果为空\");\r\n            }\r\n            let pgn = {\r\n                current: res.data.current,\r\n                pageSize: pagination.pageSize,\r\n                total: res.data.total || 0,\r\n            };\r\n            this.setState({\r\n                info: res.data.records,\r\n                pagination: pgn,\r\n            });\r\n        });\r\n        // this.setState({ info: msg.content, pagination: pgn });\r\n    };\r\n    handleInsertRecord = (fromData) => {\r\n        console.log(\"新增接口\", fromData);\r\n        let params = {\r\n            UuserId: fromData.uuserId / 1,\r\n            AccountId: fromData.accountId,\r\n            SecurityId: fromData.securityId,\r\n            SecurityIdSource: fromData.securityIdSource,\r\n            PositionType: fromData.positionType / 1,\r\n            PositionQty: fromData.positionQty * 100,\r\n            OriginQty: fromData.originQty * 100,\r\n            OriginOpenPrice: fromData.originOpenPrice * 10000,\r\n            FreeQty: fromData.freeQty * 100,\r\n            FrozenQty: fromData.frozenQty * 100,\r\n            AvgPrice: fromData.avgPrice * 10000,\r\n        };\r\n        http.post({\r\n            url: \"/user-position/addUserPosition\",\r\n            data: params,\r\n        }).then((res) => {\r\n            let msg = res.message;\r\n            if (res.code == 0) {\r\n                message.success(msg);\r\n                // this.getData();\r\n            } else if (res.code == 20000) {\r\n                message.error(\r\n                    msg.substring(msg.indexOf(\"[\") + 1, msg.lastIndexOf(\"]\"))\r\n                );\r\n            } else {\r\n                message.error(msg);\r\n            }\r\n            this.isAction = true;\r\n        });\r\n    };\r\n    //更新记录\r\n    handleUpdateRecord = ({ form }) => {\r\n        console.log(form.getFieldsValue(), this.record);\r\n        // return;\r\n        let fromData = form.getFieldsValue();\r\n        let params = {\r\n            Id: this.record.id / 1,\r\n            UuserId: fromData.uuserId,\r\n            AccountId: fromData.accountId,\r\n            SecurityId: fromData.securityId,\r\n            SecurityIdSource: fromData.securityIdSource,\r\n            PositionType: fromData.positionType / 1,\r\n            PositionQty: fromData.positionQty * 100,\r\n            OriginQty: fromData.originQty * 100,\r\n            OriginOpenPrice: fromData.originOpenPrice * 10000,\r\n            FreeQty: fromData.freeQty * 100,\r\n            FrozenQty: fromData.frozenQty * 100,\r\n            AvgPrice: fromData.avgPrice * 10000,\r\n        };\r\n        // 发送更新请求\r\n        http.post({\r\n            url: \"/user-position/updateUserPosition\",\r\n            data: params,\r\n        }).then((res) => {\r\n            let msg = res.message;\r\n            if (res.code == 0) {\r\n                message.success(msg);\r\n                // this.getData();\r\n            } else if (res.code == 20000) {\r\n                message.error(\r\n                    msg.substring(msg.indexOf(\"[\") + 1, msg.lastIndexOf(\"]\"))\r\n                );\r\n            } else {\r\n                message.error(msg);\r\n            }\r\n            this.isAction = true;\r\n        });\r\n    };\r\n    // //删除记录\r\n    // handleDeleteRecord = record => {\r\n    //   console.log(\"删除记录 \", record);\r\n    // };\r\n    //填入更新数据\r\n    setUpdateModal = ({ form, record }) => {\r\n        this.record = record;\r\n        form.setFieldsValue({\r\n            // userName1: record.v_gthth,\r\n            // id: record.id,\r\n            uuserId: record.uuserId,\r\n            accountId: record.accountId,\r\n            securityId: record.securityId,\r\n            securityIdSource: record.securityIdSource,\r\n            positionType: record.positionType + \"\",\r\n            positionQty: record.positionQty,\r\n            originQty: record.originQty,\r\n            originOpenPrice: record.originOpenPrice,\r\n            freeQty: record.freeQty,\r\n            frozenQty: record.frozenQty,\r\n            avgPrice: record.avgPrice,\r\n            // profitAndLoss: record.profitAndLoss,\r\n            // profitRate: record.profitRate,\r\n            // version: record.version,\r\n            updateTime: record.updateTime,\r\n        });\r\n    };\r\n    componentDidMount() {\r\n        this.getData();\r\n    }\r\n    render() {\r\n        let scroll = { x: 2500, y: 445 };\r\n        let info = this.state.info;\r\n        return (\r\n            <CurdComponent\r\n                // isShowSearchForm={false}\r\n                onSearchClick={this.handleSearch}\r\n                getSearchFormFields={getSearchFormFields}\r\n                searchLoading={this.state.searchLoading}\r\n                isShowInsert={false}\r\n                width=\"789px\"\r\n                rowKey=\"rnd\"\r\n                pagination={this.state.pagination}\r\n                dataSource={info}\r\n                insertBtnText={\"新增\"} // 不传 就没新增按钮\r\n                getInsertFormFields={getInsertFormFields}\r\n                insertRecord={this.handleInsertRecord}\r\n                getUpdateFormFields={getUpdateFormFields}\r\n                setUpdateModal={this.setUpdateModal}\r\n                updateRecord={this.handleUpdateRecord} // 不传 就没编辑\r\n                // deleteRecord={this.handleDeleteRecord}\r\n                centered={true}\r\n                columns={columns}\r\n                scroll={scroll}\r\n                //dtColumns={dtColumns()} //详情列表\r\n                dtCol={2} //详情列数\r\n                // dtWidth={800} //详情弹窗宽度\r\n            >\r\n                <div\r\n                    urlPrefix=\"/user-position\"\r\n                    noUpload={true}\r\n                    title=\"持仓信息\"\r\n                    sucCallback={this.getData}\r\n                ></div>\r\n            </CurdComponent>\r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}