{"ast":null,"code":"import \"antd/lib/modal/style\";\nimport _Modal from \"antd/lib/modal\";\nimport \"antd/lib/form/style\";\nimport _Form from \"antd/lib/form\";\nimport \"antd/lib/message/style\";\nimport _message from \"antd/lib/message\";\nimport \"antd/lib/tooltip/style\";\nimport _Tooltip from \"antd/lib/tooltip\";\nimport \"antd/lib/icon/style\";\nimport _Icon from \"antd/lib/icon\";\nimport _classCallCheck from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport \"antd/lib/input/style\";\nimport _Input from \"antd/lib/input\";\nvar _jsxFileName = \"D:\\\\company\\\\algo-manage\\\\src\\\\algo\\\\modules\\\\manage\\\\pages\\\\counterGw\\\\index.js\";\nimport React from \"react\";\nimport CurdComponent from \"@/components/CurdComponent\"; // import SelectOption from \"@/components/SelectOption\";\n\nimport Table from \"@/components/Table\";\nimport styles from \"./style.module.less\";\n\nvar getSearchFormFields = function getSearchFormFields() {\n  return [{\n    label: \"用户ID\",\n    id: \"userId\",\n    component: React.createElement(_Input, {\n      placeholder: \"\\u8BF7\\u8F93\\u5165\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    })\n  }];\n};\n\nvar getUpdateFormFields = function getUpdateFormFields() {\n  return [{\n    label: \"用户ID\",\n    id: \"userId\",\n    component: React.createElement(_Input, {\n      readOnly: true,\n      disabled: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    })\n  }, {\n    label: \"用户名\",\n    id: \"userName\",\n    component: React.createElement(_Input, {\n      readOnly: true,\n      disabled: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    })\n  }, {\n    label: \"柜台网关Id\",\n    id: \"counterGwId\",\n    rules: [{\n      required: true,\n      message: \"柜台网关Id不能为空\"\n    }],\n    component: React.createElement(_Input, {\n      placeholder: \"\\u8BF7\\u8F93\\u5165\\u4EA4\\u6362\\u673A\\u7F16\\u53F7\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    })\n  }, {\n    label: \"来自柜台\",\n    id: \"counterUserId\",\n    component: React.createElement(_Input, {\n      readOnly: true,\n      disabled: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    })\n  }, {\n    label: \"业务类型\",\n    id: \"businessType\",\n    component: React.createElement(_Input, {\n      readOnly: true,\n      disabled: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    })\n  }, {\n    label: \"登录状态\",\n    id: \"loginStatus\",\n    component: React.createElement(_Input, {\n      readOnly: true,\n      disabled: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    })\n  }, {\n    label: \"客户类型\",\n    id: \"clientType\",\n    component: React.createElement(_Input, {\n      readOnly: true,\n      disabled: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    })\n  }, {\n    label: \"算法平台用户Id\",\n    id: \"uuserId\",\n    component: React.createElement(_Input, {\n      readOnly: true,\n      disabled: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    })\n  }, {\n    label: \"创建时间\",\n    id: \"createTime\",\n    component: React.createElement(_Input, {\n      readOnly: true,\n      disabled: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    })\n  }];\n};\n\nvar CounterGw =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(CounterGw, _React$PureComponent);\n\n  function CounterGw() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CounterGw);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CounterGw)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.columns = function (params) {\n      return [{\n        title: \"用户ID\",\n        dataIndex: \"userId\"\n      }, {\n        title: \"用户名\",\n        dataIndex: \"userName\"\n      }, // {\n      //     title: \"柜台网关Id\",\n      //     dataIndex: \"counterGwId\",\n      // },\n      {\n        title: \"柜台网关Id\",\n        dataIndex: \"counterGwId\",\n        render: function render(text, record) {\n          return React.createElement(\"div\", {\n            onClick: function onClick(e) {\n              _this.handleUpdateBtn(record);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 91\n            },\n            __self: this\n          }, React.createElement(_Tooltip, {\n            title: \"\\u4FEE\\u6539\\u7F51\\u5173\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 96\n            },\n            __self: this\n          }, record.counterGwId, React.createElement(_Icon, {\n            type: \"edit\",\n            style: {\n              color: \"#1899ff\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 98\n            },\n            __self: this\n          })));\n        }\n      }, {\n        title: \"来自柜台\",\n        dataIndex: \"counterUserId\"\n      }, {\n        title: \"业务类型\",\n        dataIndex: \"businessTypeValue\"\n      }, {\n        title: \"登录状态\",\n        dataIndex: \"loginStatusValue\"\n      }, {\n        title: \"客户类型\",\n        dataIndex: \"clientTypeValue\"\n      }, {\n        title: \"算法平台用户Id\",\n        dataIndex: \"uuserId\",\n        width: 150\n      }, {\n        title: \"创建时间\",\n        dataIndex: \"createTime\"\n      } // {\n      //     title: \"操作\",\n      //     key: \"operation\",\n      //     fixed: \"right\",\n      //     width: 100,\n      //     render: (text, record) => (\n      //         <a\n      //             onClick={(e) => {\n      //                 this.handleUpdateBtn(record);\n      //             }}\n      //         >\n      //             编辑\n      //         </a>\n      //     ),\n      // },\n      ];\n    };\n\n    _this.columns2 = function (params) {\n      return [{\n        title: \"网关ID\",\n        dataIndex: \"id\",\n        width: 100,\n        ellipsis: true\n      }, {\n        title: \"券商编码\",\n        dataIndex: \"brokerCode\",\n        width: 135,\n        ellipsis: true\n      }, {\n        title: \"券商名称\",\n        dataIndex: \"brokerName\",\n        width: 130,\n        ellipsis: true\n      }, {\n        title: \"支持的业务类型\",\n        dataIndex: \"supportType\",\n        ellipsis: true\n      }, {\n        title: \"柜台地址\",\n        dataIndex: \"gwAddr\",\n        width: 180,\n        ellipsis: true\n      }, {\n        title: \"柜台状态\",\n        dataIndex: \"status\",\n        ellipsis: true\n      }, {\n        title: \"柜台版本号\",\n        dataIndex: \"version\",\n        width: 120,\n        ellipsis: true\n      }];\n    };\n\n    _this.state = {\n      searchLoading: false,\n      selectedRowKeys: [],\n      info: [],\n      updateArr: [],\n      updateModalVisible: false\n    };\n\n    _this.handleTableChange = function (selectedRowKeys, row) {\n      // console.log(\"批量选择\", selectedRowKeys, row);\n      _this.setState({\n        selectedRowKeys: selectedRowKeys\n      });\n    };\n\n    _this.getCounterInfo = function () {\n      var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      // params.token = \"\";\n      // console.log(this.record);\n      params.businessType = _this.record.businessType;\n      http.post({\n        url: \"/counter-info/getCounterInfo\",\n        data: params\n      }).then(function (res) {\n        console.log(\"柜台信息\", res); //解析数据字典\n\n        if (res.data.length > 0) {\n          parseDict(res.data); // showStip(this);\n\n          _this.setState({\n            updateModalVisible: true,\n            selectedRowKeys: [_this.record.counterGwId]\n          }, function () {\n            _this.setState({\n              updateArr: res.data\n            }, function () {\n              _this.refs.counterTable.querySelector(\".ant-table-body\").style.height = \"600px\";\n            });\n          });\n        } else {\n          _message.info(\"柜台信息查询结果为空\");\n        }\n      }).catch(function (e) {\n        _message.error(\"柜台信息查询失败\");\n      });\n    };\n\n    _this.handleUpdateBtn = function (record) {\n      console.log(\"更新记录\", record);\n      _this.record = record;\n      _this.isInsert = false;\n      _this.isUpdate = true;\n\n      _this.getCounterInfo();\n    };\n\n    _this.setUpdateModal = function (_ref) {\n      var form = _ref.form,\n          record = _ref.record;\n      // console.log(record, form);\n      _this.record = record;\n      form.setFieldsValue({\n        userId: record.userId,\n        userName: record.userName,\n        counterGwId: record.counterGwId,\n        counterUserId: record.counterUserId,\n        businessType: record.businessType,\n        loginStatus: record.loginStatus,\n        clientType: record.clientType,\n        uuserId: record.uuserId,\n        createTime: record.createTime\n      });\n    };\n\n    _this.handleUpdateModalOk = function () {\n      if (_this.state.selectedRowKeys.length == 0) {\n        _message.error(\"请选择柜台网关\");\n\n        return;\n      } // console.log(\"selectedRowKeys\", this.state.selectedRowKeys);\n      // console.log(\"record\", this.record);\n      // return;\n\n\n      _this.handleUpdateRecord();\n    };\n\n    _this.handleUpdateRecord = function () {\n      // let formData = form.getFieldsValue();\n      var params = {};\n      params.UuserId = _this.record.uuserId;\n      params.BusinessType = _this.record.businessType; // let dataArr = this.record.businessType.split(\"-\");\n      // console.log(dataArr);\n      // if (dataArr.length == 2) {\n      //     params.BusinessType = dataArr[0] / 1;\n      // }\n\n      params.GwId = _this.state.selectedRowKeys[0] / 1;\n      console.log(\"更新记录\", params); // return;\n\n      http.post({\n        url: \"/counter-user-info/updateUserCounterGw\",\n        data: params\n      }).then(function (res) {\n        console.log(res);\n        _this.isAction = true; //解析数据字典\n\n        if (res.code == 0) {\n          _message.success(\"修改柜台网关Id成功\");\n\n          _this.setState({\n            updateModalVisible: false\n          });\n\n          _this.getData();\n        } else {\n          _message.error(\"修改柜台网关Id失败\");\n        }\n      });\n    };\n\n    _this.handleUpdateModalCancel = function () {\n      _this.setState({\n        updateModalVisible: false\n      });\n    };\n\n    _this.getData = function () {\n      var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      // params.token = \"\";\n      http.post({\n        url: \"/counter-user-info/list\",\n        data: params\n      }).then(function (res) {\n        console.log(res); //解析数据字典\n\n        if (res.data.length > 0) {\n          // parseDict(res.data);\n          parseDictValue(res.data);\n          showStip(_assertThisInitialized(_this));\n        } else {\n          _message.info(\"查询结果为空\");\n        }\n\n        _this.setState({\n          info: res.data\n        });\n      });\n    };\n\n    _this.handleSearch = function (params) {\n      _this.getData(params);\n    };\n\n    return _this;\n  }\n\n  _createClass(CounterGw, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getData();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var scroll = {\n        x: 1000,\n        y: 445\n      };\n      var scroll2 = {\n        x: 1000,\n        y: 900\n      };\n      var info = this.state.info;\n      var getFieldDecorator = this.props.form.getFieldDecorator;\n      var labelCol = {\n        xs: 12\n      };\n      var wrapperCol = {\n        xs: 24 - labelCol.xs\n      };\n      var formItemLayout = {\n        labelCol: labelCol,\n        wrapperCol: wrapperCol\n      };\n      var selectedRowKeys = this.state.selectedRowKeys;\n      var rowSelection = {\n        selectedRowKeys: selectedRowKeys,\n        type: \"radio\",\n        onChange: this.handleTableChange\n      };\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 365\n        },\n        __self: this\n      }, React.createElement(CurdComponent // rowKey={\"index\"}\n      // btnText2=\"查全部\"\n      // isShowSearchForm={false}\n      , {\n        onSearchClick: this.handleSearch,\n        getSearchFormFields: getSearchFormFields // searchLoading={this.state.searchLoading}\n        // insertBtnText={\"新增UOE配置\"} // 不传 就没新增按钮\n        // getInsertFormFields={getInsertFormFields}\n        // insertRecord={this.handleInsertRecord}\n        // col=\"2\"\n        ,\n        width: \"600px\" // updateModalText=\"修改柜台网关Id\"\n        // getUpdateFormFields={getUpdateFormFields}\n        // setUpdateModal={this.setUpdateModal}\n        // updateRecord={this.handleUpdateRecord} // 不传 就没编辑\n        // deleteRecord={this.handleDeleteRecord} // 不传 就没删除\n        ,\n        centered: true,\n        columns: this.columns,\n        dataSource: info,\n        scroll: scroll // rowSelection={rowSelection} //批量选择 操作\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 366\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        urlPrefix: \"/counter-user-info\",\n        title: \"\\u67DC\\u53F0\\u7528\\u6237\",\n        sucCallback: this.getData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 389\n        },\n        __self: this\n      })), React.createElement(_Modal, {\n        title: \"修改柜台网关Id\",\n        visible: this.state.updateModalVisible,\n        onOk: this.handleUpdateModalOk,\n        onCancel: this.handleUpdateModalCancel,\n        width: 1288,\n        centered: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 395\n        },\n        __self: this\n      }, React.createElement(_Form, {\n        layout: \"inline\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 403\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        ref: \"counterTable\",\n        className: \"counterTable\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 404\n        },\n        __self: this\n      }, React.createElement(Table, {\n        rowKey: \"id\",\n        columns: this.columns2(),\n        dataSource: this.state.updateArr,\n        scroll: scroll2,\n        size: \"small\",\n        rowSelection: rowSelection // handlePagination={this.handlePagination}\n        // pagination={this.props.pagination}\n        ,\n        pagination: false // pagaSize={pagaSize}\n        // onDoubleClick={this.onDoubleClick}\n        // showDetail={dtColumns.length > 0}\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 405\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return CounterGw;\n}(React.PureComponent);\n\nexport default _Form.create()(CounterGw);","map":{"version":3,"sources":["D:/company/algo-manage/src/algo/modules/manage/pages/counterGw/index.js"],"names":["React","CurdComponent","Table","styles","getSearchFormFields","label","id","component","getUpdateFormFields","rules","required","message","CounterGw","columns","params","title","dataIndex","render","text","record","e","handleUpdateBtn","counterGwId","color","width","columns2","ellipsis","state","searchLoading","selectedRowKeys","info","updateArr","updateModalVisible","handleTableChange","row","setState","getCounterInfo","businessType","http","post","url","data","then","res","console","log","length","parseDict","refs","counterTable","querySelector","style","height","catch","error","isInsert","isUpdate","setUpdateModal","form","setFieldsValue","userId","userName","counterUserId","loginStatus","clientType","uuserId","createTime","handleUpdateModalOk","handleUpdateRecord","UuserId","BusinessType","GwId","isAction","code","success","getData","handleUpdateModalCancel","parseDictValue","showStip","handleSearch","scroll","x","y","scroll2","getFieldDecorator","props","labelCol","xs","wrapperCol","formItemLayout","rowSelection","type","onChange","PureComponent","create"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport CurdComponent from \"@/components/CurdComponent\";\r\n// import SelectOption from \"@/components/SelectOption\";\r\nimport { Input, Modal, Form, message, Icon, Tooltip } from \"antd\";\r\nimport Table from \"@/components/Table\";\r\nimport styles from \"./style.module.less\";\r\n\r\nlet getSearchFormFields = () => {\r\n    return [\r\n        {\r\n            label: \"用户ID\",\r\n            id: \"userId\",\r\n            component: <Input placeholder=\"请输入\" />,\r\n        },\r\n    ];\r\n};\r\nconst getUpdateFormFields = () => {\r\n    return [\r\n        {\r\n            label: \"用户ID\",\r\n            id: \"userId\",\r\n            component: <Input readOnly disabled />,\r\n        },\r\n        {\r\n            label: \"用户名\",\r\n            id: \"userName\",\r\n            component: <Input readOnly disabled />,\r\n        },\r\n        {\r\n            label: \"柜台网关Id\",\r\n            id: \"counterGwId\",\r\n            rules: [\r\n                {\r\n                    required: true,\r\n                    message: \"柜台网关Id不能为空\",\r\n                },\r\n            ],\r\n            component: <Input placeholder=\"请输入交换机编号\" />,\r\n        },\r\n        {\r\n            label: \"来自柜台\",\r\n            id: \"counterUserId\",\r\n            component: <Input readOnly disabled />,\r\n        },\r\n        {\r\n            label: \"业务类型\",\r\n            id: \"businessType\",\r\n            component: <Input readOnly disabled />,\r\n        },\r\n        {\r\n            label: \"登录状态\",\r\n            id: \"loginStatus\",\r\n            component: <Input readOnly disabled />,\r\n        },\r\n        {\r\n            label: \"客户类型\",\r\n            id: \"clientType\",\r\n            component: <Input readOnly disabled />,\r\n        },\r\n        {\r\n            label: \"算法平台用户Id\",\r\n            id: \"uuserId\",\r\n            component: <Input readOnly disabled />,\r\n        },\r\n        {\r\n            label: \"创建时间\",\r\n            id: \"createTime\",\r\n            component: <Input readOnly disabled />,\r\n        },\r\n    ];\r\n};\r\nclass CounterGw extends React.PureComponent {\r\n    columns = (params) => {\r\n        return [\r\n            {\r\n                title: \"用户ID\",\r\n                dataIndex: \"userId\",\r\n            },\r\n            {\r\n                title: \"用户名\",\r\n                dataIndex: \"userName\",\r\n            },\r\n            // {\r\n            //     title: \"柜台网关Id\",\r\n            //     dataIndex: \"counterGwId\",\r\n            // },\r\n            {\r\n                title: \"柜台网关Id\",\r\n                dataIndex: \"counterGwId\",\r\n                render: (text, record) => (\r\n                    <div\r\n                        onClick={(e) => {\r\n                            this.handleUpdateBtn(record);\r\n                        }}\r\n                    >\r\n                        <Tooltip title=\"修改网关\">\r\n                            {record.counterGwId}\r\n                            <Icon type=\"edit\" style={{ color: \"#1899ff\" }} />\r\n                        </Tooltip>\r\n                    </div>\r\n                ),\r\n            },\r\n            {\r\n                title: \"来自柜台\",\r\n                dataIndex: \"counterUserId\",\r\n            },\r\n            {\r\n                title: \"业务类型\",\r\n                dataIndex: \"businessTypeValue\",\r\n            },\r\n            {\r\n                title: \"登录状态\",\r\n                dataIndex: \"loginStatusValue\",\r\n            },\r\n            {\r\n                title: \"客户类型\",\r\n                dataIndex: \"clientTypeValue\",\r\n            },\r\n            {\r\n                title: \"算法平台用户Id\",\r\n                dataIndex: \"uuserId\",\r\n                width: 150,\r\n            },\r\n            {\r\n                title: \"创建时间\",\r\n                dataIndex: \"createTime\",\r\n            },\r\n            // {\r\n            //     title: \"操作\",\r\n            //     key: \"operation\",\r\n            //     fixed: \"right\",\r\n            //     width: 100,\r\n            //     render: (text, record) => (\r\n            //         <a\r\n            //             onClick={(e) => {\r\n            //                 this.handleUpdateBtn(record);\r\n            //             }}\r\n            //         >\r\n            //             编辑\r\n            //         </a>\r\n            //     ),\r\n            // },\r\n        ];\r\n    };\r\n    columns2 = (params) => {\r\n        return [\r\n            {\r\n                title: \"网关ID\",\r\n                dataIndex: \"id\",\r\n                width: 100,\r\n                ellipsis: true,\r\n            },\r\n            {\r\n                title: \"券商编码\",\r\n                dataIndex: \"brokerCode\",\r\n                width: 135,\r\n                ellipsis: true,\r\n            },\r\n            {\r\n                title: \"券商名称\",\r\n                dataIndex: \"brokerName\",\r\n                width: 130,\r\n                ellipsis: true,\r\n            },\r\n            {\r\n                title: \"支持的业务类型\",\r\n                dataIndex: \"supportType\",\r\n                ellipsis: true,\r\n            },\r\n            {\r\n                title: \"柜台地址\",\r\n                dataIndex: \"gwAddr\",\r\n                width: 180,\r\n                ellipsis: true,\r\n            },\r\n            {\r\n                title: \"柜台状态\",\r\n                dataIndex: \"status\",\r\n                ellipsis: true,\r\n            },\r\n            {\r\n                title: \"柜台版本号\",\r\n                dataIndex: \"version\",\r\n                width: 120,\r\n                ellipsis: true,\r\n            },\r\n        ];\r\n    };\r\n\r\n    state = {\r\n        searchLoading: false,\r\n        selectedRowKeys: [],\r\n        info: [],\r\n        updateArr: [],\r\n        updateModalVisible: false,\r\n    };\r\n    //批量选择\r\n    handleTableChange = (selectedRowKeys, row) => {\r\n        // console.log(\"批量选择\", selectedRowKeys, row);\r\n        this.setState({\r\n            selectedRowKeys: selectedRowKeys,\r\n        });\r\n    };\r\n    getCounterInfo = (params = {}) => {\r\n        // params.token = \"\";\r\n        // console.log(this.record);\r\n        params.businessType = this.record.businessType;\r\n        http.post({\r\n            url: \"/counter-info/getCounterInfo\",\r\n            data: params,\r\n        })\r\n            .then((res) => {\r\n                console.log(\"柜台信息\", res);\r\n                //解析数据字典\r\n                if (res.data.length > 0) {\r\n                    parseDict(res.data);\r\n                    // showStip(this);\r\n                    this.setState(\r\n                        {\r\n                            updateModalVisible: true,\r\n                            selectedRowKeys: [this.record.counterGwId],\r\n                        },\r\n                        () => {\r\n                            this.setState(\r\n                                {\r\n                                    updateArr: res.data,\r\n                                },\r\n                                () => {\r\n                                    this.refs.counterTable.querySelector(\r\n                                        \".ant-table-body\"\r\n                                    ).style.height = \"600px\";\r\n                                }\r\n                            );\r\n                        }\r\n                    );\r\n                } else {\r\n                    message.info(\"柜台信息查询结果为空\");\r\n                }\r\n            })\r\n            .catch((e) => {\r\n                message.error(\"柜台信息查询失败\");\r\n            });\r\n    };\r\n    // 编辑按钮点击事件\r\n    handleUpdateBtn = (record) => {\r\n        console.log(\"更新记录\", record);\r\n        this.record = record;\r\n        this.isInsert = false;\r\n        this.isUpdate = true;\r\n        this.getCounterInfo();\r\n    };\r\n    //填入更新数据\r\n    setUpdateModal = ({ form, record }) => {\r\n        // console.log(record, form);\r\n        this.record = record;\r\n        form.setFieldsValue({\r\n            userId: record.userId,\r\n            userName: record.userName,\r\n            counterGwId: record.counterGwId,\r\n            counterUserId: record.counterUserId,\r\n            businessType: record.businessType,\r\n            loginStatus: record.loginStatus,\r\n            clientType: record.clientType,\r\n            uuserId: record.uuserId,\r\n            createTime: record.createTime,\r\n        });\r\n    };\r\n    //弹窗确定\r\n    handleUpdateModalOk = () => {\r\n        if (this.state.selectedRowKeys.length == 0) {\r\n            message.error(\"请选择柜台网关\");\r\n            return;\r\n        }\r\n        // console.log(\"selectedRowKeys\", this.state.selectedRowKeys);\r\n        // console.log(\"record\", this.record);\r\n        // return;\r\n        this.handleUpdateRecord();\r\n    };\r\n    //更新记录\r\n    handleUpdateRecord = () => {\r\n        // let formData = form.getFieldsValue();\r\n        let params = {};\r\n        params.UuserId = this.record.uuserId;\r\n        params.BusinessType = this.record.businessType;\r\n        // let dataArr = this.record.businessType.split(\"-\");\r\n        // console.log(dataArr);\r\n        // if (dataArr.length == 2) {\r\n        //     params.BusinessType = dataArr[0] / 1;\r\n        // }\r\n        params.GwId = this.state.selectedRowKeys[0] / 1;\r\n        console.log(\"更新记录\", params);\r\n        // return;\r\n        http.post({\r\n            url: \"/counter-user-info/updateUserCounterGw\",\r\n            data: params,\r\n        }).then((res) => {\r\n            console.log(res);\r\n            this.isAction = true;\r\n            //解析数据字典\r\n            if (res.code == 0) {\r\n                message.success(\"修改柜台网关Id成功\");\r\n                this.setState({\r\n                    updateModalVisible: false,\r\n                });\r\n                this.getData();\r\n            } else {\r\n                message.error(\"修改柜台网关Id失败\");\r\n            }\r\n        });\r\n    };\r\n    handleUpdateModalCancel = () => {\r\n        this.setState({\r\n            updateModalVisible: false,\r\n        });\r\n    };\r\n    getData = (params = {}) => {\r\n        // params.token = \"\";\r\n        http.post({\r\n            url: \"/counter-user-info/list\",\r\n            data: params,\r\n        }).then((res) => {\r\n            console.log(res);\r\n            //解析数据字典\r\n            if (res.data.length > 0) {\r\n                // parseDict(res.data);\r\n                parseDictValue(res.data);\r\n                showStip(this);\r\n            } else {\r\n                message.info(\"查询结果为空\");\r\n            }\r\n            this.setState({\r\n                info: res.data,\r\n            });\r\n        });\r\n    };\r\n    handleSearch = (params) => {\r\n        this.getData(params);\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.getData();\r\n    }\r\n    render() {\r\n        let scroll = { x: 1000, y: 445 };\r\n        let scroll2 = { x: 1000, y: 900 };\r\n        let info = this.state.info;\r\n        let { getFieldDecorator } = this.props.form;\r\n        let labelCol = {\r\n            xs: 12,\r\n        };\r\n        let wrapperCol = {\r\n            xs: 24 - labelCol.xs,\r\n        };\r\n        let formItemLayout = {\r\n            labelCol,\r\n            wrapperCol,\r\n        };\r\n        let { selectedRowKeys } = this.state;\r\n        const rowSelection = {\r\n            selectedRowKeys,\r\n            type: \"radio\",\r\n            onChange: this.handleTableChange,\r\n        };\r\n        return (\r\n            <div>\r\n                <CurdComponent\r\n                    // rowKey={\"index\"}\r\n                    // btnText2=\"查全部\"\r\n                    // isShowSearchForm={false}\r\n                    onSearchClick={this.handleSearch}\r\n                    getSearchFormFields={getSearchFormFields}\r\n                    // searchLoading={this.state.searchLoading}\r\n                    // insertBtnText={\"新增UOE配置\"} // 不传 就没新增按钮\r\n                    // getInsertFormFields={getInsertFormFields}\r\n                    // insertRecord={this.handleInsertRecord}\r\n                    // col=\"2\"\r\n                    width=\"600px\"\r\n                    // updateModalText=\"修改柜台网关Id\"\r\n                    // getUpdateFormFields={getUpdateFormFields}\r\n                    // setUpdateModal={this.setUpdateModal}\r\n                    // updateRecord={this.handleUpdateRecord} // 不传 就没编辑\r\n                    // deleteRecord={this.handleDeleteRecord} // 不传 就没删除\r\n                    centered={true}\r\n                    columns={this.columns}\r\n                    dataSource={info}\r\n                    scroll={scroll}\r\n                    // rowSelection={rowSelection} //批量选择 操作\r\n                >\r\n                    <div\r\n                        urlPrefix=\"/counter-user-info\"\r\n                        title=\"柜台用户\"\r\n                        sucCallback={this.getData}\r\n                    ></div>\r\n                </CurdComponent>\r\n                <Modal\r\n                    title={\"修改柜台网关Id\"}\r\n                    visible={this.state.updateModalVisible}\r\n                    onOk={this.handleUpdateModalOk}\r\n                    onCancel={this.handleUpdateModalCancel}\r\n                    width={1288}\r\n                    centered\r\n                >\r\n                    <Form layout={\"inline\"}>\r\n                        <div ref=\"counterTable\" className=\"counterTable\">\r\n                            <Table\r\n                                rowKey={\"id\"}\r\n                                columns={this.columns2()}\r\n                                dataSource={this.state.updateArr}\r\n                                scroll={scroll2}\r\n                                size=\"small\"\r\n                                rowSelection={rowSelection}\r\n                                // handlePagination={this.handlePagination}\r\n                                // pagination={this.props.pagination}\r\n                                pagination={false}\r\n                                // pagaSize={pagaSize}\r\n                                // onDoubleClick={this.onDoubleClick}\r\n                                // showDetail={dtColumns.length > 0}\r\n                            ></Table>\r\n                        </div>\r\n                    </Form>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Form.create()(CounterGw);\r\n"]},"metadata":{},"sourceType":"module"}