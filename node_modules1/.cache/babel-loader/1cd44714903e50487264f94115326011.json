{"ast":null,"code":"import _defineProperty from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport \"antd/lib/input/style\";\nimport _Input from \"antd/lib/input\";\nvar _jsxFileName = \"D:\\\\company\\\\algo-manage\\\\src\\\\algo\\\\modules\\\\manage\\\\pages\\\\newOrderQuery\\\\index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport CurdComponent from \"@/components/CurdComponent\";\nimport SelectOption from \"@/components/SelectOption\";\nimport TagLabel from \"@/components/Tag\";\n\nvar getUpdateFormFields = function getUpdateFormFields() {};\n\nvar columns = function columns(params) {\n  return [{\n    title: \"母单ID\",\n    dataIndex: \"id\",\n    width: 100\n  }, {\n    title: \"用户名称\",\n    dataIndex: \"userName\",\n    width: 100\n  }, {\n    title: \"篮子ID\",\n    dataIndex: \"basketId\",\n    width: 120\n  }, {\n    title: \"业务类型\",\n    dataIndex: \"businessType\",\n    width: 100\n  }, {\n    title: \"算法类型\",\n    dataIndex: \"algorithmType\",\n    width: 150\n  }, {\n    title: \"算法ID\",\n    dataIndex: \"algorithmId\",\n    width: 100\n  }, {\n    title: \"证券代码\",\n    dataIndex: \"securityId\",\n    width: 120\n  }, {\n    title: \"市场代码\",\n    dataIndex: \"market\"\n  }, {\n    title: \"所有方向\",\n    dataIndex: \"side\"\n  }, // {\n  //     title: \"母单订单数量 \",\n  //     dataIndex: \"algoOrderQty\",\n  //     width: 120,\n  // },\n  {\n    title: \"算法参数\",\n    dataIndex: \"strategyParam\",\n    width: 200\n  }, {\n    title: \"客户端序列号\",\n    dataIndex: \"seq\",\n    width: 130\n  }, {\n    title: \"算法状态\",\n    dataIndex: \"algorithmStatus\",\n    width: 170\n  }, {\n    // title: \"母单状态\",\n    title: \"订单状态\",\n    dataIndex: \"algoOrdStatus\",\n    width: 150,\n    render: function render(text, record) {\n      // return (\n      //     <TagLabel\n      //         record={record.algoOrdStatus}\n      //         type=\"success\"\n      //     ></TagLabel>\n      // );\n      if (record.algoOrdStatus.indexOf(\"0\") == 0 || record.algoOrdStatus.indexOf(\"2\") == 0) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        }, React.createElement(TagLabel, {\n          record: record.algoOrdStatus // type=\"success\"\n          ,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        }));\n      } else if (record.algoOrdStatus.indexOf(\"1\") == 0 || record.algoOrdStatus.indexOf(\"3\") == 0 || record.algoOrdStatus.indexOf(\"4\") == 0) {\n        return React.createElement(TagLabel, {\n          record: record.algoOrdStatus,\n          type: \"fail\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103\n          },\n          __self: this\n        });\n      } else if (record.algoOrdStatus.indexOf(\"5\") == 0 || record.algoOrdStatus.indexOf(\"7\") == 0) {\n        return React.createElement(TagLabel, {\n          record: record.algoOrdStatus,\n          type: \"warn\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113\n          },\n          __self: this\n        });\n      } else if (record.algoOrdStatus.indexOf(\"6\") == 0) {\n        return React.createElement(TagLabel, {\n          record: record.algoOrdStatus,\n          type: \"success\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(TagLabel, {\n        record: record.algoOrdStatus,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      });\n    }\n  }, {\n    title: \"母单在篮子表中的状态\",\n    dataIndex: \"basketStatus\",\n    width: 180\n  }, {\n    title: \"请求用户ID\",\n    dataIndex: \"reqUserId\",\n    width: 140\n  }, {\n    title: \"错误码\",\n    dataIndex: \"errorCode\",\n    width: 100\n  }, {\n    title: \"错误信息\",\n    dataIndex: \"errorMsg\"\n  }, {\n    title: \"个人账户\",\n    dataIndex: \"userId\",\n    width: 140\n  }, {\n    title: \"算法平台账户\",\n    dataIndex: \"algoUserId\",\n    width: 130\n  }, {\n    title: \"股东账户\",\n    dataIndex: \"accountId\",\n    width: 140\n  }, {\n    title: \"证券代码源\",\n    dataIndex: \"securityIdSource\",\n    width: 130\n  }, {\n    title: \"交易时间\",\n    dataIndex: \"transactTime\",\n    width: 180\n  }, {\n    title: \"母单订单数量 \",\n    dataIndex: \"algoOrderQty\",\n    width: 140\n  }, {\n    title: \"子单买订单数量 \",\n    dataIndex: \"buyOrderQty\",\n    width: 150\n  }, {\n    title: \"子单卖订单数量 \",\n    dataIndex: \"sellOrderQty\",\n    width: 150\n  }, {\n    title: \"累计成交买订单数量 \",\n    dataIndex: \"buyCumQty\",\n    width: 170\n  }, {\n    title: \"累计成交卖订单数量 \",\n    dataIndex: \"sellCumQty\",\n    width: 170\n  }, {\n    title: \"子单买撤单数量 \",\n    dataIndex: \"buyCancelQty\",\n    width: 160\n  }, {\n    title: \"子单卖撤单数量 \",\n    dataIndex: \"sellCancelQty\",\n    width: 160\n  }, {\n    title: \"累计买撤单成功数量 \",\n    dataIndex: \"buyCancelledCumQty\",\n    width: 170\n  }, {\n    title: \"累计卖撤单成功数量 \",\n    dataIndex: \"sellCancelledCumQty\",\n    width: 170\n  }, {\n    title: \"平均买入价格\",\n    dataIndex: \"buyPrice\",\n    width: 150\n  }, {\n    title: \"平均卖出价格\",\n    dataIndex: \"sellPrice\",\n    width: 150\n  }, {\n    title: \"平均买入开仓价格\",\n    dataIndex: \"buyOpenPrice\",\n    width: 170\n  }, {\n    title: \"平均买入平仓价格\",\n    dataIndex: \"buyClosePrice\",\n    width: 170\n  }, {\n    title: \"平均卖出开仓价格\",\n    dataIndex: \"sellOpenPrice\",\n    width: 170\n  }, {\n    title: \"平均卖出平仓价格\",\n    dataIndex: \"sellClosePrice\",\n    width: 170\n  }, {\n    title: \"盈亏\",\n    dataIndex: \"profitAndLoss\",\n    width: 80\n  }, {\n    title: \"收益率\",\n    dataIndex: \"rateOfReturn\",\n    width: 100\n  }, {\n    title: \"成功下单的买入总委托金额\",\n    dataIndex: \"buySuccAmount\",\n    width: 210\n  }, {\n    title: \"成功撤单的买入总委托金额\",\n    dataIndex: \"sellSuccAmount\",\n    width: 210\n  }, {\n    title: \"子单买订单总条数\",\n    dataIndex: \"buyItemTotal\",\n    width: 160\n  }, {\n    title: \"子单卖订单总条数\",\n    dataIndex: \"sellItemTotal\",\n    width: 170\n  }, {\n    title: \"子单买订单成功条数\",\n    dataIndex: \"buyItemCount\",\n    width: 170\n  }, {\n    title: \"子单卖订单成功条数\",\n    dataIndex: \"sellItemCount\",\n    width: 170\n  }, {\n    title: \"累计成交买订单条数\",\n    dataIndex: \"buyItemCum\",\n    width: 170\n  }, {\n    title: \"累计成交卖订单条数\",\n    dataIndex: \"sellItemCum\",\n    width: 170\n  }, {\n    title: \"子单买撤单条数\",\n    dataIndex: \"buyCancelItemCount\",\n    width: 150\n  }, {\n    title: \"子单卖撤单条数\",\n    dataIndex: \"sellCancelItemCount\",\n    width: 150\n  }, {\n    title: \"累计买撤单成功条数\",\n    dataIndex: \"buyCancelledItemCum\",\n    width: 170\n  }, {\n    title: \"累计卖撤单成功条数\",\n    dataIndex: \"sellCancelledItemCum\",\n    width: 170\n  }, {\n    title: \"风控自成交子单数计数\",\n    dataIndex: \"selfExecCount\",\n    width: 180\n  }, {\n    title: \"成交记录ID\",\n    dataIndex: \"version\",\n    width: 120\n  }];\n};\n\nvar getSearchFormFields = function getSearchFormFields() {\n  return [{\n    // label: \"母单ID\",\n    label: React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336\n      },\n      __self: this\n    }, \"\\u6BCD\\xA0\\xA0\\u5355\\xA0ID\"),\n    id: \"id\",\n    component: React.createElement(_Input, {\n      placeholder: \"\\u8BF7\\u8F93\\u5165\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338\n      },\n      __self: this\n    })\n  }, {\n    // label: \"用户名称\",\n    label: React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342\n      },\n      __self: this\n    }, \"\\u7528\\u6237\\u540D\\u79F0\"),\n    id: \"userName\",\n    component: React.createElement(_Input, {\n      placeholder: \"\\u8BF7\\u8F93\\u5165\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344\n      },\n      __self: this\n    })\n  }, {\n    // label: \"篮子ID\",\n    label: React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348\n      },\n      __self: this\n    }, \"\\u7BEE\\xA0\\xA0\\u5B50\\xA0ID\"),\n    id: \"basketId\",\n    component: React.createElement(_Input, {\n      placeholder: \"\\u8BF7\\u8F93\\u5165\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350\n      },\n      __self: this\n    })\n  }, {\n    // label: \"算法ID\",\n    label: React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354\n      },\n      __self: this\n    }, \"\\u7B97\\xA0\\xA0\\u6CD5\\xA0ID\"),\n    id: \"algorithmId\",\n    initialValue: \"\",\n    component: React.createElement(_Input, {\n      placeholder: \"\\u8BF7\\u8F93\\u5165\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357\n      },\n      __self: this\n    })\n  }, {\n    label: \"证券代码\",\n    id: \"securityId\",\n    initialValue: \"\",\n    component: React.createElement(_Input, {\n      placeholder: \"\\u8BF7\\u8F93\\u5165\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363\n      },\n      __self: this\n    })\n  }, {\n    label: \"业务类型\",\n    id: \"businessType\",\n    initialValue: \"1\",\n    component: SelectOption(dict.businessTypeSelect, {\n      placeholder: \"请选择\" // allowClear: true,\n\n    })\n  }];\n};\n\nvar newOrderQuery =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(newOrderQuery, _React$PureComponent);\n\n  function newOrderQuery() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, newOrderQuery);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(newOrderQuery)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      searchLoading: false,\n      selectRow: [],\n      info: [],\n      pagination: {\n        total: 0\n      }\n    };\n\n    _this.handleTableChange = function (selectedRowKeys) {\n      console.log(\"批量选择\");\n\n      _this.setState({\n        selectRow: selectedRowKeys\n      });\n    };\n\n    _this.handleInsertRecord = function (params) {\n      console.log(params);\n    };\n\n    _this.handleUpdateRecord = function (_ref) {\n      var form = _ref.form;\n      console.log(form.getFieldsValue()); // return\n    };\n\n    _this.handleDeleteRecord = function (record) {\n      console.log(\"删除记录 \", record);\n    };\n\n    _this.setUpdateModal = function (_ref2) {\n      var form = _ref2.form,\n          record = _ref2.record;\n    };\n\n    _this.getData = function () {\n      var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var pagination = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n        current: 1,\n        pageSize: 12\n      };\n\n      // params.token = \"\";\n      // params.pageId = 1;\n      // params.pageNum = 20;\n      if (!params.businessType) {\n        params.businessType = 1;\n      }\n\n      params = _objectSpread({}, params, {\n        pageId: pagination.current,\n        pageNum: pagination.pageSize\n      });\n      http.post({\n        url: \"/new-algo-order/list\",\n        data: params\n      }).then(function (res) {\n        console.log(res); //解析数据字典\n\n        if (res.data.records && res.data.records.length > 0) {\n          parseArrDict(res.data.records, \"basketStatus\", \"bStatus\");\n          parseDict(res.data.records); // showTip(this);\n        } else {\n          message.info(\"查询结果为空\");\n        }\n\n        var pgn = {\n          current: res.data.current,\n          pageSize: pagination.pageSize,\n          total: res.data.total || 0\n        };\n\n        _this.setState({\n          info: res.data.records,\n          pagination: pgn\n        });\n      });\n    };\n\n    _this.handleSearch = function (params, pagination) {\n      // console.log(\"获取搜索栏数据 \", params);\n      _this.getData(params, pagination);\n    };\n\n    return _this;\n  }\n\n  _createClass(newOrderQuery, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getData();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var scroll = {\n        x: 6000,\n        y: 445\n      };\n      var info = this.state.info;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 452\n        },\n        __self: this\n      }, React.createElement(CurdComponent // rowKey={\"index\"}\n      // isShowSearchForm={false}\n      // btnText2=\"查全部\"\n      , {\n        onSearchClick: this.handleSearch,\n        getSearchFormFields: getSearchFormFields // searchLoading={this.state.searchLoading}\n        // insertBtnText={\"新增UOE配置\"} // 不传 就没新增按钮\n        // getInsertFormFields={getInsertFormFields}\n        // insertRecord={this.handleInsertRecord}\n        // col=\"2\"\n        ,\n        width: \"600px\",\n        pagination: this.state.pagination // getUpdateFormFields={getUpdateFormFields}\n        // setUpdateModal={this.setUpdateModal}\n        // updateRecord={this.handleUpdateRecord} // 不传 就没编辑\n        // deleteRecord={this.handleDeleteRecord} // 不传 就没删除\n        // dtCol={2}\n        ,\n        dtWidth: \"800px\",\n        dtColumns: columns() //详情列表\n        // dtCol={2} //详情列数\n        ,\n        centered: true,\n        columns: columns,\n        dataSource: info,\n        scroll: scroll // rowSelection={rowSelection} //批量选择 操作\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 453\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        urlPrefix: \"/new-algo-order\",\n        noUpload: true,\n        title: \"\\u6BCD\\u5355\\u4FE1\\u606F\",\n        sucCallback: this.getData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 481\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return newOrderQuery;\n}(React.PureComponent);\n\nexport { newOrderQuery as default };","map":{"version":3,"sources":["D:/company/algo-manage/src/algo/modules/manage/pages/newOrderQuery/index.js"],"names":["React","CurdComponent","SelectOption","TagLabel","getUpdateFormFields","columns","params","title","dataIndex","width","render","text","record","algoOrdStatus","indexOf","getSearchFormFields","label","id","component","initialValue","dict","businessTypeSelect","placeholder","newOrderQuery","state","searchLoading","selectRow","info","pagination","total","handleTableChange","selectedRowKeys","console","log","setState","handleInsertRecord","handleUpdateRecord","form","getFieldsValue","handleDeleteRecord","setUpdateModal","getData","current","pageSize","businessType","pageId","pageNum","http","post","url","data","then","res","records","length","parseArrDict","parseDict","message","pgn","handleSearch","scroll","x","y","PureComponent"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport CurdComponent from \"@/components/CurdComponent\";\r\nimport SelectOption from \"@/components/SelectOption\";\r\nimport { Input } from \"antd\";\r\nimport TagLabel from \"@/components/Tag\";\r\n\r\nconst getUpdateFormFields = () => {};\r\nconst columns = (params) => {\r\n    return [\r\n        {\r\n            title: \"母单ID\",\r\n            dataIndex: \"id\",\r\n            width: 100,\r\n        },\r\n        {\r\n            title: \"用户名称\",\r\n            dataIndex: \"userName\",\r\n            width: 100,\r\n        },\r\n        {\r\n            title: \"篮子ID\",\r\n            dataIndex: \"basketId\",\r\n            width: 120,\r\n        },\r\n        {\r\n            title: \"业务类型\",\r\n            dataIndex: \"businessType\",\r\n            width: 100,\r\n        },\r\n        {\r\n            title: \"算法类型\",\r\n            dataIndex: \"algorithmType\",\r\n            width: 150,\r\n        },\r\n        {\r\n            title: \"算法ID\",\r\n            dataIndex: \"algorithmId\",\r\n            width: 100,\r\n        },\r\n        {\r\n            title: \"证券代码\",\r\n            dataIndex: \"securityId\",\r\n            width: 120,\r\n        },\r\n        {\r\n            title: \"市场代码\",\r\n            dataIndex: \"market\",\r\n        },\r\n        {\r\n            title: \"所有方向\",\r\n            dataIndex: \"side\",\r\n        },\r\n        // {\r\n        //     title: \"母单订单数量 \",\r\n        //     dataIndex: \"algoOrderQty\",\r\n        //     width: 120,\r\n        // },\r\n        {\r\n            title: \"算法参数\",\r\n            dataIndex: \"strategyParam\",\r\n            width: 200,\r\n        },\r\n        {\r\n            title: \"客户端序列号\",\r\n            dataIndex: \"seq\",\r\n            width: 130,\r\n        },\r\n        {\r\n            title: \"算法状态\",\r\n            dataIndex: \"algorithmStatus\",\r\n            width: 170,\r\n        },\r\n        {\r\n            // title: \"母单状态\",\r\n            title: \"订单状态\",\r\n            dataIndex: \"algoOrdStatus\",\r\n            width: 150,\r\n            render: (text, record) => {\r\n                // return (\r\n                //     <TagLabel\r\n                //         record={record.algoOrdStatus}\r\n                //         type=\"success\"\r\n                //     ></TagLabel>\r\n                // );\r\n                if (\r\n                    record.algoOrdStatus.indexOf(\"0\") == 0 ||\r\n                    record.algoOrdStatus.indexOf(\"2\") == 0\r\n                ) {\r\n                    return (\r\n                        <div>\r\n                            <TagLabel\r\n                                record={record.algoOrdStatus}\r\n                                // type=\"success\"\r\n                            ></TagLabel>\r\n                        </div>\r\n                    );\r\n                } else if (\r\n                    record.algoOrdStatus.indexOf(\"1\") == 0 ||\r\n                    record.algoOrdStatus.indexOf(\"3\") == 0 ||\r\n                    record.algoOrdStatus.indexOf(\"4\") == 0\r\n                ) {\r\n                    return (\r\n                        <TagLabel\r\n                            record={record.algoOrdStatus}\r\n                            type=\"fail\"\r\n                        ></TagLabel>\r\n                    );\r\n                } else if (\r\n                    record.algoOrdStatus.indexOf(\"5\") == 0 ||\r\n                    record.algoOrdStatus.indexOf(\"7\") == 0\r\n                ) {\r\n                    return (\r\n                        <TagLabel\r\n                            record={record.algoOrdStatus}\r\n                            type=\"warn\"\r\n                        ></TagLabel>\r\n                    );\r\n                } else if (record.algoOrdStatus.indexOf(\"6\") == 0) {\r\n                    return (\r\n                        <TagLabel\r\n                            record={record.algoOrdStatus}\r\n                            type=\"success\"\r\n                        ></TagLabel>\r\n                    );\r\n                }\r\n                return <TagLabel record={record.algoOrdStatus}></TagLabel>;\r\n            },\r\n        },\r\n        {\r\n            title: \"母单在篮子表中的状态\",\r\n            dataIndex: \"basketStatus\",\r\n            width: 180,\r\n        },\r\n        {\r\n            title: \"请求用户ID\",\r\n            dataIndex: \"reqUserId\",\r\n            width: 140,\r\n        },\r\n        {\r\n            title: \"错误码\",\r\n            dataIndex: \"errorCode\",\r\n            width: 100,\r\n        },\r\n        {\r\n            title: \"错误信息\",\r\n            dataIndex: \"errorMsg\",\r\n        },\r\n        {\r\n            title: \"个人账户\",\r\n            dataIndex: \"userId\",\r\n            width: 140,\r\n        },\r\n        {\r\n            title: \"算法平台账户\",\r\n            dataIndex: \"algoUserId\",\r\n            width: 130,\r\n        },\r\n        {\r\n            title: \"股东账户\",\r\n            dataIndex: \"accountId\",\r\n            width: 140,\r\n        },\r\n        {\r\n            title: \"证券代码源\",\r\n            dataIndex: \"securityIdSource\",\r\n            width: 130,\r\n        },\r\n        {\r\n            title: \"交易时间\",\r\n            dataIndex: \"transactTime\",\r\n            width: 180,\r\n        },\r\n        {\r\n            title: \"母单订单数量 \",\r\n            dataIndex: \"algoOrderQty\",\r\n            width: 140,\r\n        },\r\n        {\r\n            title: \"子单买订单数量 \",\r\n            dataIndex: \"buyOrderQty\",\r\n            width: 150,\r\n        },\r\n        {\r\n            title: \"子单卖订单数量 \",\r\n            dataIndex: \"sellOrderQty\",\r\n            width: 150,\r\n        },\r\n        {\r\n            title: \"累计成交买订单数量 \",\r\n            dataIndex: \"buyCumQty\",\r\n            width: 170,\r\n        },\r\n        {\r\n            title: \"累计成交卖订单数量 \",\r\n            dataIndex: \"sellCumQty\",\r\n            width: 170,\r\n        },\r\n        {\r\n            title: \"子单买撤单数量 \",\r\n            dataIndex: \"buyCancelQty\",\r\n            width: 160,\r\n        },\r\n        {\r\n            title: \"子单卖撤单数量 \",\r\n            dataIndex: \"sellCancelQty\",\r\n            width: 160,\r\n        },\r\n        {\r\n            title: \"累计买撤单成功数量 \",\r\n            dataIndex: \"buyCancelledCumQty\",\r\n            width: 170,\r\n        },\r\n        {\r\n            title: \"累计卖撤单成功数量 \",\r\n            dataIndex: \"sellCancelledCumQty\",\r\n            width: 170,\r\n        },\r\n        {\r\n            title: \"平均买入价格\",\r\n            dataIndex: \"buyPrice\",\r\n            width: 150,\r\n        },\r\n        {\r\n            title: \"平均卖出价格\",\r\n            dataIndex: \"sellPrice\",\r\n            width: 150,\r\n        },\r\n        {\r\n            title: \"平均买入开仓价格\",\r\n            dataIndex: \"buyOpenPrice\",\r\n            width: 170,\r\n        },\r\n        {\r\n            title: \"平均买入平仓价格\",\r\n            dataIndex: \"buyClosePrice\",\r\n            width: 170,\r\n        },\r\n        {\r\n            title: \"平均卖出开仓价格\",\r\n            dataIndex: \"sellOpenPrice\",\r\n            width: 170,\r\n        },\r\n        {\r\n            title: \"平均卖出平仓价格\",\r\n            dataIndex: \"sellClosePrice\",\r\n            width: 170,\r\n        },\r\n\r\n        {\r\n            title: \"盈亏\",\r\n            dataIndex: \"profitAndLoss\",\r\n            width: 80,\r\n        },\r\n        {\r\n            title: \"收益率\",\r\n            dataIndex: \"rateOfReturn\",\r\n            width: 100,\r\n        },\r\n        {\r\n            title: \"成功下单的买入总委托金额\",\r\n            dataIndex: \"buySuccAmount\",\r\n            width: 210,\r\n        },\r\n        {\r\n            title: \"成功撤单的买入总委托金额\",\r\n            dataIndex: \"sellSuccAmount\",\r\n            width: 210,\r\n        },\r\n        {\r\n            title: \"子单买订单总条数\",\r\n            dataIndex: \"buyItemTotal\",\r\n            width: 160,\r\n        },\r\n        {\r\n            title: \"子单卖订单总条数\",\r\n            dataIndex: \"sellItemTotal\",\r\n            width: 170,\r\n        },\r\n        {\r\n            title: \"子单买订单成功条数\",\r\n            dataIndex: \"buyItemCount\",\r\n            width: 170,\r\n        },\r\n        {\r\n            title: \"子单卖订单成功条数\",\r\n            dataIndex: \"sellItemCount\",\r\n            width: 170,\r\n        },\r\n        {\r\n            title: \"累计成交买订单条数\",\r\n            dataIndex: \"buyItemCum\",\r\n            width: 170,\r\n        },\r\n        {\r\n            title: \"累计成交卖订单条数\",\r\n            dataIndex: \"sellItemCum\",\r\n            width: 170,\r\n        },\r\n\r\n        {\r\n            title: \"子单买撤单条数\",\r\n            dataIndex: \"buyCancelItemCount\",\r\n            width: 150,\r\n        },\r\n        {\r\n            title: \"子单卖撤单条数\",\r\n            dataIndex: \"sellCancelItemCount\",\r\n            width: 150,\r\n        },\r\n        {\r\n            title: \"累计买撤单成功条数\",\r\n            dataIndex: \"buyCancelledItemCum\",\r\n            width: 170,\r\n        },\r\n        {\r\n            title: \"累计卖撤单成功条数\",\r\n            dataIndex: \"sellCancelledItemCum\",\r\n            width: 170,\r\n        },\r\n        {\r\n            title: \"风控自成交子单数计数\",\r\n            dataIndex: \"selfExecCount\",\r\n            width: 180,\r\n        },\r\n        {\r\n            title: \"成交记录ID\",\r\n            dataIndex: \"version\",\r\n            width: 120,\r\n        },\r\n    ];\r\n};\r\nconst getSearchFormFields = () => {\r\n    return [\r\n        {\r\n            // label: \"母单ID\",\r\n            label: <span>母&nbsp;&nbsp;单&nbsp;ID</span>,\r\n            id: \"id\",\r\n            component: <Input placeholder=\"请输入\" />,\r\n        },\r\n        {\r\n            // label: \"用户名称\",\r\n            label: <span>用户名称</span>,\r\n            id: \"userName\",\r\n            component: <Input placeholder=\"请输入\" />,\r\n        },\r\n        {\r\n            // label: \"篮子ID\",\r\n            label: <span>篮&nbsp;&nbsp;子&nbsp;ID</span>,\r\n            id: \"basketId\",\r\n            component: <Input placeholder=\"请输入\" />,\r\n        },\r\n        {\r\n            // label: \"算法ID\",\r\n            label: <span>算&nbsp;&nbsp;法&nbsp;ID</span>,\r\n            id: \"algorithmId\",\r\n            initialValue: \"\",\r\n            component: <Input placeholder=\"请输入\" />,\r\n        },\r\n        {\r\n            label: \"证券代码\",\r\n            id: \"securityId\",\r\n            initialValue: \"\",\r\n            component: <Input placeholder=\"请输入\" />,\r\n        },\r\n        {\r\n            label: \"业务类型\",\r\n            id: \"businessType\",\r\n            initialValue: \"1\",\r\n            component: SelectOption(dict.businessTypeSelect, {\r\n                placeholder: \"请选择\",\r\n                // allowClear: true,\r\n            }),\r\n        },\r\n    ];\r\n};\r\nexport default class newOrderQuery extends React.PureComponent {\r\n    state = {\r\n        searchLoading: false,\r\n        selectRow: [],\r\n        info: [],\r\n        pagination: { total: 0 },\r\n    };\r\n    //批量选择\r\n    handleTableChange = (selectedRowKeys) => {\r\n        console.log(\"批量选择\");\r\n        this.setState({\r\n            selectRow: selectedRowKeys,\r\n        });\r\n    };\r\n\r\n    handleInsertRecord = (params) => {\r\n        console.log(params);\r\n    };\r\n    //更新记录\r\n    handleUpdateRecord = ({ form }) => {\r\n        console.log(form.getFieldsValue());\r\n        // return\r\n    };\r\n    //删除记录\r\n    handleDeleteRecord = (record) => {\r\n        console.log(\"删除记录 \", record);\r\n    };\r\n    //填入更新数据\r\n    setUpdateModal = ({ form, record }) => {};\r\n    getData = (params = {}, pagination = { current: 1, pageSize: 12 }) => {\r\n        // params.token = \"\";\r\n        // params.pageId = 1;\r\n        // params.pageNum = 20;\r\n        if (!params.businessType) {\r\n            params.businessType = 1;\r\n        }\r\n        params = {\r\n            ...params,\r\n            pageId: pagination.current,\r\n            pageNum: pagination.pageSize,\r\n        };\r\n        http.post({\r\n            url: \"/new-algo-order/list\",\r\n            data: params,\r\n        }).then((res) => {\r\n            console.log(res);\r\n            //解析数据字典\r\n            if (res.data.records && res.data.records.length > 0) {\r\n                parseArrDict(res.data.records, \"basketStatus\", \"bStatus\");\r\n                parseDict(res.data.records);\r\n                // showTip(this);\r\n            } else {\r\n                message.info(\"查询结果为空\");\r\n            }\r\n            let pgn = {\r\n                current: res.data.current,\r\n                pageSize: pagination.pageSize,\r\n                total: res.data.total || 0,\r\n            };\r\n            this.setState({\r\n                info: res.data.records,\r\n                pagination: pgn,\r\n            });\r\n        });\r\n    };\r\n    handleSearch = (params, pagination) => {\r\n        // console.log(\"获取搜索栏数据 \", params);\r\n        this.getData(params, pagination);\r\n    };\r\n    componentDidMount() {\r\n        this.getData();\r\n    }\r\n    render() {\r\n        let scroll = { x: 6000, y: 445 };\r\n        let info = this.state.info;\r\n        return (\r\n            <div>\r\n                <CurdComponent\r\n                    // rowKey={\"index\"}\r\n                    // isShowSearchForm={false}\r\n                    // btnText2=\"查全部\"\r\n                    onSearchClick={this.handleSearch}\r\n                    getSearchFormFields={getSearchFormFields}\r\n                    // searchLoading={this.state.searchLoading}\r\n                    // insertBtnText={\"新增UOE配置\"} // 不传 就没新增按钮\r\n                    // getInsertFormFields={getInsertFormFields}\r\n                    // insertRecord={this.handleInsertRecord}\r\n                    // col=\"2\"\r\n\r\n                    width=\"600px\"\r\n                    pagination={this.state.pagination}\r\n                    // getUpdateFormFields={getUpdateFormFields}\r\n                    // setUpdateModal={this.setUpdateModal}\r\n                    // updateRecord={this.handleUpdateRecord} // 不传 就没编辑\r\n                    // deleteRecord={this.handleDeleteRecord} // 不传 就没删除\r\n                    // dtCol={2}\r\n                    dtWidth=\"800px\"\r\n                    dtColumns={columns()} //详情列表\r\n                    // dtCol={2} //详情列数\r\n                    centered={true}\r\n                    columns={columns}\r\n                    dataSource={info}\r\n                    scroll={scroll}\r\n                    // rowSelection={rowSelection} //批量选择 操作\r\n                >\r\n                    <div\r\n                        urlPrefix=\"/new-algo-order\"\r\n                        noUpload={true}\r\n                        title=\"母单信息\"\r\n                        sucCallback={this.getData}\r\n                    ></div>\r\n                </CurdComponent>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}