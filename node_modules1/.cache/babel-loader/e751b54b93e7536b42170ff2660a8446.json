{"ast":null,"code":"import _defineProperty from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport \"antd/lib/input/style\";\nimport _Input from \"antd/lib/input\";\nvar _jsxFileName = \"D:\\\\company\\\\algo-manage\\\\src\\\\algo\\\\modules\\\\manage\\\\pages\\\\security\\\\index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport CurdComponent from \"@/components/CurdComponent\"; // import SelectOption from \"@/components/SelectOption\";\n\nvar columns = function columns(params) {\n  return [{\n    title: \"证券代码\",\n    dataIndex: \"securityId\",\n    key: \"securityId\"\n  }, {\n    title: \"证券代码源\",\n    dataIndex: \"securityIdSource\",\n    key: \"securityIdSource\"\n  }, {\n    title: \"证券名称\",\n    dataIndex: \"securityName\",\n    key: \"securityName\"\n  }, {\n    title: \"昨收价\",\n    dataIndex: \"prevClosePx\",\n    key: \"prevClosePx\"\n  }, {\n    title: \"证券状态\",\n    dataIndex: \"securityStatus\",\n    key: \"securityStatus\"\n  }, {\n    title: \"股票板块属性\",\n    dataIndex: \"property\",\n    key: \"property\"\n  }, {\n    title: \"限价买数量上限\",\n    dataIndex: \"buyQtyUpperLimit\",\n    key: \"buyQtyUpperLimit\"\n  }, {\n    title: \"限价卖数量上限\",\n    dataIndex: \"sellQtyUpperLimit\",\n    key: \"sellQtyUpperLimit\"\n  }, {\n    title: \"市价买数量上限\",\n    dataIndex: \"marketBuyQtyUpperLimit\",\n    key: \"marketBuyQtyUpperLimit\"\n  }, {\n    title: \"市价卖数量上限\",\n    dataIndex: \"marketSellQtyUpperLimit\",\n    key: \"marketSellQtyUpperLimit\"\n  }, {\n    title: \"是否有涨跌限制\",\n    dataIndex: \"hasPriceLimit\",\n    key: \"hasPriceLimit\"\n  }, {\n    title: \"涨跌限制类型\",\n    dataIndex: \"limitType\",\n    key: \"limitType\"\n  }, {\n    title: \"上涨限价\",\n    dataIndex: \"upperLimitPrice\",\n    key: \"upperLimitPrice\"\n  }, {\n    title: \"下跌限价\",\n    dataIndex: \"lowerLimitPrice\",\n    key: \"lowerLimitPrice\"\n  }, {\n    title: \"更新时间\",\n    dataIndex: \"updateTime\",\n    key: \"updateTime\"\n  }];\n};\n\nvar getSearchFormFields = function getSearchFormFields() {\n  return [{\n    label: \"证券代码\",\n    id: \"securityId\",\n    component: React.createElement(_Input, {\n      placeholder: \"\\u8BF7\\u8F93\\u5165\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    })\n  }];\n};\n\nvar uoeSetting =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(uoeSetting, _React$PureComponent);\n\n  function uoeSetting() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, uoeSetting);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(uoeSetting)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      searchLoading: false,\n      selectRow: [],\n      info: [],\n      pagination: {\n        total: 0\n      }\n    };\n\n    _this.handleTableChange = function (selectedRowKeys) {\n      console.log(\"批量选择\");\n\n      _this.setState({\n        selectRow: selectedRowKeys\n      });\n    };\n\n    _this.handleInsertRecord = function (params) {\n      console.log(params);\n    };\n\n    _this.handleInsertRecord = function (fromData) {\n      console.log(\"新增接口\", fromData);\n      var params = {\n        UuserId: fromData.uuserId / 1,\n        AccountId: fromData.accountId,\n        Market: fromData.market / 1,\n        AccountType: fromData.accountType / 1\n      };\n      http.post({\n        url: \"/stockHolder/addStockHolderInfo\",\n        data: params\n      }).then(function (res) {\n        if (res.code == 0) {\n          message.success(res.msg);\n          _this.isAction = true;\n\n          _this.getData();\n        } else {\n          message.error(\"新增股东信息失败\");\n          _this.isAction = true;\n        }\n      });\n    };\n\n    _this.handleUpdateRecord = function (_ref) {\n      var form = _ref.form;\n      console.log(form.getFieldsValue()); // return;\n\n      var fromData = form.getFieldsValue();\n      var params = {\n        UuserId: fromData.uuserId / 1,\n        AccountId: fromData.accountId,\n        Market: fromData.market / 1,\n        AccountType: fromData.accountType / 1\n      }; // 发送更新请求\n\n      http.post({\n        url: \"/stockHolder/updateStockHolderInfo\",\n        data: params\n      }).then(function (res) {\n        if (res.code == 0) {\n          message.success(res.msg);\n          _this.isAction = true;\n\n          _this.getData();\n        } else {\n          message.error(\"修改股东信息失败\");\n          _this.isAction = true;\n        }\n      });\n    };\n\n    _this.handleDeleteRecord = function (record) {\n      console.log(\"删除记录 \", record);\n    };\n\n    _this.setUpdateModal = function (_ref2) {\n      var form = _ref2.form,\n          record = _ref2.record;\n      // console.log(record, form);\n      _this.record = record;\n      form.setFieldsValue({\n        switchId: record.switchId,\n        ip: record.ip,\n        mask: record.mask,\n        mac: record.mac,\n        gateway: record.gateway,\n        enable: record.enable + \"\"\n      });\n    };\n\n    _this.getData = function () {\n      var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var pagination = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n        current: 1,\n        pageSize: 11\n      };\n      params = _objectSpread({}, params, {\n        pageId: pagination.current,\n        pageNum: pagination.pageSize\n      }); // params.token = \"\";\n\n      http.post({\n        url: \"/security/list\",\n        data: params\n      }).then(function (res) {\n        console.log(res); //解析数据字典\n\n        if (res.data.records && res.data.records.length > 0) {\n          parseDict(res.data.records); // showTip(this);\n        } else {\n          message.info(\"查询结果为空\");\n        }\n\n        var pgn = {\n          current: pagination.current,\n          pageSize: pagination.pageSize,\n          total: res.data.total || 0\n        };\n\n        _this.setState({\n          info: res.data.records,\n          pagination: pgn\n        });\n      });\n    };\n\n    _this.handleSearch = function (params, pagination) {\n      _this.getData(params, pagination);\n    };\n\n    return _this;\n  }\n\n  _createClass(uoeSetting, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getData();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var scroll = {\n        x: 3000,\n        y: 445\n      };\n      var info = this.state.info; //批量\n      // let { selectRow } = this.state;\n      // const rowSelection = {\n      //     selectRow,\n      //     onChange: this.handleTableChange,\n      // };\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }, React.createElement(CurdComponent // rowKey={\"index\"}\n      // btnText2=\"查全部\"\n      // isShowSearchForm={false}\n      , {\n        onSearchClick: this.handleSearch,\n        getSearchFormFields: getSearchFormFields // searchLoading={this.state.searchLoading}\n        ,\n        insertBtnText: \"新增\" // 不传 就没新增按钮\n        ,\n        getInsertFormFields: getInsertFormFields,\n        insertRecord: this.handleInsertRecord // col=\"2\"\n        ,\n        width: \"600px\",\n        pagination: this.state.pagination,\n        getUpdateFormFields: getUpdateFormFields,\n        setUpdateModal: this.setUpdateModal,\n        updateRecord: this.handleUpdateRecord // 不传 就没编辑\n        // deleteRecord={this.handleDeleteRecord} // 不传 就没删除\n        ,\n        centered: true,\n        columns: columns,\n        dataSource: info,\n        scroll: scroll // rowSelection={rowSelection} //批量选择 操作\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        urlPrefix: \"/security\",\n        title: \"\\u8BC1\\u5238\\u4FE1\\u606F\",\n        sucCallback: this.getData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return uoeSetting;\n}(React.PureComponent);\n\nexport { uoeSetting as default };","map":{"version":3,"sources":["D:/company/algo-manage/src/algo/modules/manage/pages/security/index.js"],"names":["React","CurdComponent","columns","params","title","dataIndex","key","getSearchFormFields","label","id","component","uoeSetting","state","searchLoading","selectRow","info","pagination","total","handleTableChange","selectedRowKeys","console","log","setState","handleInsertRecord","fromData","UuserId","uuserId","AccountId","accountId","Market","market","AccountType","accountType","http","post","url","data","then","res","code","message","success","msg","isAction","getData","error","handleUpdateRecord","form","getFieldsValue","handleDeleteRecord","record","setUpdateModal","setFieldsValue","switchId","ip","mask","mac","gateway","enable","current","pageSize","pageId","pageNum","records","length","parseDict","pgn","handleSearch","scroll","x","y","getInsertFormFields","getUpdateFormFields","PureComponent"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport CurdComponent from \"@/components/CurdComponent\";\r\n// import SelectOption from \"@/components/SelectOption\";\r\nimport { Input } from \"antd\";\r\n\r\nconst columns = (params) => {\r\n    return [\r\n        {\r\n            title: \"证券代码\",\r\n            dataIndex: \"securityId\",\r\n            key: \"securityId\",\r\n        },\r\n        {\r\n            title: \"证券代码源\",\r\n            dataIndex: \"securityIdSource\",\r\n            key: \"securityIdSource\",\r\n        },\r\n        {\r\n            title: \"证券名称\",\r\n            dataIndex: \"securityName\",\r\n            key: \"securityName\",\r\n        },\r\n        {\r\n            title: \"昨收价\",\r\n            dataIndex: \"prevClosePx\",\r\n            key: \"prevClosePx\",\r\n        },\r\n        {\r\n            title: \"证券状态\",\r\n            dataIndex: \"securityStatus\",\r\n            key: \"securityStatus\",\r\n        },\r\n        {\r\n            title: \"股票板块属性\",\r\n            dataIndex: \"property\",\r\n            key: \"property\",\r\n        },\r\n        {\r\n            title: \"限价买数量上限\",\r\n            dataIndex: \"buyQtyUpperLimit\",\r\n            key: \"buyQtyUpperLimit\",\r\n        },\r\n        {\r\n            title: \"限价卖数量上限\",\r\n            dataIndex: \"sellQtyUpperLimit\",\r\n            key: \"sellQtyUpperLimit\",\r\n        },\r\n        {\r\n            title: \"市价买数量上限\",\r\n            dataIndex: \"marketBuyQtyUpperLimit\",\r\n            key: \"marketBuyQtyUpperLimit\",\r\n        },\r\n        {\r\n            title: \"市价卖数量上限\",\r\n            dataIndex: \"marketSellQtyUpperLimit\",\r\n            key: \"marketSellQtyUpperLimit\",\r\n        },\r\n        {\r\n            title: \"是否有涨跌限制\",\r\n            dataIndex: \"hasPriceLimit\",\r\n            key: \"hasPriceLimit\",\r\n        },\r\n        {\r\n            title: \"涨跌限制类型\",\r\n            dataIndex: \"limitType\",\r\n            key: \"limitType\",\r\n        },\r\n        {\r\n            title: \"上涨限价\",\r\n            dataIndex: \"upperLimitPrice\",\r\n            key: \"upperLimitPrice\",\r\n        },\r\n        {\r\n            title: \"下跌限价\",\r\n            dataIndex: \"lowerLimitPrice\",\r\n            key: \"lowerLimitPrice\",\r\n        },\r\n        {\r\n            title: \"更新时间\",\r\n            dataIndex: \"updateTime\",\r\n            key: \"updateTime\",\r\n        },\r\n    ];\r\n};\r\nlet getSearchFormFields = () => {\r\n    return [\r\n        {\r\n            label: \"证券代码\",\r\n            id: \"securityId\",\r\n            component: <Input placeholder=\"请输入\" />,\r\n        },\r\n    ];\r\n};\r\nexport default class uoeSetting extends React.PureComponent {\r\n    state = {\r\n        searchLoading: false,\r\n        selectRow: [],\r\n        info: [],\r\n        pagination: { total: 0 },\r\n    };\r\n    //批量选择\r\n    handleTableChange = (selectedRowKeys) => {\r\n        console.log(\"批量选择\");\r\n        this.setState({\r\n            selectRow: selectedRowKeys,\r\n        });\r\n    };\r\n\r\n    handleInsertRecord = (params) => {\r\n        console.log(params);\r\n    };\r\n    handleInsertRecord = (fromData) => {\r\n        console.log(\"新增接口\", fromData);\r\n        let params = {\r\n            UuserId: fromData.uuserId / 1,\r\n            AccountId: fromData.accountId,\r\n            Market: fromData.market / 1,\r\n            AccountType: fromData.accountType / 1,\r\n        };\r\n        http.post({\r\n            url: \"/stockHolder/addStockHolderInfo\",\r\n            data: params,\r\n        }).then((res) => {\r\n            if (res.code == 0) {\r\n                message.success(res.msg);\r\n                this.isAction = true;\r\n                this.getData();\r\n            } else {\r\n                message.error(\"新增股东信息失败\");\r\n                this.isAction = true;\r\n            }\r\n        });\r\n    };\r\n    //更新记录\r\n    handleUpdateRecord = ({ form }) => {\r\n        console.log(form.getFieldsValue());\r\n        // return;\r\n        let fromData = form.getFieldsValue();\r\n        let params = {\r\n            UuserId: fromData.uuserId / 1,\r\n            AccountId: fromData.accountId,\r\n            Market: fromData.market / 1,\r\n            AccountType: fromData.accountType / 1,\r\n        };\r\n        // 发送更新请求\r\n        http.post({\r\n            url: \"/stockHolder/updateStockHolderInfo\",\r\n            data: params,\r\n        }).then((res) => {\r\n            if (res.code == 0) {\r\n                message.success(res.msg);\r\n                this.isAction = true;\r\n                this.getData();\r\n            } else {\r\n                message.error(\"修改股东信息失败\");\r\n                this.isAction = true;\r\n            }\r\n        });\r\n    };\r\n    //删除记录\r\n    handleDeleteRecord = (record) => {\r\n        console.log(\"删除记录 \", record);\r\n    };\r\n    //填入更新数据\r\n    setUpdateModal = ({ form, record }) => {\r\n        // console.log(record, form);\r\n        this.record = record;\r\n        form.setFieldsValue({\r\n            switchId: record.switchId,\r\n            ip: record.ip,\r\n            mask: record.mask,\r\n            mac: record.mac,\r\n            gateway: record.gateway,\r\n            enable: record.enable + \"\",\r\n        });\r\n    };\r\n    getData = (params = {}, pagination = { current: 1, pageSize: 11 }) => {\r\n        params = {\r\n            ...params,\r\n            pageId: pagination.current,\r\n            pageNum: pagination.pageSize,\r\n        };\r\n        // params.token = \"\";\r\n        http.post({\r\n            url: \"/security/list\",\r\n            data: params,\r\n        }).then((res) => {\r\n            console.log(res);\r\n            //解析数据字典\r\n            if (res.data.records && res.data.records.length > 0) {\r\n                parseDict(res.data.records);\r\n                // showTip(this);\r\n            } else {\r\n                message.info(\"查询结果为空\");\r\n            }\r\n            let pgn = {\r\n                current: pagination.current,\r\n                pageSize: pagination.pageSize,\r\n                total: res.data.total || 0,\r\n            };\r\n            this.setState({\r\n                info: res.data.records,\r\n                pagination: pgn,\r\n            });\r\n        });\r\n    };\r\n    handleSearch = (params, pagination) => {\r\n        this.getData(params, pagination);\r\n    };\r\n    componentDidMount() {\r\n        this.getData();\r\n    }\r\n    render() {\r\n        let scroll = { x: 3000, y: 445 };\r\n        let info = this.state.info;\r\n        //批量\r\n        // let { selectRow } = this.state;\r\n        // const rowSelection = {\r\n        //     selectRow,\r\n        //     onChange: this.handleTableChange,\r\n        // };\r\n        return (\r\n            <div>\r\n                <CurdComponent\r\n                    // rowKey={\"index\"}\r\n                    // btnText2=\"查全部\"\r\n                    // isShowSearchForm={false}\r\n                    onSearchClick={this.handleSearch}\r\n                    getSearchFormFields={getSearchFormFields}\r\n                    // searchLoading={this.state.searchLoading}\r\n                    insertBtnText={\"新增\"} // 不传 就没新增按钮\r\n                    getInsertFormFields={getInsertFormFields}\r\n                    insertRecord={this.handleInsertRecord}\r\n                    // col=\"2\"\r\n                    width=\"600px\"\r\n                    pagination={this.state.pagination}\r\n                    getUpdateFormFields={getUpdateFormFields}\r\n                    setUpdateModal={this.setUpdateModal}\r\n                    updateRecord={this.handleUpdateRecord} // 不传 就没编辑\r\n                    // deleteRecord={this.handleDeleteRecord} // 不传 就没删除\r\n                    centered={true}\r\n                    columns={columns}\r\n                    dataSource={info}\r\n                    scroll={scroll}\r\n                    // rowSelection={rowSelection} //批量选择 操作\r\n                >\r\n                    <div\r\n                        urlPrefix=\"/security\"\r\n                        title=\"证券信息\"\r\n                        sucCallback={this.getData}\r\n                    ></div>\r\n                </CurdComponent>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}