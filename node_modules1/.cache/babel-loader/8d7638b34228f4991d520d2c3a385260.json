{"ast":null,"code":"import \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/input/style\";\nimport _Input from \"antd/lib/input\";\nimport \"antd/lib/icon/style\";\nimport _Icon from \"antd/lib/icon\";\nimport \"antd/lib/message/style\";\nimport _message from \"antd/lib/message\";\nimport _classCallCheck from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport \"antd/lib/form/style\";\nimport _Form from \"antd/lib/form\";\nvar _jsxFileName = \"D:\\\\company\\\\algo-manage\\\\src\\\\algo\\\\modules\\\\main\\\\pages\\\\Login\\\\index.js\";\nimport React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport backImg from \"@/img/login.jpg\";\nimport md5 from \"js-md5\"; //全局引入\n\nvar FormItem = _Form.Item;\n\nvar FormLogin =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(FormLogin, _React$Component);\n\n  function FormLogin() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, FormLogin);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(FormLogin)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      refreshLoading: false\n    };\n\n    _this.handleSubmit = function () {\n      _this.props.form.validateFields(function (err) {\n        if (!err) {\n          var params = _this.props.form.getFieldsValue();\n\n          params.password = md5(params.password); // params.oper = \"Q\";\n\n          console.log(params);\n          http.post({\n            url: \"/tell-info/login\",\n            data: params\n          }).then(function (res) {\n            console.log(res);\n\n            if (res.code == 0) {\n              sessionStorage.isLogin = true;\n              sessionStorage.userName = params.userName; // 0  有   导入导出权限\n              // 1  没有 导入导出权限\n\n              sessionStorage.userPrivilege = res.data.userPrivilege; // sessionStorage.userPrivilege = 1;\n              // sessionStorage.userArr = JSON.stringify(res.data);\n              // this.props.history.push(\"/main/updown/userInfo\");\n\n              _this.props.history.push(\"/main/user/userInfo\");\n            } else {\n              _message.error(res.message || \"用户名或密码错误\");\n            }\n          });\n        }\n      });\n    };\n\n    _this.handleSet = function () {\n      console.log(\"设置\");\n    };\n\n    return _this;\n  }\n\n  _createClass(FormLogin, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      var getFieldDecorator = this.props.form.getFieldDecorator;\n\n      _message.config({\n        duration: 2.0,\n        top: 360,\n        maxCount: 1\n      });\n\n      return React.createElement(\"div\", {\n        style: {\n          display: \"flex\",\n          alignItems: \"center\",\n          height: \"100%\",\n          width: \"100%\",\n          // background: \"#f0f2f5\"\n          background: \"url(\".concat(backImg, \") no-repeat center\"),\n          backgroundSize: \"cover\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(_Form, {\n        style: {\n          width: 320,\n          margin: \"0 auto\",\n          padding: \"25px\",\n          background: \"white\",\n          opacity: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          marginBottom: \"20px\",\n          paddingLeft: \"33px\",\n          fontSize: \"18px\",\n          fontWeight: \"bold\",\n          background: \"left no-repeat url(./assets/logo.png)\",\n          backgroundSize: \"18px\" // backgroundColor: \"rgba(48,128,232,0.3)\"\n\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \"\\u661F\\u4E91\\u7B97\\u6CD5\\u7BA1\\u7406\\u7CFB\\u7EDF\"), React.createElement(FormItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, getFieldDecorator(\"userName\", {\n        initialValue: \"admin\",\n        // initialValue: \"user_read_only\",\n        rules: [{\n          required: true,\n          message: \"用户名不能为空\"\n        }, {\n          max: 15,\n          message: \"长度不在范围内\"\n        }, {\n          pattern: new RegExp(\"^\\\\w+$\", \"g\"),\n          message: \"用户名必须为字母或者数字\"\n        }]\n      })(React.createElement(_Input, {\n        prefix: React.createElement(_Icon, {\n          type: \"user\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110\n          },\n          __self: this\n        }),\n        placeholder: \"\\u8BF7\\u8F93\\u5165\\u7528\\u6237\\u540D\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }))), React.createElement(FormItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, getFieldDecorator(\"password\", {\n        initialValue: \"123456\",\n        rules: []\n      })(React.createElement(_Input, {\n        prefix: React.createElement(_Icon, {\n          type: \"lock\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121\n          },\n          __self: this\n        }),\n        type: \"password\",\n        placeholder: \"\\u8BF7\\u8F93\\u5165\\u5BC6\\u7801\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }))), React.createElement(FormItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(_Button, {\n        style: {\n          width: \"100%\"\n        },\n        type: \"primary\",\n        onClick: this.handleSubmit,\n        loading: this.state.refreshLoading,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, \"\\u767B\\u5F55\"))));\n    }\n  }]);\n\n  return FormLogin;\n}(React.Component);\n\nexport default withRouter(_Form.create()(FormLogin));","map":{"version":3,"sources":["D:/company/algo-manage/src/algo/modules/main/pages/Login/index.js"],"names":["React","withRouter","backImg","md5","FormItem","Item","FormLogin","state","refreshLoading","handleSubmit","props","form","validateFields","err","params","getFieldsValue","password","console","log","http","post","url","data","then","res","code","sessionStorage","isLogin","userName","userPrivilege","history","push","error","message","handleSet","getFieldDecorator","config","duration","top","maxCount","display","alignItems","height","width","background","backgroundSize","margin","padding","opacity","marginBottom","paddingLeft","fontSize","fontWeight","initialValue","rules","required","max","pattern","RegExp","Component","create"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Form, Input, Button, message, Icon, Checkbox } from \"antd\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport backImg from \"@/img/login.jpg\";\r\nimport md5 from \"js-md5\"; //全局引入\r\n\r\nconst FormItem = Form.Item;\r\nclass FormLogin extends React.Component {\r\n    state = {\r\n        refreshLoading: false,\r\n    };\r\n\r\n    handleSubmit = () => {\r\n        this.props.form.validateFields((err) => {\r\n            if (!err) {\r\n                let params = this.props.form.getFieldsValue();\r\n                params.password = md5(params.password);\r\n                // params.oper = \"Q\";\r\n                console.log(params);\r\n                http.post({\r\n                    url: \"/tell-info/login\",\r\n                    data: params,\r\n                }).then((res) => {\r\n                    console.log(res);\r\n                    if (res.code == 0) {\r\n                        sessionStorage.isLogin = true;\r\n                        sessionStorage.userName = params.userName;\r\n                        // 0  有   导入导出权限\r\n                        // 1  没有 导入导出权限\r\n                        sessionStorage.userPrivilege = res.data.userPrivilege;\r\n                        // sessionStorage.userPrivilege = 1;\r\n                        // sessionStorage.userArr = JSON.stringify(res.data);\r\n                        // this.props.history.push(\"/main/updown/userInfo\");\r\n                        this.props.history.push(\"/main/user/userInfo\");\r\n                    } else {\r\n                        message.error(res.message || \"用户名或密码错误\");\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    };\r\n\r\n    handleSet = () => {\r\n        console.log(\"设置\");\r\n    };\r\n\r\n    componentDidMount() {}\r\n    render() {\r\n        const { getFieldDecorator } = this.props.form;\r\n        message.config({\r\n            duration: 2.0,\r\n            top: 360,\r\n            maxCount: 1,\r\n        });\r\n        return (\r\n            <div\r\n                style={{\r\n                    display: \"flex\",\r\n                    alignItems: \"center\",\r\n                    height: \"100%\",\r\n                    width: \"100%\",\r\n                    // background: \"#f0f2f5\"\r\n                    background: `url(${backImg}) no-repeat center`,\r\n                    backgroundSize: \"cover\",\r\n                }}\r\n            >\r\n                <Form\r\n                    style={{\r\n                        width: 320,\r\n                        margin: \"0 auto\",\r\n                        padding: \"25px\",\r\n                        background: \"white\",\r\n                        opacity: 1,\r\n                    }}\r\n                >\r\n                    <div\r\n                        style={{\r\n                            marginBottom: \"20px\",\r\n                            paddingLeft: \"33px\",\r\n                            fontSize: \"18px\",\r\n                            fontWeight: \"bold\",\r\n                            background: \"left no-repeat url(./assets/logo.png)\",\r\n                            backgroundSize: \"18px\",\r\n                            // backgroundColor: \"rgba(48,128,232,0.3)\"\r\n                        }}\r\n                    >\r\n                        {/* 算法项目管理系统 */}\r\n                        星云算法管理系统\r\n                    </div>\r\n                    <FormItem>\r\n                        {getFieldDecorator(\"userName\", {\r\n                            initialValue: \"admin\",\r\n                            // initialValue: \"user_read_only\",\r\n                            rules: [\r\n                                {\r\n                                    required: true,\r\n                                    message: \"用户名不能为空\",\r\n                                },\r\n                                {\r\n                                    max: 15,\r\n                                    message: \"长度不在范围内\",\r\n                                },\r\n                                {\r\n                                    pattern: new RegExp(\"^\\\\w+$\", \"g\"),\r\n                                    message: \"用户名必须为字母或者数字\",\r\n                                },\r\n                            ],\r\n                        })(\r\n                            <Input\r\n                                prefix={<Icon type=\"user\" />}\r\n                                placeholder=\"请输入用户名\"\r\n                            />\r\n                        )}\r\n                    </FormItem>\r\n                    <FormItem>\r\n                        {getFieldDecorator(\"password\", {\r\n                            initialValue: \"123456\",\r\n                            rules: [],\r\n                        })(\r\n                            <Input\r\n                                prefix={<Icon type=\"lock\" />}\r\n                                type=\"password\"\r\n                                placeholder=\"请输入密码\"\r\n                            />\r\n                        )}\r\n                    </FormItem>\r\n                    <FormItem>\r\n                        <Button\r\n                            style={{ width: \"100%\" }}\r\n                            type=\"primary\"\r\n                            onClick={this.handleSubmit}\r\n                            loading={this.state.refreshLoading}\r\n                        >\r\n                            登录\r\n                        </Button>\r\n                    </FormItem>\r\n                </Form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default withRouter(Form.create()(FormLogin));\r\n"]},"metadata":{},"sourceType":"module"}