{"ast":null,"code":"import \"antd/lib/modal/style\";\nimport _Modal from \"antd/lib/modal\";\nimport \"antd/lib/form/style\";\nimport _Form from \"antd/lib/form\";\nimport _defineProperty from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport \"antd/lib/message/style\";\nimport _message from \"antd/lib/message\";\nimport \"antd/lib/tooltip/style\";\nimport _Tooltip from \"antd/lib/tooltip\";\nimport \"antd/lib/icon/style\";\nimport _Icon from \"antd/lib/icon\";\nimport \"antd/lib/select/style\";\nimport _Select from \"antd/lib/select\";\nimport \"antd/lib/input/style\";\nimport _Input from \"antd/lib/input\";\nimport _classCallCheck from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\company\\\\algo-manage\\\\src\\\\algo\\\\modules\\\\auth\\\\pages\\\\roleManagement\\\\index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport CurdComponent from \"@/components/CurdComponent\";\nimport SelectOption from \"@/components/SelectOption\";\nimport Table from \"@/components/Table\";\nimport styles from \"./style.module.less\";\nimport md5 from \"js-md5\"; //全局引入\n\nvar userInfo =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(userInfo, _React$PureComponent);\n\n  function userInfo() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, userInfo);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(userInfo)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      searchLoading: false,\n      selectRow: [],\n      info: [],\n      updateModalVisible: false,\n      updateModalVisible2: false,\n      riskGroup: [],\n      userRiskConfig: {},\n      pagination: {\n        total: 0\n      },\n      riskList: [],\n      //算法列表\n      parentInfoList: [],\n      //操作人用户列表\n      algoList: [],\n      algoSecList: []\n    };\n\n    _this.getInsertFormFields = function () {\n      return [{\n        label: \"用户编码\",\n        id: \"UserId\",\n        initialValue: \"\",\n        rules: [{\n          required: true,\n          message: \"参数不能为空\"\n        }, {\n          validator: checkLength(12),\n          trigger: [\"change\", \"blur\"]\n        }],\n        component: React.createElement(_Input, {\n          placeholder: \"\\u8BF7\\u8F93\\u5165\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        })\n      }, {\n        label: \"用户密码\",\n        id: \"UserPasswd\",\n        initialValue: \"\",\n        rules: [{\n          required: true,\n          message: \"参数不能为空\"\n        }, {\n          validator: checkLength(32),\n          trigger: [\"change\", \"blur\"]\n        }],\n        component: React.createElement(_Input, {\n          placeholder: \"\\u8BF7\\u8F93\\u5165\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        })\n      }, {\n        label: \"用户名称\",\n        id: \"UserName\",\n        initialValue: \"\",\n        rules: [{\n          required: true,\n          message: \"参数不能为空\"\n        }, {\n          validator: checkLength(32),\n          trigger: [\"change\", \"blur\"]\n        }],\n        component: React.createElement(_Input, {\n          placeholder: \"\\u8BF7\\u8F93\\u5165\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83\n          },\n          __self: this\n        })\n      }, {\n        label: \"用户类型\",\n        id: \"UserType\",\n        initialValue: \"1\",\n        rules: [{\n          required: true,\n          message: \"参数不能为空\"\n        }],\n        component: SelectOption(dict.userType, {\n          placeholder: \"请选择\",\n          // allowClear: true,\n          style: {\n            width: 400\n          }\n        })\n      }, {\n        label: \"管理员用户\",\n        id: \"UuserId\",\n        initialValue: [],\n        rules: [{\n          required: true,\n          message: \"参数不能为空\"\n        } // {\n        //     validator: checkLength(10),\n        //     trigger: [\"change\", \"blur\"],\n        // },\n        ],\n        component: React.createElement(_Select, {\n          mode: \"multiple\",\n          style: {\n            width: \"100%\"\n          },\n          placeholder: \"\\u8BF7\\u9009\\u62E9\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118\n          },\n          __self: this\n        }, _this.state.parentInfoList.map(function (item, index) {\n          return React.createElement(_Select.Option, {\n            key: item.id,\n            value: item.id / 1,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 125\n            },\n            __self: this\n          }, item.userName);\n        }))\n      }, {\n        label: \"用户风控组\",\n        id: \"RiskName\",\n        initialValue: \"\",\n        rules: [{\n          required: true,\n          message: \"参数不能为空\"\n        }],\n        component: // <Input placeholder=\"请输入\" readOnly disabled />\n        SelectOption(_this.state.riskList, {\n          placeholder: \"请选择用户风控组\"\n        })\n      }, {\n        label: \"算法权限组\",\n        id: \"GroupName\",\n        initialValue: \"\",\n        rules: [{\n          required: true,\n          message: \"参数不能为空\"\n        }],\n        component: // <Input placeholder=\"请输入\" readOnly disabled />\n        SelectOption(_this.state.algoSecList, {\n          placeholder: \"请选择算法权限组\"\n        })\n      }, {\n        label: \"用户状态\",\n        id: \"UserStatus\",\n        initialValue: \"1\",\n        rules: [{\n          required: true,\n          message: \"参数不能为空\"\n        }],\n        component: SelectOption(dict.userStatus, {\n          placeholder: \"请选择\",\n          // allowClear: true,\n          style: {\n            width: 400\n          }\n        })\n      }, {\n        label: \"证件号码\",\n        id: \"IdentityId\",\n        initialValue: \"\",\n        rules: [{\n          required: true,\n          message: \"参数不能为空\"\n        }, {\n          validator: checkLength(18),\n          trigger: [\"change\", \"blur\"]\n        }],\n        component: React.createElement(_Input, {\n          placeholder: \"\\u8BF7\\u8F93\\u5165\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 200\n          },\n          __self: this\n        })\n      }, {\n        label: \"机构编码\",\n        id: \"OrganizaId\",\n        initialValue: \"\",\n        rules: [{\n          required: true,\n          message: \"参数不能为空\"\n        }, {\n          validator: checkLength(12),\n          trigger: [\"change\", \"blur\"]\n        }],\n        component: React.createElement(_Input, {\n          placeholder: \"\\u8BF7\\u8F93\\u5165\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 216\n          },\n          __self: this\n        })\n      }, {\n        label: \"机构名称\",\n        id: \"OrganizaName\",\n        initialValue: \"\",\n        rules: [{\n          required: true,\n          message: \"参数不能为空\"\n        }, {\n          validator: checkLength(28),\n          trigger: [\"change\", \"blur\"]\n        }],\n        component: React.createElement(_Input, {\n          placeholder: \"\\u8BF7\\u8F93\\u5165\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 232\n          },\n          __self: this\n        })\n      } // {\n      //     label: \"算法属性\",\n      //     id: \"AlgoProperty\",\n      //     initialValue: \"\",\n      //     rules: [\n      //         // {\n      //         //     required: true,\n      //         //     message: \"参数不能为空\",\n      //         // },\n      //     ],\n      //     component: <Input placeholder=\"请输入\" />,\n      // },\n      ];\n    };\n\n    _this.getUpdateFormFields = function () {\n      return [{\n        label: \"用户编码\",\n        id: \"UserId\",\n        initialValue: \"\",\n        rules: [{\n          required: true,\n          message: \"参数不能为空\"\n        }, {\n          validator: checkLength(12),\n          trigger: [\"change\", \"blur\"]\n        }],\n        component: React.createElement(_Input, {\n          placeholder: \"\\u8BF7\\u8F93\\u5165\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 264\n          },\n          __self: this\n        })\n      }, {\n        label: \"用户密码\",\n        id: \"UserPasswd\",\n        initialValue: \"\",\n        rules: [// {\n        //     required: true,\n        //     message: \"参数不能为空\",\n        // },\n        {\n          validator: checkLength(32),\n          trigger: [\"change\", \"blur\"]\n        }],\n        component: React.createElement(_Input, {\n          placeholder: \"\\u9700\\u4FEE\\u6539\\u5BC6\\u7801\\uFF0C\\u8BF7\\u8F93\\u5165\\u65B0\\u5BC6\\u7801\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 280\n          },\n          __self: this\n        })\n      }, {\n        label: \"用户名称\",\n        id: \"UserName\",\n        initialValue: \"\",\n        rules: [{\n          required: true,\n          message: \"参数不能为空\"\n        }, {\n          validator: checkLength(32),\n          trigger: [\"change\", \"blur\"]\n        }],\n        component: React.createElement(_Input, {\n          placeholder: \"\\u8BF7\\u8F93\\u5165\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 296\n          },\n          __self: this\n        })\n      }, {\n        label: \"用户类型\",\n        id: \"UserType\",\n        initialValue: \"1\",\n        rules: [{\n          required: true,\n          message: \"参数不能为空\"\n        }],\n        component: SelectOption(dict.userType, {\n          placeholder: \"请选择\",\n          // allowClear: true,\n          style: {\n            width: 400\n          }\n        })\n      }, {\n        label: \"管理员用户\",\n        id: \"UuserId\",\n        initialValue: [],\n        rules: [{\n          required: true,\n          message: \"参数不能为空\"\n        } // {\n        //     validator: checkLength(10),\n        //     trigger: [\"change\", \"blur\"],\n        // },\n        ],\n        component: React.createElement(_Select, {\n          mode: \"multiple\",\n          style: {\n            width: \"100%\"\n          },\n          placeholder: \"\\u8BF7\\u9009\\u62E9\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 331\n          },\n          __self: this\n        }, _this.state.parentInfoList.map(function (item, index) {\n          return React.createElement(_Select.Option, {\n            key: item.id,\n            value: item.id / 1,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 338\n            },\n            __self: this\n          }, item.userName);\n        }))\n      }, {\n        label: \"用户风控组\",\n        id: \"RiskGroup\",\n        initialValue: \"\",\n        rules: [{\n          required: true,\n          message: \"参数不能为空\"\n        }],\n        component: // <Input placeholder=\"请输入\" readOnly disabled />\n        SelectOption(_this.state.riskList, {\n          placeholder: \"请选择用户风控组\"\n        })\n      }, {\n        label: \"算法权限组\",\n        id: \"AlgoGroup\",\n        initialValue: \"\",\n        rules: [{\n          required: true,\n          message: \"参数不能为空\"\n        }],\n        component: SelectOption(_this.state.algoSecList, {\n          placeholder: \"请选择算法权限组\"\n        })\n      }, {\n        label: \"用户状态\",\n        id: \"UserStatus\",\n        initialValue: \"1\",\n        rules: [{\n          required: true,\n          message: \"参数不能为空\"\n        }],\n        component: SelectOption(dict.userStatus, {\n          placeholder: \"请选择\",\n          // allowClear: true,\n          style: {\n            width: 400\n          }\n        })\n      }, {\n        label: \"证件号码\",\n        id: \"IdentityId\",\n        initialValue: \"\",\n        rules: [{\n          required: true,\n          message: \"参数不能为空\"\n        }, {\n          validator: checkLength(18),\n          trigger: [\"change\", \"blur\"]\n        }],\n        component: React.createElement(_Input, {\n          placeholder: \"\\u8BF7\\u8F93\\u5165\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 411\n          },\n          __self: this\n        })\n      }, {\n        label: \"机构编码\",\n        id: \"OrganizaId\",\n        initialValue: \"\",\n        rules: [{\n          required: true,\n          message: \"参数不能为空\"\n        }, {\n          validator: checkLength(12),\n          trigger: [\"change\", \"blur\"]\n        }],\n        component: React.createElement(_Input, {\n          placeholder: \"\\u8BF7\\u8F93\\u5165\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 427\n          },\n          __self: this\n        })\n      }, {\n        label: \"机构名称\",\n        id: \"OrganizaName\",\n        initialValue: \"\",\n        rules: [{\n          required: true,\n          message: \"参数不能为空\"\n        }, {\n          validator: checkLength(28),\n          trigger: [\"change\", \"blur\"]\n        }],\n        component: React.createElement(_Input, {\n          placeholder: \"\\u8BF7\\u8F93\\u5165\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 443\n          },\n          __self: this\n        })\n      }];\n    };\n\n    _this.getSearchFormFields = function () {\n      return [{\n        label: \"用户名称\",\n        // label: (\n        //     <span>用&nbsp;&nbsp;&nbsp;户&nbsp;&nbsp;&nbsp;名称</span>\n        // ),\n        id: \"userName\",\n        component: React.createElement(_Input, {\n          placeholder: \"\\u8BF7\\u8F93\\u5165\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 455\n          },\n          __self: this\n        })\n      }, {\n        // label: \"用户ID\",\n        label: React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 459\n          },\n          __self: this\n        }, \"\\u7528\\xA0\\u6237\\xA0\\u7F16\\xA0\\u7801\"),\n        id: \"userId\",\n        component: React.createElement(_Input, {\n          placeholder: \"\\u8BF7\\u8F93\\u5165\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 461\n          },\n          __self: this\n        })\n      }, {\n        // label: \"用户类型\",\n        label: React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 465\n          },\n          __self: this\n        }, \"\\u7528\\xA0\\u6237\\xA0\\u7C7B\\xA0\\u578B\"),\n        id: \"userType\",\n        // initialValue: \"1\",\n        component: SelectOption(dict.userType, {\n          placeholder: \"请选择\",\n          allowClear: true,\n          style: {\n            width: 190\n          }\n        })\n      }, {\n        label: \"用户风控组\",\n        id: \"riskGroup\",\n        component: SelectOption(_this.state.riskList, {\n          allowClear: true,\n          style: {\n            width: 190\n          },\n          placeholder: \"请选择用户风控组\"\n        })\n      }, {\n        label: \"算法权限组\",\n        id: \"algoGroup\",\n        component: SelectOption(_this.state.algoSecList, {\n          allowClear: true,\n          placeholder: \"请选择算法权限组\"\n        })\n      } // {\n      //     label: \"管理员用户名\",\n      //     id: \"fatherId\",\n      //     component: <Input placeholder=\"请输入\" />,\n      // },\n      ];\n    };\n\n    _this.columns = function (params) {\n      return [{\n        title: \"用户ID\",\n        dataIndex: \"id\",\n        width: 100\n      }, {\n        title: \"用户编码\",\n        dataIndex: \"userId\",\n        width: 140\n      }, {\n        title: \"用户名称\",\n        dataIndex: \"userName\",\n        key: \"userName\",\n        width: 140\n      }, {\n        title: \"用户类型\",\n        dataIndex: \"userTypeValue\",\n        width: 200,\n        // key: \"userType\",\n        render: function render(text, record) {\n          // console.log(record);\n          if (record.userType == 1) {\n            return React.createElement(\"div\", {\n              className: styles.typeWrap,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 530\n              },\n              __self: this\n            }, React.createElement(\"span\", {\n              className: styles.userType1,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 531\n              },\n              __self: this\n            }, \"\\u4E2A\"), React.createElement(\"span\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 532\n              },\n              __self: this\n            }, record.userTypeValue));\n          } else if (record.userType == 2) {\n            return React.createElement(\"div\", {\n              className: styles.typeWrap,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 537\n              },\n              __self: this\n            }, React.createElement(\"span\", {\n              className: styles.userType2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 538\n              },\n              __self: this\n            }, \"\\u7B97\"), React.createElement(\"span\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 539\n              },\n              __self: this\n            }, record.userTypeValue));\n          } else if (record.userType == 3) {\n            return React.createElement(\"div\", {\n              className: styles.typeWrap,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 544\n              },\n              __self: this\n            }, React.createElement(\"span\", {\n              className: styles.userType3,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 545\n              },\n              __self: this\n            }, \"\\u591A\"), React.createElement(\"span\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 546\n              },\n              __self: this\n            }, record.userTypeValue));\n          } else if (record.userType == 4) {\n            return React.createElement(\"div\", {\n              className: styles.typeWrap,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 551\n              },\n              __self: this\n            }, React.createElement(\"span\", {\n              className: styles.userType4,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 552\n              },\n              __self: this\n            }, \"\\u884C\"), React.createElement(\"span\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 553\n              },\n              __self: this\n            }, record.userTypeValue));\n          }\n\n          return React.createElement(\"div\", {\n            className: styles.typeWrap,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 558\n            },\n            __self: this\n          }, record.userTypeValue);\n        }\n      }, {\n        title: \"用户风控组\",\n        dataIndex: \"riskGroup\",\n        width: 120,\n        render: function render(text, record) {\n          return React.createElement(\"div\", {\n            onClick: function onClick(e) {\n              _this.handleUpdate(record);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 569\n            },\n            __self: this\n          }, React.createElement(_Tooltip, {\n            title: \"\\u4FEE\\u6539\\u98CE\\u63A7\\u7EC4\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 574\n            },\n            __self: this\n          }, record.riskGroup, sessionStorage.userPrivilege != 2 && React.createElement(_Icon, {\n            type: \"edit\",\n            style: {\n              color: \"#1899ff\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 577\n            },\n            __self: this\n          })));\n        }\n      }, {\n        title: \"算法权限组\",\n        dataIndex: \"algoGroup\",\n        width: 120,\n        render: function render(text, record) {\n          return React.createElement(\"div\", {\n            onClick: function onClick(e) {\n              _this.handleUpdateAlgo(record);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 591\n            },\n            __self: this\n          }, React.createElement(_Tooltip, {\n            title: \"\\u4FEE\\u6539\\u7B97\\u6CD5\\u6743\\u9650\\u7EC4\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 596\n            },\n            __self: this\n          }, record.algoGroup, sessionStorage.userPrivilege != 2 && React.createElement(_Icon, {\n            type: \"edit\",\n            style: {\n              color: \"#1899ff\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 599\n            },\n            __self: this\n          })));\n        }\n      }, // {\n      //     title: \"业务类型\",\n      //     dataIndex: \"businessType\",\n      // },\n      // {\n      //     title: \"登录状态\",\n      //     dataIndex: \"loginStatus\",\n      // },\n      {\n        title: \"管理员用户名\",\n        dataIndex: \"parentName\",\n        width: 180\n      }, {\n        title: \"用户状态\",\n        dataIndex: \"userStatusValue\",\n        width: 140\n      }, {\n        title: \"证件号码\",\n        dataIndex: \"identityId\",\n        width: 200\n      }, {\n        title: \"机构编码\",\n        dataIndex: \"organizaId\",\n        width: 140\n      }, {\n        title: \"机构名称\",\n        dataIndex: \"organizaName\",\n        width: 150\n      }, {\n        title: \"注册时间\",\n        dataIndex: \"createTime\",\n        key: \"createTime\",\n        width: 180\n      } // {\n      //     title: \"操作\",\n      //     key: \"operation\",\n      //     fixed: \"right\",\n      //     width: 100,\n      //     render: (text, record) => (\n      //         <a\n      //             onClick={(e) => {\n      //                 this.handleUpdate(record);\n      //             }}\n      //         >\n      //             编辑\n      //         </a>\n      //     ),\n      // },\n      ];\n    };\n\n    _this.columns2 = function (params) {\n      return [{\n        title: \"算法ID\",\n        dataIndex: \"id\",\n        width: 100,\n        ellipsis: true\n      }, {\n        title: \"算法名称\",\n        dataIndex: \"algoName\",\n        width: 150,\n        ellipsis: true\n      }, {\n        title: \"算法厂商\",\n        dataIndex: \"providerName\",\n        width: 150,\n        ellipsis: true\n      }, {\n        title: \"算法类型\",\n        dataIndex: \"algorithmType\",\n        width: 150,\n        ellipsis: true\n      }, {\n        title: \"是否有权限\",\n        dataIndex: \"isShow\",\n        width: 150,\n        ellipsis: true,\n        render: function render(text, record) {\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 696\n            },\n            __self: this\n          }, text == \"是\" ? React.createElement(\"span\", {\n            style: {\n              color: \"red\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 698\n            },\n            __self: this\n          }, text) : React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 700\n            },\n            __self: this\n          }, text));\n        }\n      }];\n    };\n\n    _this.handleTableChange = function (selectedRowKeys) {\n      console.log(\"批量选择\");\n\n      _this.setState({\n        selectRow: selectedRowKeys\n      });\n    };\n\n    _this.handleInsertRecord = function (params) {\n      params.UserType = params.UserType / 1;\n      params.RiskGroup = params.RiskGroup / 1;\n      params.AlgoGroup = params.AlgoGroup / 1;\n      params.UserPasswd = md5(params.UserPasswd);\n      params.UserStatus = params.UserStatus / 1;\n      console.log(\"新增接口\", params);\n      http.post({\n        url: \"/user/addUserInfo\",\n        data: params\n      }).then(function (res) {\n        console.log(res);\n        var msg = res.message;\n\n        if (res.code == 0) {\n          _message.success(msg); // this.getData();\n\n        } else if (res.code == 20000) {\n          _message.error(msg.substring(msg.indexOf(\"[\") + 1, msg.lastIndexOf(\"]\")));\n        } else {\n          _message.error(msg);\n        }\n      });\n    };\n\n    _this.handleUpdateRecord = function (_ref) {\n      var form = _ref.form;\n      // console.log(form.getFieldsValue());\n      // return;\n      var params = form.getFieldsValue();\n      params.Id = _this.record.id / 1;\n      params.UserType = params.UserType / 1;\n      params.RiskGroup = params.RiskGroup / 1;\n      params.AlgoGroup = params.AlgoGroup / 1;\n      params.UuserId = params.UuserId;\n      params.UserStatus = params.UserStatus / 1; // console.log(this.record);\n\n      if (params.UserPasswd == \"\") {\n        params.UserPasswd = _this.record.userPasswd;\n      } else {\n        params.UserPasswd = md5(params.UserPasswd);\n      }\n\n      console.log(params); //发送更新请求\n\n      http.post({\n        url: \"/user/updateUserInfo\",\n        data: params\n      }).then(function (res) {\n        console.log(res);\n        var msg = res.message;\n\n        if (res.code == 0) {\n          _message.success(msg); // this.getData();\n\n        } else if (res.code == 20000) {\n          _message.error(msg.substring(msg.indexOf(\"[\") + 1, msg.lastIndexOf(\"]\")));\n        } else {\n          _message.error(msg);\n        } // this.isAction = true;\n\n      });\n    };\n\n    _this.setUpdateModal = function (_ref2) {\n      var form = _ref2.form,\n          record = _ref2.record;\n      // console.log(record, form);\n      _this.record = record;\n      console.log(_this.record, \"this.record\");\n      var parentId = [];\n\n      if (_this.record.parentInfos.length) {\n        _this.record.parentInfos.forEach(function (item) {\n          parentId.push(item.muserId);\n        });\n      }\n\n      console.log(parentId, \"parentIdparentId\");\n      form.setFieldsValue({\n        UserId: record.userId,\n        UserName: record.userName,\n        UserPasswd: \"\",\n        UserType: record.userType + \"\",\n        RiskGroup: record.riskGroup,\n        AlgoGroup: record.algoGroup,\n        UuserId: parentId,\n        // UuserId: record.parentInfos,\n        UserStatus: record.userStatus + \"\",\n        IdentityId: record.identityId,\n        OrganizaId: record.organizaId,\n        OrganizaName: record.organizaName // UserType: record.UserType,\n\n      });\n    };\n\n    _this.handleUpdate = function (record) {\n      console.log(\"更新记录\", record);\n      _this.record = record;\n\n      _this.setState({\n        updateModalVisible: true,\n        riskGroup: []\n      }, function () {\n        _this.getRiskGroup(record.riskGroup);\n\n        _this.props.form.setFieldsValue({\n          riskGroup: record.riskGroup + \"\",\n          userId: record.userId\n        });\n      });\n    };\n\n    _this.handleUpdateAlgo = function (record) {\n      console.log(\"修改算法权限组\", record);\n      _this.record2 = record;\n\n      _this.setState({\n        updateModalVisible2: true,\n        algoGroup: []\n      }, function () {\n        _this.getAlgoGroupById(record.algoGroup);\n\n        _this.props.form.setFieldsValue({\n          algoGroup: record.algoGroup + \"\",\n          userId: record.userId\n        });\n      });\n    };\n\n    _this.handleUpdateModalOk = function () {\n      var data = _this.props.form.getFieldsValue();\n\n      data.userId = _this.record.id;\n      console.log(data);\n\n      _this.updateUserRiskGroup(data);\n\n      _this.setState({\n        updateModalVisible: false\n      });\n    };\n\n    _this.handleUpdateModalCancel = function () {\n      _this.setState({\n        updateModalVisible: false\n      });\n    };\n\n    _this.handleUpdateModalOk2 = function () {\n      var data = _this.props.form.getFieldsValue(); // let params = this.record2;\n\n\n      var params = {};\n      params.Id = _this.record2.id / 1;\n      params.UserId = _this.record2.userId;\n      params.UserName = _this.record2.userName;\n      params.UserPasswd = _this.record2.userPasswd;\n      params.UserType = _this.record2.userType / 1;\n      params.RiskGroup = _this.record2.riskGroup / 1;\n      params.AlgoGroup = data.algoGroup / 1; // params.AlgoProperty = this.record2.algoProperty;\n\n      params.UuserId = _this.record2.uuserId / 1; // console.log(this.record2);\n      // console.log(\"参数\", params);\n      //发送更新请求\n\n      http.post({\n        url: \"/user/updateUserInfo\",\n        data: params\n      }).then(function (res) {\n        console.log(res);\n        var msg = res.message;\n\n        if (res.code == 0) {\n          _message.success(msg);\n\n          _this.getData(_this.searchParam, _this.state.pagination);\n        } else if (res.code == 20000) {\n          _message.error(msg.substring(msg.indexOf(\"[\") + 1, msg.lastIndexOf(\"]\")));\n        } else {\n          _message.error(msg);\n        } // this.isAction = true;\n\n      }); // this.updateUserRiskGroup(data);\n\n      _this.setState({\n        updateModalVisible2: false\n      });\n    };\n\n    _this.handleUpdateModalCancel2 = function () {\n      _this.setState({\n        updateModalVisible2: false\n      });\n    };\n\n    _this.handleDeleteRecord = function (record) {\n      console.log(\"删除记录 \", record);\n    };\n\n    _this.inputChange = function (e) {\n      // console.log(e);\n      // let val = e.target.value;\n      var val = e; // if (this.inputTimeout) {\n      //     clearTimeout(this.inputTimeout);\n      // }\n      // this.inputTimeout = setTimeout(() => {\n      //     this.getRiskGroup(val);\n      // }, 1000);\n\n      _this.getRiskGroup(val);\n    };\n\n    _this.algoSelectChange = function (e) {\n      // console.log(e);\n      var val = e;\n\n      _this.getAlgoGroupById(val);\n    };\n\n    _this.algoChange = function (str) {\n      // console.log(str);\n      var newAlgoArr = Object.assign([], _this.state.algoList);\n      newAlgoArr.forEach(function (item) {\n        return item.isShow = \"否\";\n      }); // console.log(\"0x\" + e.target.value);\n      // console.log(isNaN(\"0x\" + e.target.value));\n\n      if (!isNaN(\"0x\" + str)) {\n        var val = BigInt(\"0x\" + str);\n        var bin = val.toString(2); // console.log(bin);\n\n        var showArr = bin.toString().split(\"\").reverse().map(function (item) {\n          return item == \"1\" ? \"是\" : \"否\";\n        });\n        var showLen = showArr.length;\n        var algoLen = _this.state.algoList.length;\n        var minLen = Math.min(showLen, algoLen);\n\n        for (var i = 0; i < minLen; i++) {\n          newAlgoArr[i].isShow = showArr[i];\n        }\n\n        _this.setState({\n          algoList: newAlgoArr\n        });\n      }\n    };\n\n    _this.getParentInfoList = function () {\n      var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      // return;\n      http.post({\n        url: \"/user/getParentInfo\",\n        data: params\n      }).then(function (res) {\n        if (res.data && res.data.length > 0) {\n          _this.setState({\n            parentInfoList: res.data\n          });\n        }\n      });\n    };\n\n    _this.getAllRiskGroup = function () {\n      var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      // return;\n      http.post({\n        // url: \"/risk/queryRisk\",\n        url: \"/risk/riskList\",\n        data: params\n      }).then(function (res) {\n        // console.log(res);\n        var idArr = [];\n\n        if (res.data && res.data.length > 0) {\n          // RiskType: [{ key: \"1\", value: \"用户\" },{ key: \"2\", value: \"算法\" },\n          var dataArr = res.data.filter(function (item) {\n            return item.riskType == 1;\n          });\n\n          if (dataArr.length > 0) {\n            idArr = dataArr.map(function (item) {\n              var obj = {};\n              obj.key = item.id;\n              obj.value = item.id;\n              return obj;\n            });\n          }\n        }\n\n        _this.setState({\n          riskList: idArr\n        });\n      });\n    };\n\n    _this.getAllAlgoGroup = function () {\n      // return;\n      http.get({\n        // url: \"/risk/queryRisk\",\n        url: \"/algo-group-info/algoList\" // data: params,\n\n      }).then(function (res) {\n        // console.log(\"算法风控组\",res);\n        var idArr = [];\n\n        if (res.data && res.data.length > 0) {\n          var dataArr = res.data;\n          idArr = dataArr.map(function (item) {\n            var obj = {};\n            obj.key = item.id;\n            obj.value = item.id;\n            return obj;\n          });\n          parseDict(res.data); // res.data.forEach((item) => (item.isShow = \"是\"));\n          // console.log(idArr);\n        } // console.log(res.data);\n\n\n        _this.setState({\n          algoSecList: idArr\n        });\n      });\n    };\n\n    _this.getAlgoList = function () {\n      // return;\n      http.get({\n        // url: \"/risk/queryRisk\",\n        url: \"/algo/listAll\" // data: params,\n\n      }).then(function (res) {\n        console.log(\"所有算法\", res);\n        var idArr = [];\n\n        if (res.data && res.data.length > 0) {\n          var dataArr = res.data;\n          idArr = dataArr.map(function (item) {\n            var obj = {};\n            obj.key = item.id;\n            obj.value = item.id;\n            return obj;\n          });\n          parseDict(res.data);\n        }\n\n        _this.setState({\n          algoList: res.data\n        });\n      });\n    };\n\n    _this.getAlgoGroupById = function (gid) {\n      var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n        pageId: 1,\n        pageNum: 10000\n      };\n\n      if (gid !== undefined) {\n        params.id = gid;\n      } // return;\n\n\n      http.post({\n        // url: \"/risk/queryRisk\",\n        url: \"/algo-group-info/list\",\n        data: params\n      }).then(function (res) {\n        // console.log(\"getAlgoGroupById\", res);\n        var property = \"\";\n\n        if (res.data && res.data.records && res.data.records.length > 0) {\n          property = res.data.records[0].algoProperty;\n\n          _this.algoChange(property);\n\n          _this.props.form.setFieldsValue({\n            algoProperty: property\n          });\n        }\n      });\n    };\n\n    _this.updateUserRiskGroup = function (data) {\n      var params = {\n        userId: data.userId,\n        riskGroup: data.riskGroup / 1\n      };\n      console.log(params); // return;\n\n      http.post({\n        url: \"/risk/modifyUserRiskGroup\",\n        data: params\n      }).then(function (res) {\n        // console.log(res);\n        if (res.code == 0) {\n          _message.success(res.message); // showTip(this, res.message);\n          // this.isAction = true;\n\n\n          _this.getData(_this.searchParam, _this.state.pagination); // this.getData();\n\n        } else {\n          _message.error(res.message);\n\n          _this.isAction = true;\n        }\n      });\n    };\n\n    _this.getRiskGroup = function (id) {\n      var params = {\n        id: id / 1\n      }; // console.log(params);\n\n      http.post({\n        url: \"/risk/queryRiskConfig\",\n        data: params\n      }).then(function (res) {\n        console.log(res);\n\n        if (res.code != 0) {\n          _message.error(\"查询风控配置组失败！\");\n\n          return;\n        }\n\n        var config = JSON.parse(res.data); // this.setState({ userRiskConfig: config });\n        // console.log(config);\n\n        var enable = (config.RiskEnable / 1).toString(2).padStart(9, \"0\"); // let enableArr = enable.split(\"\");\n\n        var enableArr = enable.split(\"\").map(function (item) {\n          return item == 1;\n        }); // console.log(enableArr);\n\n        _this.props.form.setFieldsValue({\n          // riskGroup: record.riskGroup + \"\",\n          byte0: enableArr[8],\n          byte1: enableArr[7],\n          byte2: enableArr[6],\n          byte3: enableArr[5],\n          byte4: enableArr[4],\n          byte5: enableArr[3],\n          byte6: enableArr[2],\n          byte7: enableArr[1],\n          byte8: enableArr[0],\n          // riskName: config.RiskName,\n          entrustItemThreshold: config.EntrustItemThreshold,\n          entrustItemLimit: config.EntrustItemLimit,\n          entrustSeconds: config.EntrustSeconds,\n          entrustTotalThreshold: config.EntrustTotalThreshold,\n          cancelEntrustItemThreshold: config.CancelEntrustItemThreshold,\n          cancelRatioLimit: config.CancelRatioLimit,\n          failedEntrustItemThreshold: config.FailedEntrustItemThreshold,\n          failedRatioLimit: config.FailedRatioLimit,\n          entrustExecEntrustItemThreshold: config.EntrustExecEntrustItemThreshold,\n          entrustExecRatioLimit: config.EntrustExecRatioLimit,\n          netBuyEntrustItemThreshold: config.NetBuyEntrustItemThreshold,\n          netBuyAmountLimit: config.NetBuyAmountLimit,\n          cancelItemLimit: config.CancelItemLimit,\n          cancelSeconds: config.CancelSeconds,\n          cancelGapSeconds: config.CancelGapSeconds,\n          tradeItemLimit: config.TradeItemLimit,\n          tradeSeconds: config.TradeSeconds,\n          tradeQtyLimit: config.TradeQtyLimit,\n          tradeAmountLimit: config.TradeAmountLimit\n        });\n      });\n    };\n\n    _this.getData = function () {\n      var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var pagination = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n        current: 1,\n        pageSize: 12\n      };\n      params = _objectSpread({}, params, {\n        pageId: pagination.current,\n        pageNum: pagination.pageSize\n      });\n      http.post({\n        // url: \"/option/assetInfo/selectList\",\n        url: \"/user/selectByCondition\",\n        data: params\n      }).then(function (res) {\n        // console.log(res);\n        //解析数据字典\n        if (res.data.records && res.data.records.length > 0) {\n          var userList = res.data.records;\n          userList.forEach(function (item) {\n            item.parentName = \"\";\n            var parentNameList = [];\n\n            if (item.parentInfos.length) {\n              item.parentInfos.forEach(function (sonItem) {\n                parentNameList.push(sonItem.muserName);\n              });\n              item.parentName = parentNameList.join(\"，\");\n            }\n          });\n          parseDictValue(userList);\n        } else {\n          _message.info(\"查询结果为空\");\n        }\n\n        var pgn = {\n          current: res.data.current,\n          pageSize: pagination.pageSize,\n          total: res.data.total || 0\n        };\n\n        _this.setState({\n          info: res.data.records,\n          pagination: pgn\n        });\n      });\n    };\n\n    _this.handleSearch = function (params, pagination) {\n      _this.searchParam = params;\n\n      _this.getData(params, pagination);\n    };\n\n    _this.handleDownload = function () {\n      window.location.href = window.baseURL + \"/user/download\";\n    };\n\n    return _this;\n  }\n\n  _createClass(userInfo, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getData();\n      this.getAllRiskGroup();\n      this.getAllAlgoGroup();\n      this.getAlgoList();\n      this.getParentInfoList();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var scroll = {\n        x: 1000,\n        y: 445\n      };\n      var info = this.state.info; //批量\n      // let { selectRow } = this.state;\n      // const rowSelection = {\n      //     selectRow,\n      //     onChange: this.handleTableChange,\n      // };\n\n      var getFieldDecorator = this.props.form.getFieldDecorator;\n      var scroll2 = {\n        x: 1000,\n        y: 450\n      };\n      return React.createElement(\"div\", {\n        className: styles.userInfo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1215\n        },\n        __self: this\n      }, React.createElement(CurdComponent, {\n        pageSize: 10 // rowKey={\"index\"}\n        // isShowSearchForm={false}\n        // btnText2=\"查全部\"\n        ,\n        onSearchClick: this.handleSearch,\n        getSearchFormFields: this.getSearchFormFields // searchLoading={this.state.searchLoading}\n        ,\n        insertBtnText: \"新增\" // 不传 就没新增按钮\n        ,\n        getInsertFormFields: this.getInsertFormFields,\n        insertRecord: this.handleInsertRecord // col=\"2\"\n        ,\n        width: \"600px\",\n        pagination: this.state.pagination,\n        getUpdateFormFields: this.getUpdateFormFields,\n        setUpdateModal: this.setUpdateModal,\n        updateRecord: this.handleUpdateRecord // 不传 就没编辑\n        // deleteRecord={this.handleDeleteRecord} // 不传 就没删除\n        ,\n        centered: true,\n        columns: this.columns,\n        dataSource: info,\n        scroll: scroll // rowSelection={rowSelection} //批量选择 操作\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1216\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        urlPrefix: \"/user\",\n        title: \"\\u7528\\u6237\\u4FE1\\u606F\",\n        sucCallback: this.getData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1240\n        },\n        __self: this\n      })), React.createElement(_Modal, {\n        title: \"新增角色\",\n        visible: this.state.updateModalVisible,\n        onOk: this.handleUpdateModalOk,\n        onCancel: this.handleUpdateModalCancel,\n        width: 788,\n        centered: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1247\n        },\n        __self: this\n      }, React.createElement(_Form, {\n        layout: \"vertical\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1255\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1256\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: styles.rowFlex,\n        style: {\n          position: \"relative\"\n        },\n        id: \"area\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1257\n        },\n        __self: this\n      }, React.createElement(_Form.Item, {\n        label: \"\\u7528\\u6237ID\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1264\n        },\n        __self: this\n      }, getFieldDecorator(\"userId\")(React.createElement(_Input, {\n        placeholder: \"\\u8BF7\\u8F93\\u5165\",\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1266\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        style: {\n          width: 60\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1269\n        },\n        __self: this\n      }), React.createElement(_Form.Item, {\n        // className={styles.marLose14}\n        label: React.createElement(\"label\", {\n          title: \"\\u8BF7\\u8F93\\u5165\\u5DF2\\u914D\\u7F6E\\u6210\\u529F\\u7684\\u98CE\\u63A7\\u7EC4,\\u5426\\u5219\\u98CE\\u63A7\\u7EC4\\u4E0D\\u80FD\\u4FEE\\u6539\\u6210\\u529F!\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1273\n          },\n          __self: this\n        }, \"\\u4FEE\\u6539\\u98CE\\u63A7\\u7EC4\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1270\n        },\n        __self: this\n      }, getFieldDecorator(\"riskGroup\", {\n        rules: [{\n          required: true,\n          message: \"请输入\"\n        }]\n      })(React.createElement(_Input, {\n        placeholder: \"\",\n        onChange: this.inputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1286\n        },\n        __self: this\n      }))))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1294\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: styles.tit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1295\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: styles.text,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1296\n        },\n        __self: this\n      }, \"\\u6743\\u9650\"))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1299\n        },\n        __self: this\n      }))), React.createElement(_Modal, {\n        title: \"修改算法权限组\",\n        visible: this.state.updateModalVisible2,\n        onOk: this.handleUpdateModalOk2,\n        onCancel: this.handleUpdateModalCancel2,\n        width: 1288,\n        centered: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1302\n        },\n        __self: this\n      }, React.createElement(_Form, {\n        layout: \"vertical\",\n        style: {\n          maxHeight: \"690px\",\n          overflow: \"hidden\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1310\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1314\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: styles.rowFlex,\n        style: {\n          position: \"relative\"\n        },\n        id: \"algo1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1315\n        },\n        __self: this\n      }, React.createElement(_Form.Item, {\n        label: \"\\u7528\\u6237ID\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1322\n        },\n        __self: this\n      }, getFieldDecorator(\"userId\")(React.createElement(_Input, {\n        placeholder: \"\\u8BF7\\u8F93\\u5165\",\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1324\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        style: {\n          width: 60\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1327\n        },\n        __self: this\n      }), React.createElement(_Form.Item, {\n        // className={styles.marLose14}\n        label: React.createElement(\"label\", {\n          title: \"\\u8BF7\\u8F93\\u5165\\u5DF2\\u914D\\u7F6E\\u6210\\u529F\\u7684\\u98CE\\u63A7\\u7EC4,\\u5426\\u5219\\u98CE\\u63A7\\u7EC4\\u4E0D\\u80FD\\u4FEE\\u6539\\u6210\\u529F!\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1331\n          },\n          __self: this\n        }, \"\\u4FEE\\u6539\\u7B97\\u6CD5\\u98CE\\u63A7\\u7EC4\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1328\n        },\n        __self: this\n      }, getFieldDecorator(\"algoGroup\", {\n        rules: [{\n          required: true,\n          message: \"请输入\"\n        }]\n      })(SelectOption(this.state.algoSecList, {\n        placeholder: \"请选择\",\n        onChange: this.algoSelectChange,\n        getPopupContainer: function getPopupContainer() {\n          return document.getElementById(\"algo1\");\n        }\n      }) // <Input\n      //     placeholder=\"\"\n      //     onChange={this.inputChange}\n      // />\n      )))), React.createElement(\"div\", {\n        className: styles.rowFlex,\n        style: {\n          position: \"relative\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1360\n        },\n        __self: this\n      }, React.createElement(_Form.Item, {\n        label: \"\\u7B97\\u6CD5\\u6743\\u9650\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1366\n        },\n        __self: this\n      }, getFieldDecorator(\"algoProperty\")(React.createElement(_Input, {\n        placeholder: \"\\u8BF7\\u8F93\\u5165\",\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1368\n        },\n        __self: this\n      })))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1372\n        },\n        __self: this\n      }, React.createElement(Table, {\n        rowKey: \"id\",\n        columns: this.columns2(),\n        dataSource: this.state.algoList,\n        scroll: scroll2,\n        size: \"small\" // rowSelection={rowSelection}\n        // handlePagination={this.handlePagination}\n        // pagination={this.props.pagination}\n        ,\n        pagination: false // pagaSize={pagaSize}\n        // onDoubleClick={this.onDoubleClick}\n        // showDetail={dtColumns.length > 0}\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1373\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return userInfo;\n}(React.PureComponent);\n\nexport default _Form.create()(userInfo);","map":{"version":3,"sources":["D:/company/algo-manage/src/algo/modules/auth/pages/roleManagement/index.js"],"names":["React","CurdComponent","SelectOption","Table","styles","md5","userInfo","state","searchLoading","selectRow","info","updateModalVisible","updateModalVisible2","riskGroup","userRiskConfig","pagination","total","riskList","parentInfoList","algoList","algoSecList","getInsertFormFields","label","id","initialValue","rules","required","message","validator","checkLength","trigger","component","dict","userType","placeholder","style","width","map","item","index","userName","userStatus","getUpdateFormFields","getSearchFormFields","allowClear","columns","params","title","dataIndex","key","render","text","record","typeWrap","userType1","userTypeValue","userType2","userType3","userType4","e","handleUpdate","sessionStorage","userPrivilege","color","handleUpdateAlgo","algoGroup","columns2","ellipsis","handleTableChange","selectedRowKeys","console","log","setState","handleInsertRecord","UserType","RiskGroup","AlgoGroup","UserPasswd","UserStatus","http","post","url","data","then","res","msg","code","success","error","substring","indexOf","lastIndexOf","handleUpdateRecord","form","getFieldsValue","Id","UuserId","userPasswd","setUpdateModal","parentId","parentInfos","length","forEach","push","muserId","setFieldsValue","UserId","userId","UserName","IdentityId","identityId","OrganizaId","organizaId","OrganizaName","organizaName","getRiskGroup","props","record2","getAlgoGroupById","handleUpdateModalOk","updateUserRiskGroup","handleUpdateModalCancel","handleUpdateModalOk2","uuserId","getData","searchParam","handleUpdateModalCancel2","handleDeleteRecord","inputChange","val","algoSelectChange","algoChange","str","newAlgoArr","Object","assign","isShow","isNaN","BigInt","bin","toString","showArr","split","reverse","showLen","algoLen","minLen","Math","min","i","getParentInfoList","getAllRiskGroup","idArr","dataArr","filter","riskType","obj","value","getAllAlgoGroup","get","parseDict","getAlgoList","gid","pageId","pageNum","undefined","property","records","algoProperty","isAction","config","JSON","parse","enable","RiskEnable","padStart","enableArr","byte0","byte1","byte2","byte3","byte4","byte5","byte6","byte7","byte8","entrustItemThreshold","EntrustItemThreshold","entrustItemLimit","EntrustItemLimit","entrustSeconds","EntrustSeconds","entrustTotalThreshold","EntrustTotalThreshold","cancelEntrustItemThreshold","CancelEntrustItemThreshold","cancelRatioLimit","CancelRatioLimit","failedEntrustItemThreshold","FailedEntrustItemThreshold","failedRatioLimit","FailedRatioLimit","entrustExecEntrustItemThreshold","EntrustExecEntrustItemThreshold","entrustExecRatioLimit","EntrustExecRatioLimit","netBuyEntrustItemThreshold","NetBuyEntrustItemThreshold","netBuyAmountLimit","NetBuyAmountLimit","cancelItemLimit","CancelItemLimit","cancelSeconds","CancelSeconds","cancelGapSeconds","CancelGapSeconds","tradeItemLimit","TradeItemLimit","tradeSeconds","TradeSeconds","tradeQtyLimit","TradeQtyLimit","tradeAmountLimit","TradeAmountLimit","current","pageSize","userList","parentName","parentNameList","sonItem","muserName","join","parseDictValue","pgn","handleSearch","handleDownload","window","location","href","baseURL","scroll","x","y","getFieldDecorator","scroll2","rowFlex","position","tit","maxHeight","overflow","onChange","getPopupContainer","document","getElementById","PureComponent","create"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport CurdComponent from \"@/components/CurdComponent\";\r\nimport SelectOption from \"@/components/SelectOption\";\r\nimport Table from \"@/components/Table\";\r\nimport { Select, Tree } from \"antd\";\r\n// import UploadWrap from \"@/components/UploadWrap\";\r\n\r\nimport {\r\n    Input,\r\n    Modal,\r\n    Switch,\r\n    Form,\r\n    message,\r\n    Tooltip,\r\n    Icon,\r\n    AutoComplete,\r\n} from \"antd\";\r\nimport styles from \"./style.module.less\";\r\nimport md5 from \"js-md5\"; //全局引入\r\nclass userInfo extends React.PureComponent {\r\n    state = {\r\n        searchLoading: false,\r\n        selectRow: [],\r\n        info: [],\r\n        updateModalVisible: false,\r\n        updateModalVisible2: false,\r\n        riskGroup: [],\r\n        userRiskConfig: {},\r\n        pagination: { total: 0 },\r\n        riskList: [], //算法列表\r\n        parentInfoList: [], //操作人用户列表\r\n        algoList: [],\r\n        algoSecList: [],\r\n    };\r\n    getInsertFormFields = () => {\r\n        return [\r\n            {\r\n                label: \"用户编码\",\r\n                id: \"UserId\",\r\n                initialValue: \"\",\r\n                rules: [\r\n                    {\r\n                        required: true,\r\n                        message: \"参数不能为空\",\r\n                    },\r\n                    {\r\n                        validator: checkLength(12),\r\n                        trigger: [\"change\", \"blur\"],\r\n                    },\r\n                ],\r\n                component: <Input placeholder=\"请输入\" />,\r\n            },\r\n            {\r\n                label: \"用户密码\",\r\n                id: \"UserPasswd\",\r\n                initialValue: \"\",\r\n                rules: [\r\n                    {\r\n                        required: true,\r\n                        message: \"参数不能为空\",\r\n                    },\r\n                    {\r\n                        validator: checkLength(32),\r\n                        trigger: [\"change\", \"blur\"],\r\n                    },\r\n                ],\r\n                component: <Input placeholder=\"请输入\" />,\r\n            },\r\n            {\r\n                label: \"用户名称\",\r\n                id: \"UserName\",\r\n                initialValue: \"\",\r\n                rules: [\r\n                    {\r\n                        required: true,\r\n                        message: \"参数不能为空\",\r\n                    },\r\n                    {\r\n                        validator: checkLength(32),\r\n                        trigger: [\"change\", \"blur\"],\r\n                    },\r\n                ],\r\n                component: <Input placeholder=\"请输入\" />,\r\n            },\r\n            {\r\n                label: \"用户类型\",\r\n                id: \"UserType\",\r\n                initialValue: \"1\",\r\n                rules: [\r\n                    {\r\n                        required: true,\r\n                        message: \"参数不能为空\",\r\n                    },\r\n                ],\r\n                component: SelectOption(dict.userType, {\r\n                    placeholder: \"请选择\",\r\n                    // allowClear: true,\r\n                    style: {\r\n                        width: 400,\r\n                    },\r\n                }),\r\n            },\r\n            {\r\n                label: \"管理员用户\",\r\n                id: \"UuserId\",\r\n                initialValue: [],\r\n                rules: [\r\n                    {\r\n                        required: true,\r\n                        message: \"参数不能为空\",\r\n                    },\r\n                    // {\r\n                    //     validator: checkLength(10),\r\n                    //     trigger: [\"change\", \"blur\"],\r\n                    // },\r\n                ],\r\n                component: (\r\n                    <Select\r\n                        mode=\"multiple\"\r\n                        style={{ width: \"100%\" }}\r\n                        placeholder=\"请选择\"\r\n                    >\r\n                        {this.state.parentInfoList.map((item, index) => {\r\n                            return (\r\n                                <Select.Option\r\n                                    key={item.id}\r\n                                    value={item.id / 1}\r\n                                >\r\n                                    {item.userName}\r\n                                </Select.Option>\r\n                            );\r\n                        })}\r\n                    </Select>\r\n                ),\r\n            },\r\n            {\r\n                label: \"用户风控组\",\r\n                id: \"RiskName\",\r\n                initialValue: \"\",\r\n                rules: [\r\n                    {\r\n                        required: true,\r\n                        message: \"参数不能为空\",\r\n                    },\r\n                ],\r\n                component:\r\n                    // <Input placeholder=\"请输入\" readOnly disabled />\r\n                    SelectOption(this.state.riskList, {\r\n                        placeholder: \"请选择用户风控组\",\r\n                    }),\r\n            },\r\n            {\r\n                label: \"算法权限组\",\r\n                id: \"GroupName\",\r\n                initialValue: \"\",\r\n                rules: [\r\n                    {\r\n                        required: true,\r\n                        message: \"参数不能为空\",\r\n                    },\r\n                ],\r\n                component:\r\n                    // <Input placeholder=\"请输入\" readOnly disabled />\r\n                    SelectOption(this.state.algoSecList, {\r\n                        placeholder: \"请选择算法权限组\",\r\n                    }),\r\n            },\r\n            {\r\n                label: \"用户状态\",\r\n                id: \"UserStatus\",\r\n                initialValue: \"1\",\r\n                rules: [\r\n                    {\r\n                        required: true,\r\n                        message: \"参数不能为空\",\r\n                    },\r\n                ],\r\n                component: SelectOption(dict.userStatus, {\r\n                    placeholder: \"请选择\",\r\n                    // allowClear: true,\r\n                    style: {\r\n                        width: 400,\r\n                    },\r\n                }),\r\n            },\r\n            {\r\n                label: \"证件号码\",\r\n                id: \"IdentityId\",\r\n                initialValue: \"\",\r\n                rules: [\r\n                    {\r\n                        required: true,\r\n                        message: \"参数不能为空\",\r\n                    },\r\n                    {\r\n                        validator: checkLength(18),\r\n                        trigger: [\"change\", \"blur\"],\r\n                    },\r\n                ],\r\n                component: <Input placeholder=\"请输入\" />,\r\n            },\r\n            {\r\n                label: \"机构编码\",\r\n                id: \"OrganizaId\",\r\n                initialValue: \"\",\r\n                rules: [\r\n                    {\r\n                        required: true,\r\n                        message: \"参数不能为空\",\r\n                    },\r\n                    {\r\n                        validator: checkLength(12),\r\n                        trigger: [\"change\", \"blur\"],\r\n                    },\r\n                ],\r\n                component: <Input placeholder=\"请输入\" />,\r\n            },\r\n            {\r\n                label: \"机构名称\",\r\n                id: \"OrganizaName\",\r\n                initialValue: \"\",\r\n                rules: [\r\n                    {\r\n                        required: true,\r\n                        message: \"参数不能为空\",\r\n                    },\r\n                    {\r\n                        validator: checkLength(28),\r\n                        trigger: [\"change\", \"blur\"],\r\n                    },\r\n                ],\r\n                component: <Input placeholder=\"请输入\" />,\r\n            },\r\n            // {\r\n            //     label: \"算法属性\",\r\n            //     id: \"AlgoProperty\",\r\n            //     initialValue: \"\",\r\n            //     rules: [\r\n            //         // {\r\n            //         //     required: true,\r\n            //         //     message: \"参数不能为空\",\r\n            //         // },\r\n            //     ],\r\n            //     component: <Input placeholder=\"请输入\" />,\r\n            // },\r\n        ];\r\n    };\r\n    getUpdateFormFields = () => {\r\n        return [\r\n            {\r\n                label: \"用户编码\",\r\n                id: \"UserId\",\r\n                initialValue: \"\",\r\n                rules: [\r\n                    {\r\n                        required: true,\r\n                        message: \"参数不能为空\",\r\n                    },\r\n                    {\r\n                        validator: checkLength(12),\r\n                        trigger: [\"change\", \"blur\"],\r\n                    },\r\n                ],\r\n                component: <Input placeholder=\"请输入\" />,\r\n            },\r\n            {\r\n                label: \"用户密码\",\r\n                id: \"UserPasswd\",\r\n                initialValue: \"\",\r\n                rules: [\r\n                    // {\r\n                    //     required: true,\r\n                    //     message: \"参数不能为空\",\r\n                    // },\r\n                    {\r\n                        validator: checkLength(32),\r\n                        trigger: [\"change\", \"blur\"],\r\n                    },\r\n                ],\r\n                component: <Input placeholder=\"需修改密码，请输入新密码\" />,\r\n            },\r\n            {\r\n                label: \"用户名称\",\r\n                id: \"UserName\",\r\n                initialValue: \"\",\r\n                rules: [\r\n                    {\r\n                        required: true,\r\n                        message: \"参数不能为空\",\r\n                    },\r\n                    {\r\n                        validator: checkLength(32),\r\n                        trigger: [\"change\", \"blur\"],\r\n                    },\r\n                ],\r\n                component: <Input placeholder=\"请输入\" />,\r\n            },\r\n            {\r\n                label: \"用户类型\",\r\n                id: \"UserType\",\r\n                initialValue: \"1\",\r\n                rules: [\r\n                    {\r\n                        required: true,\r\n                        message: \"参数不能为空\",\r\n                    },\r\n                ],\r\n                component: SelectOption(dict.userType, {\r\n                    placeholder: \"请选择\",\r\n                    // allowClear: true,\r\n                    style: {\r\n                        width: 400,\r\n                    },\r\n                }),\r\n            },\r\n            {\r\n                label: \"管理员用户\",\r\n                id: \"UuserId\",\r\n                initialValue: [],\r\n                rules: [\r\n                    {\r\n                        required: true,\r\n                        message: \"参数不能为空\",\r\n                    },\r\n                    // {\r\n                    //     validator: checkLength(10),\r\n                    //     trigger: [\"change\", \"blur\"],\r\n                    // },\r\n                ],\r\n                component: (\r\n                    <Select\r\n                        mode=\"multiple\"\r\n                        style={{ width: \"100%\" }}\r\n                        placeholder=\"请选择\"\r\n                    >\r\n                        {this.state.parentInfoList.map((item, index) => {\r\n                            return (\r\n                                <Select.Option\r\n                                    key={item.id}\r\n                                    value={item.id / 1}\r\n                                >\r\n                                    {item.userName}\r\n                                </Select.Option>\r\n                            );\r\n                        })}\r\n                    </Select>\r\n                ),\r\n            },\r\n            {\r\n                label: \"用户风控组\",\r\n                id: \"RiskGroup\",\r\n                initialValue: \"\",\r\n                rules: [\r\n                    {\r\n                        required: true,\r\n                        message: \"参数不能为空\",\r\n                    },\r\n                ],\r\n                component:\r\n                    // <Input placeholder=\"请输入\" readOnly disabled />\r\n                    SelectOption(this.state.riskList, {\r\n                        placeholder: \"请选择用户风控组\",\r\n                    }),\r\n            },\r\n            {\r\n                label: \"算法权限组\",\r\n                id: \"AlgoGroup\",\r\n                initialValue: \"\",\r\n                rules: [\r\n                    {\r\n                        required: true,\r\n                        message: \"参数不能为空\",\r\n                    },\r\n                ],\r\n                component: SelectOption(this.state.algoSecList, {\r\n                    placeholder: \"请选择算法权限组\",\r\n                }),\r\n            },\r\n            {\r\n                label: \"用户状态\",\r\n                id: \"UserStatus\",\r\n                initialValue: \"1\",\r\n                rules: [\r\n                    {\r\n                        required: true,\r\n                        message: \"参数不能为空\",\r\n                    },\r\n                ],\r\n                component: SelectOption(dict.userStatus, {\r\n                    placeholder: \"请选择\",\r\n                    // allowClear: true,\r\n                    style: {\r\n                        width: 400,\r\n                    },\r\n                }),\r\n            },\r\n            {\r\n                label: \"证件号码\",\r\n                id: \"IdentityId\",\r\n                initialValue: \"\",\r\n                rules: [\r\n                    {\r\n                        required: true,\r\n                        message: \"参数不能为空\",\r\n                    },\r\n                    {\r\n                        validator: checkLength(18),\r\n                        trigger: [\"change\", \"blur\"],\r\n                    },\r\n                ],\r\n                component: <Input placeholder=\"请输入\" />,\r\n            },\r\n            {\r\n                label: \"机构编码\",\r\n                id: \"OrganizaId\",\r\n                initialValue: \"\",\r\n                rules: [\r\n                    {\r\n                        required: true,\r\n                        message: \"参数不能为空\",\r\n                    },\r\n                    {\r\n                        validator: checkLength(12),\r\n                        trigger: [\"change\", \"blur\"],\r\n                    },\r\n                ],\r\n                component: <Input placeholder=\"请输入\" />,\r\n            },\r\n            {\r\n                label: \"机构名称\",\r\n                id: \"OrganizaName\",\r\n                initialValue: \"\",\r\n                rules: [\r\n                    {\r\n                        required: true,\r\n                        message: \"参数不能为空\",\r\n                    },\r\n                    {\r\n                        validator: checkLength(28),\r\n                        trigger: [\"change\", \"blur\"],\r\n                    },\r\n                ],\r\n                component: <Input placeholder=\"请输入\" />,\r\n            },\r\n        ];\r\n    };\r\n    getSearchFormFields = () => {\r\n        return [\r\n            {\r\n                label: \"用户名称\",\r\n                // label: (\r\n                //     <span>用&nbsp;&nbsp;&nbsp;户&nbsp;&nbsp;&nbsp;名称</span>\r\n                // ),\r\n                id: \"userName\",\r\n                component: <Input placeholder=\"请输入\" />,\r\n            },\r\n            {\r\n                // label: \"用户ID\",\r\n                label: <span>用&nbsp;户&nbsp;编&nbsp;码</span>,\r\n                id: \"userId\",\r\n                component: <Input placeholder=\"请输入\" />,\r\n            },\r\n            {\r\n                // label: \"用户类型\",\r\n                label: <span>用&nbsp;户&nbsp;类&nbsp;型</span>,\r\n                id: \"userType\",\r\n                // initialValue: \"1\",\r\n                component: SelectOption(dict.userType, {\r\n                    placeholder: \"请选择\",\r\n                    allowClear: true,\r\n                    style: {\r\n                        width: 190,\r\n                    },\r\n                }),\r\n            },\r\n            {\r\n                label: \"用户风控组\",\r\n                id: \"riskGroup\",\r\n                component: SelectOption(this.state.riskList, {\r\n                    allowClear: true,\r\n                    style: {\r\n                        width: 190,\r\n                    },\r\n                    placeholder: \"请选择用户风控组\",\r\n                }),\r\n            },\r\n            {\r\n                label: \"算法权限组\",\r\n                id: \"algoGroup\",\r\n                component: SelectOption(this.state.algoSecList, {\r\n                    allowClear: true,\r\n                    placeholder: \"请选择算法权限组\",\r\n                }),\r\n            },\r\n            // {\r\n            //     label: \"管理员用户名\",\r\n            //     id: \"fatherId\",\r\n            //     component: <Input placeholder=\"请输入\" />,\r\n            // },\r\n        ];\r\n    };\r\n\r\n    columns = (params) => {\r\n        return [\r\n            {\r\n                title: \"用户ID\",\r\n                dataIndex: \"id\",\r\n                width: 100,\r\n            },\r\n            {\r\n                title: \"用户编码\",\r\n                dataIndex: \"userId\",\r\n                width: 140,\r\n            },\r\n            {\r\n                title: \"用户名称\",\r\n                dataIndex: \"userName\",\r\n                key: \"userName\",\r\n                width: 140,\r\n            },\r\n            {\r\n                title: \"用户类型\",\r\n                dataIndex: \"userTypeValue\",\r\n                width: 200,\r\n                // key: \"userType\",\r\n                render: (text, record) => {\r\n                    // console.log(record);\r\n                    if (record.userType == 1) {\r\n                        return (\r\n                            <div className={styles.typeWrap}>\r\n                                <span className={styles.userType1}>个</span>\r\n                                <span>{record.userTypeValue}</span>\r\n                            </div>\r\n                        );\r\n                    } else if (record.userType == 2) {\r\n                        return (\r\n                            <div className={styles.typeWrap}>\r\n                                <span className={styles.userType2}>算</span>\r\n                                <span>{record.userTypeValue}</span>\r\n                            </div>\r\n                        );\r\n                    } else if (record.userType == 3) {\r\n                        return (\r\n                            <div className={styles.typeWrap}>\r\n                                <span className={styles.userType3}>多</span>\r\n                                <span>{record.userTypeValue}</span>\r\n                            </div>\r\n                        );\r\n                    } else if (record.userType == 4) {\r\n                        return (\r\n                            <div className={styles.typeWrap}>\r\n                                <span className={styles.userType4}>行</span>\r\n                                <span>{record.userTypeValue}</span>\r\n                            </div>\r\n                        );\r\n                    }\r\n                    return (\r\n                        <div className={styles.typeWrap}>\r\n                            {record.userTypeValue}\r\n                        </div>\r\n                    );\r\n                },\r\n            },\r\n            {\r\n                title: \"用户风控组\",\r\n                dataIndex: \"riskGroup\",\r\n                width: 120,\r\n                render: (text, record) => (\r\n                    <div\r\n                        onClick={(e) => {\r\n                            this.handleUpdate(record);\r\n                        }}\r\n                    >\r\n                        <Tooltip title=\"修改风控组\">\r\n                            {record.riskGroup}\r\n                            {sessionStorage.userPrivilege != 2 && (\r\n                                <Icon\r\n                                    type=\"edit\"\r\n                                    style={{ color: \"#1899ff\" }}\r\n                                />\r\n                            )}\r\n                        </Tooltip>\r\n                    </div>\r\n                ),\r\n            },\r\n            {\r\n                title: \"算法权限组\",\r\n                dataIndex: \"algoGroup\",\r\n                width: 120,\r\n                render: (text, record) => (\r\n                    <div\r\n                        onClick={(e) => {\r\n                            this.handleUpdateAlgo(record);\r\n                        }}\r\n                    >\r\n                        <Tooltip title=\"修改算法权限组\">\r\n                            {record.algoGroup}\r\n                            {sessionStorage.userPrivilege != 2 && (\r\n                                <Icon\r\n                                    type=\"edit\"\r\n                                    style={{ color: \"#1899ff\" }}\r\n                                />\r\n                            )}\r\n                        </Tooltip>\r\n                    </div>\r\n                ),\r\n            },\r\n            // {\r\n            //     title: \"业务类型\",\r\n            //     dataIndex: \"businessType\",\r\n            // },\r\n            // {\r\n            //     title: \"登录状态\",\r\n            //     dataIndex: \"loginStatus\",\r\n            // },\r\n            {\r\n                title: \"管理员用户名\",\r\n                dataIndex: \"parentName\",\r\n                width: 180,\r\n            },\r\n            {\r\n                title: \"用户状态\",\r\n                dataIndex: \"userStatusValue\",\r\n                width: 140,\r\n            },\r\n            {\r\n                title: \"证件号码\",\r\n                dataIndex: \"identityId\",\r\n                width: 200,\r\n            },\r\n            {\r\n                title: \"机构编码\",\r\n                dataIndex: \"organizaId\",\r\n                width: 140,\r\n            },\r\n            {\r\n                title: \"机构名称\",\r\n                dataIndex: \"organizaName\",\r\n                width: 150,\r\n            },\r\n            {\r\n                title: \"注册时间\",\r\n                dataIndex: \"createTime\",\r\n                key: \"createTime\",\r\n                width: 180,\r\n            },\r\n            // {\r\n            //     title: \"操作\",\r\n            //     key: \"operation\",\r\n            //     fixed: \"right\",\r\n            //     width: 100,\r\n            //     render: (text, record) => (\r\n            //         <a\r\n            //             onClick={(e) => {\r\n            //                 this.handleUpdate(record);\r\n            //             }}\r\n            //         >\r\n            //             编辑\r\n            //         </a>\r\n            //     ),\r\n            // },\r\n        ];\r\n    };\r\n    columns2 = (params) => {\r\n        return [\r\n            {\r\n                title: \"算法ID\",\r\n                dataIndex: \"id\",\r\n                width: 100,\r\n                ellipsis: true,\r\n            },\r\n            {\r\n                title: \"算法名称\",\r\n                dataIndex: \"algoName\",\r\n                width: 150,\r\n                ellipsis: true,\r\n            },\r\n            {\r\n                title: \"算法厂商\",\r\n                dataIndex: \"providerName\",\r\n                width: 150,\r\n                ellipsis: true,\r\n            },\r\n            {\r\n                title: \"算法类型\",\r\n                dataIndex: \"algorithmType\",\r\n                width: 150,\r\n                ellipsis: true,\r\n            },\r\n            {\r\n                title: \"是否有权限\",\r\n                dataIndex: \"isShow\",\r\n                width: 150,\r\n                ellipsis: true,\r\n                render: (text, record) => (\r\n                    <div>\r\n                        {text == \"是\" ? (\r\n                            <span style={{ color: \"red\" }}>{text}</span>\r\n                        ) : (\r\n                            <span>{text}</span>\r\n                        )}\r\n                    </div>\r\n                ),\r\n            },\r\n        ];\r\n    };\r\n    //批量选择\r\n    handleTableChange = (selectedRowKeys) => {\r\n        console.log(\"批量选择\");\r\n        this.setState({\r\n            selectRow: selectedRowKeys,\r\n        });\r\n    };\r\n\r\n    handleInsertRecord = (params) => {\r\n        params.UserType = params.UserType / 1;\r\n        params.RiskGroup = params.RiskGroup / 1;\r\n        params.AlgoGroup = params.AlgoGroup / 1;\r\n        params.UserPasswd = md5(params.UserPasswd);\r\n        params.UserStatus = params.UserStatus / 1;\r\n        console.log(\"新增接口\", params);\r\n        http.post({\r\n            url: \"/user/addUserInfo\",\r\n            data: params,\r\n        }).then((res) => {\r\n            console.log(res);\r\n            let msg = res.message;\r\n            if (res.code == 0) {\r\n                message.success(msg);\r\n                // this.getData();\r\n            } else if (res.code == 20000) {\r\n                message.error(\r\n                    msg.substring(msg.indexOf(\"[\") + 1, msg.lastIndexOf(\"]\"))\r\n                );\r\n            } else {\r\n                message.error(msg);\r\n            }\r\n        });\r\n    };\r\n    //更新记录\r\n    handleUpdateRecord = ({ form }) => {\r\n        // console.log(form.getFieldsValue());\r\n        // return;\r\n        let params = form.getFieldsValue();\r\n        params.Id = this.record.id / 1;\r\n        params.UserType = params.UserType / 1;\r\n        params.RiskGroup = params.RiskGroup / 1;\r\n        params.AlgoGroup = params.AlgoGroup / 1;\r\n        params.UuserId = params.UuserId;\r\n        params.UserStatus = params.UserStatus / 1;\r\n        // console.log(this.record);\r\n        if (params.UserPasswd == \"\") {\r\n            params.UserPasswd = this.record.userPasswd;\r\n        } else {\r\n            params.UserPasswd = md5(params.UserPasswd);\r\n        }\r\n        console.log(params);\r\n        //发送更新请求\r\n        http.post({\r\n            url: \"/user/updateUserInfo\",\r\n            data: params,\r\n        }).then((res) => {\r\n            console.log(res);\r\n            let msg = res.message;\r\n            if (res.code == 0) {\r\n                message.success(msg);\r\n                // this.getData();\r\n            } else if (res.code == 20000) {\r\n                message.error(\r\n                    msg.substring(msg.indexOf(\"[\") + 1, msg.lastIndexOf(\"]\"))\r\n                );\r\n            } else {\r\n                message.error(msg);\r\n            }\r\n            // this.isAction = true;\r\n        });\r\n    };\r\n    //填入更新数据\r\n    setUpdateModal = ({ form, record }) => {\r\n        // console.log(record, form);\r\n        this.record = record;\r\n        console.log(this.record, \"this.record\");\r\n        let parentId = [];\r\n        if (this.record.parentInfos.length) {\r\n            this.record.parentInfos.forEach((item) => {\r\n                parentId.push(item.muserId);\r\n            });\r\n        }\r\n        console.log(parentId, \"parentIdparentId\");\r\n        form.setFieldsValue({\r\n            UserId: record.userId,\r\n            UserName: record.userName,\r\n            UserPasswd: \"\",\r\n            UserType: record.userType + \"\",\r\n            RiskGroup: record.riskGroup,\r\n            AlgoGroup: record.algoGroup,\r\n            UuserId: parentId,\r\n            // UuserId: record.parentInfos,\r\n            UserStatus: record.userStatus + \"\",\r\n            IdentityId: record.identityId,\r\n            OrganizaId: record.organizaId,\r\n            OrganizaName: record.organizaName,\r\n            // UserType: record.UserType,\r\n        });\r\n    };\r\n\r\n    //填入更新记录\r\n    handleUpdate = (record) => {\r\n        console.log(\"更新记录\", record);\r\n        this.record = record;\r\n        this.setState(\r\n            {\r\n                updateModalVisible: true,\r\n                riskGroup: [],\r\n            },\r\n            () => {\r\n                this.getRiskGroup(record.riskGroup);\r\n                this.props.form.setFieldsValue({\r\n                    riskGroup: record.riskGroup + \"\",\r\n                    userId: record.userId,\r\n                });\r\n            }\r\n        );\r\n    };\r\n    //修改算法权限组\r\n    handleUpdateAlgo = (record) => {\r\n        console.log(\"修改算法权限组\", record);\r\n        this.record2 = record;\r\n        this.setState(\r\n            {\r\n                updateModalVisible2: true,\r\n                algoGroup: [],\r\n            },\r\n            () => {\r\n                this.getAlgoGroupById(record.algoGroup);\r\n                this.props.form.setFieldsValue({\r\n                    algoGroup: record.algoGroup + \"\",\r\n                    userId: record.userId,\r\n                });\r\n            }\r\n        );\r\n    };\r\n\r\n    handleUpdateModalOk = () => {\r\n        let data = this.props.form.getFieldsValue();\r\n        data.userId = this.record.id;\r\n        console.log(data);\r\n        this.updateUserRiskGroup(data);\r\n\r\n        this.setState({\r\n            updateModalVisible: false,\r\n        });\r\n    };\r\n    handleUpdateModalCancel = () => {\r\n        this.setState({\r\n            updateModalVisible: false,\r\n        });\r\n    };\r\n    handleUpdateModalOk2 = () => {\r\n        let data = this.props.form.getFieldsValue();\r\n        // let params = this.record2;\r\n        let params = {};\r\n        params.Id = this.record2.id / 1;\r\n        params.UserId = this.record2.userId;\r\n        params.UserName = this.record2.userName;\r\n        params.UserPasswd = this.record2.userPasswd;\r\n        params.UserType = this.record2.userType / 1;\r\n        params.RiskGroup = this.record2.riskGroup / 1;\r\n\r\n        params.AlgoGroup = data.algoGroup / 1;\r\n\r\n        // params.AlgoProperty = this.record2.algoProperty;\r\n        params.UuserId = this.record2.uuserId / 1;\r\n        // console.log(this.record2);\r\n        // console.log(\"参数\", params);\r\n        //发送更新请求\r\n        http.post({\r\n            url: \"/user/updateUserInfo\",\r\n            data: params,\r\n        }).then((res) => {\r\n            console.log(res);\r\n            let msg = res.message;\r\n            if (res.code == 0) {\r\n                message.success(msg);\r\n                this.getData(this.searchParam, this.state.pagination);\r\n            } else if (res.code == 20000) {\r\n                message.error(\r\n                    msg.substring(msg.indexOf(\"[\") + 1, msg.lastIndexOf(\"]\"))\r\n                );\r\n            } else {\r\n                message.error(msg);\r\n            }\r\n            // this.isAction = true;\r\n        });\r\n        // this.updateUserRiskGroup(data);\r\n        this.setState({\r\n            updateModalVisible2: false,\r\n        });\r\n    };\r\n    handleUpdateModalCancel2 = () => {\r\n        this.setState({\r\n            updateModalVisible2: false,\r\n        });\r\n    };\r\n    //删除记录\r\n    handleDeleteRecord = (record) => {\r\n        console.log(\"删除记录 \", record);\r\n    };\r\n    inputChange = (e) => {\r\n        // console.log(e);\r\n        // let val = e.target.value;\r\n        let val = e;\r\n        // if (this.inputTimeout) {\r\n        //     clearTimeout(this.inputTimeout);\r\n        // }\r\n        // this.inputTimeout = setTimeout(() => {\r\n        //     this.getRiskGroup(val);\r\n        // }, 1000);\r\n        this.getRiskGroup(val);\r\n    };\r\n    //算法风控组 改变\r\n    algoSelectChange = (e) => {\r\n        // console.log(e);\r\n        let val = e;\r\n        this.getAlgoGroupById(val);\r\n    };\r\n    algoChange = (str) => {\r\n        // console.log(str);\r\n        let newAlgoArr = Object.assign([], this.state.algoList);\r\n        newAlgoArr.forEach((item) => (item.isShow = \"否\"));\r\n        // console.log(\"0x\" + e.target.value);\r\n        // console.log(isNaN(\"0x\" + e.target.value));\r\n        if (!isNaN(\"0x\" + str)) {\r\n            let val = BigInt(\"0x\" + str);\r\n            let bin = val.toString(2);\r\n            // console.log(bin);\r\n            let showArr = bin\r\n                .toString()\r\n                .split(\"\")\r\n                .reverse()\r\n                .map((item) => (item == \"1\" ? \"是\" : \"否\"));\r\n            let showLen = showArr.length;\r\n            let algoLen = this.state.algoList.length;\r\n            let minLen = Math.min(showLen, algoLen);\r\n            for (let i = 0; i < minLen; i++) {\r\n                newAlgoArr[i].isShow = showArr[i];\r\n            }\r\n            this.setState({ algoList: newAlgoArr });\r\n        }\r\n    };\r\n\r\n    //获取所有操作人用户\r\n    getParentInfoList = (params = {}) => {\r\n        // return;\r\n        http.post({\r\n            url: \"/user/getParentInfo\",\r\n            data: params,\r\n        }).then((res) => {\r\n            if (res.data && res.data.length > 0) {\r\n                this.setState({\r\n                    parentInfoList: res.data,\r\n                });\r\n            }\r\n        });\r\n    };\r\n    //获取所有风控组\r\n    getAllRiskGroup = (params = {}) => {\r\n        // return;\r\n        http.post({\r\n            // url: \"/risk/queryRisk\",\r\n            url: \"/risk/riskList\",\r\n            data: params,\r\n        }).then((res) => {\r\n            // console.log(res);\r\n            let idArr = [];\r\n            if (res.data && res.data.length > 0) {\r\n                // RiskType: [{ key: \"1\", value: \"用户\" },{ key: \"2\", value: \"算法\" },\r\n                let dataArr = res.data.filter((item) => item.riskType == 1);\r\n                if (dataArr.length > 0) {\r\n                    idArr = dataArr.map((item) => {\r\n                        let obj = {};\r\n                        obj.key = item.id;\r\n                        obj.value = item.id;\r\n                        return obj;\r\n                    });\r\n                }\r\n            }\r\n            this.setState({\r\n                riskList: idArr,\r\n            });\r\n        });\r\n    };\r\n    //获取所有风控组\r\n    getAllAlgoGroup = () => {\r\n        // return;\r\n        http.get({\r\n            // url: \"/risk/queryRisk\",\r\n            url: \"/algo-group-info/algoList\",\r\n            // data: params,\r\n        }).then((res) => {\r\n            // console.log(\"算法风控组\",res);\r\n            let idArr = [];\r\n            if (res.data && res.data.length > 0) {\r\n                let dataArr = res.data;\r\n                idArr = dataArr.map((item) => {\r\n                    let obj = {};\r\n                    obj.key = item.id;\r\n                    obj.value = item.id;\r\n                    return obj;\r\n                });\r\n                parseDict(res.data);\r\n                // res.data.forEach((item) => (item.isShow = \"是\"));\r\n                // console.log(idArr);\r\n            }\r\n            // console.log(res.data);\r\n            this.setState({\r\n                algoSecList: idArr,\r\n            });\r\n        });\r\n    };\r\n    //获取所有算法\r\n    getAlgoList = () => {\r\n        // return;\r\n        http.get({\r\n            // url: \"/risk/queryRisk\",\r\n            url: \"/algo/listAll\",\r\n            // data: params,\r\n        }).then((res) => {\r\n            console.log(\"所有算法\", res);\r\n            let idArr = [];\r\n            if (res.data && res.data.length > 0) {\r\n                let dataArr = res.data;\r\n                idArr = dataArr.map((item) => {\r\n                    let obj = {};\r\n                    obj.key = item.id;\r\n                    obj.value = item.id;\r\n                    return obj;\r\n                });\r\n                parseDict(res.data);\r\n            }\r\n            this.setState({\r\n                algoList: res.data,\r\n            });\r\n        });\r\n    };\r\n    getAlgoGroupById = (gid, params = { pageId: 1, pageNum: 10000 }) => {\r\n        if (gid !== undefined) {\r\n            params.id = gid;\r\n        }\r\n        // return;\r\n        http.post({\r\n            // url: \"/risk/queryRisk\",\r\n            url: \"/algo-group-info/list\",\r\n            data: params,\r\n        }).then((res) => {\r\n            // console.log(\"getAlgoGroupById\", res);\r\n            let property = \"\";\r\n            if (res.data && res.data.records && res.data.records.length > 0) {\r\n                property = res.data.records[0].algoProperty;\r\n                this.algoChange(property);\r\n                this.props.form.setFieldsValue({\r\n                    algoProperty: property,\r\n                });\r\n            }\r\n        });\r\n    };\r\n    //修改用户风控组\r\n    updateUserRiskGroup = (data) => {\r\n        let params = {\r\n            userId: data.userId,\r\n            riskGroup: data.riskGroup / 1,\r\n        };\r\n        console.log(params);\r\n        // return;\r\n        http.post({\r\n            url: \"/risk/modifyUserRiskGroup\",\r\n            data: params,\r\n        }).then((res) => {\r\n            // console.log(res);\r\n            if (res.code == 0) {\r\n                message.success(res.message);\r\n                // showTip(this, res.message);\r\n                // this.isAction = true;\r\n                this.getData(this.searchParam, this.state.pagination);\r\n                // this.getData();\r\n            } else {\r\n                message.error(res.message);\r\n                this.isAction = true;\r\n            }\r\n        });\r\n    };\r\n    //查询用户风控配置\r\n    getRiskGroup = (id) => {\r\n        let params = {\r\n            id: id / 1,\r\n        };\r\n        // console.log(params);\r\n        http.post({\r\n            url: \"/risk/queryRiskConfig\",\r\n            data: params,\r\n        }).then((res) => {\r\n            console.log(res);\r\n            if (res.code != 0) {\r\n                message.error(\"查询风控配置组失败！\");\r\n                return;\r\n            }\r\n            let config = JSON.parse(res.data);\r\n            // this.setState({ userRiskConfig: config });\r\n            // console.log(config);\r\n            let enable = (config.RiskEnable / 1).toString(2).padStart(9, \"0\");\r\n            // let enableArr = enable.split(\"\");\r\n            let enableArr = enable.split(\"\").map((item) => item == 1);\r\n            // console.log(enableArr);\r\n            this.props.form.setFieldsValue({\r\n                // riskGroup: record.riskGroup + \"\",\r\n                byte0: enableArr[8],\r\n                byte1: enableArr[7],\r\n                byte2: enableArr[6],\r\n                byte3: enableArr[5],\r\n                byte4: enableArr[4],\r\n                byte5: enableArr[3],\r\n                byte6: enableArr[2],\r\n                byte7: enableArr[1],\r\n                byte8: enableArr[0],\r\n                // riskName: config.RiskName,\r\n                entrustItemThreshold: config.EntrustItemThreshold,\r\n                entrustItemLimit: config.EntrustItemLimit,\r\n                entrustSeconds: config.EntrustSeconds,\r\n                entrustTotalThreshold: config.EntrustTotalThreshold,\r\n                cancelEntrustItemThreshold: config.CancelEntrustItemThreshold,\r\n                cancelRatioLimit: config.CancelRatioLimit,\r\n                failedEntrustItemThreshold: config.FailedEntrustItemThreshold,\r\n                failedRatioLimit: config.FailedRatioLimit,\r\n                entrustExecEntrustItemThreshold:\r\n                    config.EntrustExecEntrustItemThreshold,\r\n                entrustExecRatioLimit: config.EntrustExecRatioLimit,\r\n                netBuyEntrustItemThreshold: config.NetBuyEntrustItemThreshold,\r\n                netBuyAmountLimit: config.NetBuyAmountLimit,\r\n                cancelItemLimit: config.CancelItemLimit,\r\n                cancelSeconds: config.CancelSeconds,\r\n                cancelGapSeconds: config.CancelGapSeconds,\r\n                tradeItemLimit: config.TradeItemLimit,\r\n                tradeSeconds: config.TradeSeconds,\r\n                tradeQtyLimit: config.TradeQtyLimit,\r\n                tradeAmountLimit: config.TradeAmountLimit,\r\n            });\r\n        });\r\n    };\r\n    getData = (params = {}, pagination = { current: 1, pageSize: 12 }) => {\r\n        params = {\r\n            ...params,\r\n            pageId: pagination.current,\r\n            pageNum: pagination.pageSize,\r\n        };\r\n        http.post({\r\n            // url: \"/option/assetInfo/selectList\",\r\n            url: \"/user/selectByCondition\",\r\n            data: params,\r\n        }).then((res) => {\r\n            // console.log(res);\r\n            //解析数据字典\r\n            if (res.data.records && res.data.records.length > 0) {\r\n                let userList = res.data.records;\r\n                userList.forEach((item) => {\r\n                    item.parentName = \"\";\r\n                    let parentNameList = [];\r\n                    if (item.parentInfos.length) {\r\n                        item.parentInfos.forEach((sonItem) => {\r\n                            parentNameList.push(sonItem.muserName);\r\n                        });\r\n                        item.parentName = parentNameList.join(\"，\");\r\n                    }\r\n                });\r\n                parseDictValue(userList);\r\n            } else {\r\n                message.info(\"查询结果为空\");\r\n            }\r\n            let pgn = {\r\n                current: res.data.current,\r\n                pageSize: pagination.pageSize,\r\n                total: res.data.total || 0,\r\n            };\r\n            this.setState({\r\n                info: res.data.records,\r\n                pagination: pgn,\r\n            });\r\n        });\r\n    };\r\n    handleSearch = (params, pagination) => {\r\n        this.searchParam = params;\r\n        this.getData(params, pagination);\r\n    };\r\n    handleDownload = () => {\r\n        window.location.href = window.baseURL + \"/user/download\";\r\n    };\r\n    componentDidMount() {\r\n        this.getData();\r\n        this.getAllRiskGroup();\r\n        this.getAllAlgoGroup();\r\n        this.getAlgoList();\r\n        this.getParentInfoList();\r\n    }\r\n    render() {\r\n        let scroll = { x: 1000, y: 445 };\r\n        let info = this.state.info;\r\n        //批量\r\n        // let { selectRow } = this.state;\r\n        // const rowSelection = {\r\n        //     selectRow,\r\n        //     onChange: this.handleTableChange,\r\n        // };\r\n        let { getFieldDecorator } = this.props.form;\r\n        let scroll2 = { x: 1000, y: 450 };\r\n        return (\r\n            <div className={styles.userInfo}>\r\n                <CurdComponent\r\n                    pageSize={10}\r\n                    // rowKey={\"index\"}\r\n                    // isShowSearchForm={false}\r\n                    // btnText2=\"查全部\"\r\n                    onSearchClick={this.handleSearch}\r\n                    getSearchFormFields={this.getSearchFormFields}\r\n                    // searchLoading={this.state.searchLoading}\r\n                    insertBtnText={\"新增\"} // 不传 就没新增按钮\r\n                    getInsertFormFields={this.getInsertFormFields}\r\n                    insertRecord={this.handleInsertRecord}\r\n                    // col=\"2\"\r\n                    width=\"600px\"\r\n                    pagination={this.state.pagination}\r\n                    getUpdateFormFields={this.getUpdateFormFields}\r\n                    setUpdateModal={this.setUpdateModal}\r\n                    updateRecord={this.handleUpdateRecord} // 不传 就没编辑\r\n                    // deleteRecord={this.handleDeleteRecord} // 不传 就没删除\r\n                    centered={true}\r\n                    columns={this.columns}\r\n                    dataSource={info}\r\n                    scroll={scroll}\r\n                    // rowSelection={rowSelection} //批量选择 操作\r\n                >\r\n                    <div\r\n                        urlPrefix=\"/user\"\r\n                        title=\"用户信息\"\r\n                        sucCallback={this.getData}\r\n                    ></div>\r\n                </CurdComponent>\r\n\r\n                <Modal\r\n                    title={\"新增角色\"}\r\n                    visible={this.state.updateModalVisible}\r\n                    onOk={this.handleUpdateModalOk}\r\n                    onCancel={this.handleUpdateModalCancel}\r\n                    width={788}\r\n                    centered\r\n                >\r\n                    <Form layout={\"vertical\"}>\r\n                        <div>\r\n                            <div\r\n                                className={styles.rowFlex}\r\n                                style={{\r\n                                    position: \"relative\",\r\n                                }}\r\n                                id=\"area\"\r\n                            >\r\n                                <Form.Item label=\"用户ID\">\r\n                                    {getFieldDecorator(\"userId\")(\r\n                                        <Input placeholder=\"请输入\" disabled />\r\n                                    )}\r\n                                </Form.Item>\r\n                                <div style={{ width: 60 }}></div>\r\n                                <Form.Item\r\n                                    // className={styles.marLose14}\r\n                                    label={\r\n                                        <label title=\"请输入已配置成功的风控组,否则风控组不能修改成功!\">\r\n                                            修改风控组\r\n                                        </label>\r\n                                    }\r\n                                >\r\n                                    {getFieldDecorator(\"riskGroup\", {\r\n                                        rules: [\r\n                                            {\r\n                                                required: true,\r\n                                                message: \"请输入\",\r\n                                            },\r\n                                        ],\r\n                                    })(\r\n                                        <Input\r\n                                            placeholder=\"\"\r\n                                            onChange={this.inputChange}\r\n                                        />\r\n                                    )}\r\n                                </Form.Item>\r\n                            </div>\r\n                        </div>\r\n                        <div>\r\n                            <div className={styles.tit}>\r\n                                <div className={styles.text}>权限</div>\r\n                            </div>\r\n                        </div>\r\n                        <div></div>\r\n                    </Form>\r\n                </Modal>\r\n                <Modal\r\n                    title={\"修改算法权限组\"}\r\n                    visible={this.state.updateModalVisible2}\r\n                    onOk={this.handleUpdateModalOk2}\r\n                    onCancel={this.handleUpdateModalCancel2}\r\n                    width={1288}\r\n                    centered\r\n                >\r\n                    <Form\r\n                        layout={\"vertical\"}\r\n                        style={{ maxHeight: \"690px\", overflow: \"hidden\" }}\r\n                    >\r\n                        <div>\r\n                            <div\r\n                                className={styles.rowFlex}\r\n                                style={{\r\n                                    position: \"relative\",\r\n                                }}\r\n                                id=\"algo1\"\r\n                            >\r\n                                <Form.Item label=\"用户ID\">\r\n                                    {getFieldDecorator(\"userId\")(\r\n                                        <Input placeholder=\"请输入\" disabled />\r\n                                    )}\r\n                                </Form.Item>\r\n                                <div style={{ width: 60 }}></div>\r\n                                <Form.Item\r\n                                    // className={styles.marLose14}\r\n                                    label={\r\n                                        <label title=\"请输入已配置成功的风控组,否则风控组不能修改成功!\">\r\n                                            修改算法风控组\r\n                                        </label>\r\n                                    }\r\n                                >\r\n                                    {getFieldDecorator(\"algoGroup\", {\r\n                                        rules: [\r\n                                            {\r\n                                                required: true,\r\n                                                message: \"请输入\",\r\n                                            },\r\n                                        ],\r\n                                    })(\r\n                                        SelectOption(this.state.algoSecList, {\r\n                                            placeholder: \"请选择\",\r\n                                            onChange: this.algoSelectChange,\r\n                                            getPopupContainer: () =>\r\n                                                document.getElementById(\r\n                                                    \"algo1\"\r\n                                                ),\r\n                                        })\r\n                                        // <Input\r\n                                        //     placeholder=\"\"\r\n                                        //     onChange={this.inputChange}\r\n                                        // />\r\n                                    )}\r\n                                </Form.Item>\r\n                            </div>\r\n                        </div>\r\n                        <div\r\n                            className={styles.rowFlex}\r\n                            style={{\r\n                                position: \"relative\",\r\n                            }}\r\n                        >\r\n                            <Form.Item label=\"算法权限\">\r\n                                {getFieldDecorator(\"algoProperty\")(\r\n                                    <Input placeholder=\"请输入\" disabled />\r\n                                )}\r\n                            </Form.Item>\r\n                        </div>\r\n                        <div>\r\n                            <Table\r\n                                rowKey={\"id\"}\r\n                                columns={this.columns2()}\r\n                                dataSource={this.state.algoList}\r\n                                scroll={scroll2}\r\n                                size=\"small\"\r\n                                // rowSelection={rowSelection}\r\n                                // handlePagination={this.handlePagination}\r\n                                // pagination={this.props.pagination}\r\n                                pagination={false}\r\n                                // pagaSize={pagaSize}\r\n                                // onDoubleClick={this.onDoubleClick}\r\n                                // showDetail={dtColumns.length > 0}\r\n                            ></Table>\r\n                        </div>\r\n                    </Form>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Form.create()(userInfo);\r\n"]},"metadata":{},"sourceType":"module"}