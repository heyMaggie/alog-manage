{"ast":null,"code":"import _classCallCheck from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport \"antd/lib/time-picker/style\";\nimport _TimePicker from \"antd/lib/time-picker\";\nimport \"antd/lib/input/style\";\nimport _Input from \"antd/lib/input\";\nvar _jsxFileName = \"D:\\\\company\\\\algo-manage\\\\src\\\\algo\\\\modules\\\\algostatis\\\\pages\\\\algoStatis\\\\index.js\";\nimport React from \"react\";\nimport CurdComponent from \"@/components/CurdComponent\"; // import SelectOption from \"@/components/SelectOption\";\n\nvar getSearchFormFields = function getSearchFormFields() {\n  return [{\n    label: \"证券帐户\",\n    id: \"accountId\",\n    // initialValue: \"\",\n    component: React.createElement(_Input, {\n      placeholder: \"\\u8BF7\\u8F93\\u5165\\u8BC1\\u5238\\u5E10\\u6237\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    })\n  }, {\n    label: \"证券代码\",\n    id: \"securityId\",\n    // initialValue: \"\",\n    component: React.createElement(_Input, {\n      placeholder: \"\\u8BF7\\u8F93\\u5165\\u8BC1\\u5238\\u4EE3\\u7801\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    })\n  }, {\n    label: \"开始时间\",\n    id: \"startTime\",\n    component: React.createElement(_TimePicker, {\n      placeholder: \"\\u8BF7\\u8F93\\u5165\\u5F00\\u59CB\\u65F6\\u95F4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    })\n  }, {\n    label: \"结束时间\",\n    id: \"endTime\",\n    component: React.createElement(_TimePicker, {\n      placeholder: \"\\u8BF7\\u8F93\\u5165\\u7ED3\\u675F\\u65F6\\u95F4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    })\n  }];\n};\n\nvar columns = function columns() {\n  return [{\n    title: \"用户ID\",\n    dataIndex: \"uuserId\",\n    key: \"uuserId\",\n    width: 80\n  }, {\n    title: \"证券帐户\",\n    dataIndex: \"accountId\",\n    key: \"accountId\",\n    width: 120\n  }, {\n    title: \"证券代码\",\n    dataIndex: \"securityId\",\n    key: \"securityId\",\n    width: 100\n  }, {\n    title: \"证券代码源\",\n    dataIndex: \"securityIdSource\",\n    key: \"securityIdSource\",\n    width: 120\n  }, {\n    title: \"持仓类型\",\n    dataIndex: \"positionType\",\n    key: \"positionType\",\n    width: 100\n  }, {\n    title: \"持仓数量\",\n    dataIndex: \"positionQty\",\n    key: \"positionQty\",\n    width: 100\n  }, {\n    title: \"当前开盘前的原始仓位数量\",\n    dataIndex: \"originQty\",\n    width: 200\n  }, {\n    title: \"当天前的原始持仓的平均开仓价格00\",\n    dataIndex: \"originOpenPrice\",\n    width: 250\n  }, {\n    title: \"可卖数量\",\n    dataIndex: \"freeQty\",\n    key: \"freeQty\",\n    width: 100\n  }, {\n    title: \"冻结数量\",\n    dataIndex: \"frozenQty\",\n    key: \"frozenQty\",\n    width: 100\n  }, {\n    title: \"平均价格00\",\n    dataIndex: \"price\",\n    width: 100\n  }, {\n    title: \"盈亏\",\n    dataIndex: \"profitAndLoss\",\n    key: \"profitAndLoss\",\n    width: 100\n  }, {\n    title: \"收益率\",\n    dataIndex: \"profitRate\",\n    key: \"profitRate\",\n    width: 100\n  }, {\n    title: \"版本号\",\n    dataIndex: \"version\",\n    width: 120\n  }, {\n    title: \"更新时间\",\n    dataIndex: \"updateTime\",\n    key: \"updateTime\",\n    width: 150\n  }];\n};\n\nvar Cccx =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(Cccx, _React$PureComponent);\n\n  function Cccx() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Cccx);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Cccx)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      searchLoading: false,\n      info: [],\n      pagination: {\n        total: 0\n      }\n    };\n\n    _this.handleSearch = function (params, pagination) {\n      // console.log(\"获取搜索栏数据 \", params);\n      _this.getData(params, pagination);\n    };\n\n    _this.getData = function (params) {\n      var pagination = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n        current: 1,\n        pageSize: 20\n      };\n      // console.log(pagination);\n      http.get({\n        url: \"/user-position/list\",\n        data: params\n      }).then(function (res) {\n        console.log(res); //解析数据字典\n\n        if (res.data.length > 0) {\n          parseDict(res.data);\n          showStip(_assertThisInitialized(_this));\n        } else {\n          message.info(\"查询结果为空\");\n        }\n\n        _this.setState({\n          info: res.data\n        });\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Cccx, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getData();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var scroll = {\n        x: 1200,\n        y: 445\n      };\n      var info = this.state.info;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, \" \", React.createElement(SearchForm // fields={this.getSearchFormFields()}\n      , {\n        fields: this.getSearchFormFields(),\n        onSearchClick: this.handleSearch,\n        insertBtnText: insertBtnText,\n        searchLoading: searchLoading,\n        pageId: this.pageId,\n        onReady: this.onSearchReady,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, !this.hasSearchSlot && insertBtnText && React.createElement(Button, {\n        type: \"primary\",\n        icon: \"plus\",\n        onClick: this.handleInsertBtn,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, insertBtnText), this.hasSearchSlot && React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, this.children))); // <CurdComponent\n      //     onSearchClick={this.handleSearch}\n      //     getSearchFormFields={getSearchFormFields}\n      //     searchLoading={this.state.searchLoading}\n      //     isShowInsert={false}\n      //     dataSource={info}\n      //     centered={true}\n      //     columns={columns}\n      //     scroll={scroll}\n      //     dtCol={2} //详情列数\n      // ></CurdComponent>\n    }\n  }]);\n\n  return Cccx;\n}(React.PureComponent);\n\nexport { Cccx as default };","map":{"version":3,"sources":["D:/company/algo-manage/src/algo/modules/algostatis/pages/algoStatis/index.js"],"names":["React","CurdComponent","getSearchFormFields","label","id","component","columns","title","dataIndex","key","width","Cccx","state","searchLoading","info","pagination","total","handleSearch","params","getData","current","pageSize","http","get","url","data","then","res","console","log","length","parseDict","showStip","message","setState","scroll","x","y","insertBtnText","pageId","onSearchReady","hasSearchSlot","handleInsertBtn","children","PureComponent"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Divider, Input, TimePicker } from \"antd\";\r\n\r\nimport CurdComponent from \"@/components/CurdComponent\";\r\n// import SelectOption from \"@/components/SelectOption\";\r\n\r\nconst getSearchFormFields = () => {\r\n    return [\r\n        {\r\n            label: \"证券帐户\",\r\n            id: \"accountId\",\r\n            // initialValue: \"\",\r\n            component: <Input placeholder=\"请输入证券帐户\" />,\r\n        },\r\n        {\r\n            label: \"证券代码\",\r\n            id: \"securityId\",\r\n            // initialValue: \"\",\r\n            component: <Input placeholder=\"请输入证券代码\" />,\r\n        },\r\n        {\r\n            label: \"开始时间\",\r\n            id: \"startTime\",\r\n            component: <TimePicker placeholder=\"请输入开始时间\" />,\r\n        },\r\n        {\r\n            label: \"结束时间\",\r\n            id: \"endTime\",\r\n            component: <TimePicker placeholder=\"请输入结束时间\" />,\r\n        },\r\n    ];\r\n};\r\nlet columns = () => {\r\n    return [\r\n        {\r\n            title: \"用户ID\",\r\n            dataIndex: \"uuserId\",\r\n            key: \"uuserId\",\r\n            width: 80,\r\n        },\r\n        {\r\n            title: \"证券帐户\",\r\n            dataIndex: \"accountId\",\r\n            key: \"accountId\",\r\n            width: 120,\r\n        },\r\n        {\r\n            title: \"证券代码\",\r\n            dataIndex: \"securityId\",\r\n            key: \"securityId\",\r\n            width: 100,\r\n        },\r\n        {\r\n            title: \"证券代码源\",\r\n            dataIndex: \"securityIdSource\",\r\n            key: \"securityIdSource\",\r\n            width: 120,\r\n        },\r\n        {\r\n            title: \"持仓类型\",\r\n            dataIndex: \"positionType\",\r\n            key: \"positionType\",\r\n            width: 100,\r\n        },\r\n        {\r\n            title: \"持仓数量\",\r\n            dataIndex: \"positionQty\",\r\n            key: \"positionQty\",\r\n            width: 100,\r\n        },\r\n        {\r\n            title: \"当前开盘前的原始仓位数量\",\r\n            dataIndex: \"originQty\",\r\n            width: 200,\r\n        },\r\n        {\r\n            title: \"当天前的原始持仓的平均开仓价格00\",\r\n            dataIndex: \"originOpenPrice\",\r\n            width: 250,\r\n        },\r\n        {\r\n            title: \"可卖数量\",\r\n            dataIndex: \"freeQty\",\r\n            key: \"freeQty\",\r\n            width: 100,\r\n        },\r\n        {\r\n            title: \"冻结数量\",\r\n            dataIndex: \"frozenQty\",\r\n            key: \"frozenQty\",\r\n            width: 100,\r\n        },\r\n        {\r\n            title: \"平均价格00\",\r\n            dataIndex: \"price\",\r\n            width: 100,\r\n        },\r\n        {\r\n            title: \"盈亏\",\r\n            dataIndex: \"profitAndLoss\",\r\n            key: \"profitAndLoss\",\r\n            width: 100,\r\n        },\r\n        {\r\n            title: \"收益率\",\r\n            dataIndex: \"profitRate\",\r\n            key: \"profitRate\",\r\n            width: 100,\r\n        },\r\n        {\r\n            title: \"版本号\",\r\n            dataIndex: \"version\",\r\n            width: 120,\r\n        },\r\n        {\r\n            title: \"更新时间\",\r\n            dataIndex: \"updateTime\",\r\n            key: \"updateTime\",\r\n            width: 150,\r\n        },\r\n    ];\r\n};\r\nexport default class Cccx extends React.PureComponent {\r\n    state = {\r\n        searchLoading: false,\r\n        info: [],\r\n        pagination: { total: 0 },\r\n    };\r\n    handleSearch = (params, pagination) => {\r\n        // console.log(\"获取搜索栏数据 \", params);\r\n        this.getData(params, pagination);\r\n    };\r\n    getData = (params, pagination = { current: 1, pageSize: 20 }) => {\r\n        // console.log(pagination);\r\n        http.get({\r\n            url: \"/user-position/list\",\r\n            data: params,\r\n        }).then((res) => {\r\n            console.log(res);\r\n            //解析数据字典\r\n            if (res.data.length > 0) {\r\n                parseDict(res.data);\r\n                showStip(this);\r\n            } else {\r\n                message.info(\"查询结果为空\");\r\n            }\r\n            this.setState({\r\n                info: res.data,\r\n            });\r\n        });\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.getData();\r\n    }\r\n    render() {\r\n        let scroll = { x: 1200, y: 445 };\r\n        let info = this.state.info;\r\n        return (\r\n            <div>\r\n                {\" \"}\r\n                <SearchForm\r\n                    // fields={this.getSearchFormFields()}\r\n                    fields={this.getSearchFormFields()}\r\n                    onSearchClick={this.handleSearch}\r\n                    insertBtnText={insertBtnText}\r\n                    searchLoading={searchLoading}\r\n                    pageId={this.pageId}\r\n                    onReady={this.onSearchReady}\r\n                >\r\n                    {!this.hasSearchSlot && insertBtnText && (\r\n                        <Button\r\n                            type=\"primary\"\r\n                            icon=\"plus\"\r\n                            onClick={this.handleInsertBtn}\r\n                        >\r\n                            {insertBtnText}\r\n                        </Button>\r\n                    )}\r\n                    {this.hasSearchSlot && (\r\n                        <React.Fragment>{this.children}</React.Fragment>\r\n                    )}\r\n                </SearchForm>\r\n            </div>\r\n        );\r\n\r\n        // <CurdComponent\r\n        //     onSearchClick={this.handleSearch}\r\n        //     getSearchFormFields={getSearchFormFields}\r\n        //     searchLoading={this.state.searchLoading}\r\n        //     isShowInsert={false}\r\n        //     dataSource={info}\r\n        //     centered={true}\r\n        //     columns={columns}\r\n        //     scroll={scroll}\r\n        //     dtCol={2} //详情列数\r\n        // ></CurdComponent>\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}