{"ast":null,"code":"import _toConsumableArray from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\n// import routes from \"@/config/routes.js\";\nvar RouterInitialState = {\n  path: sessionStorage.currentPath ? sessionStorage.currentPath : null,\n  module: null,\n  title: null,\n  matchedRoutes: null,\n  query: null,\n  params: null,\n  tabs: sessionStorage.tabs ? JSON.parse(sessionStorage.tabs) : [],\n  // currentTab: sessionStorage.currentPath ? sessionStorage.currentPath : null,\n  routes: window.routes,\n  // tabs: [],\n  currentTab: null,\n  // routes: null,\n  currentTabKey: null,\n  currentTabQuery: null,\n  history: {},\n  tabReloading: false,\n  //刷新\n  activeMenu: sessionStorage.activeMenu ? JSON.parse(sessionStorage.activeMenu) : null\n};\nvar ENTER_ROUTE = \"ENTER_ROUTE\";\nvar SET_TITLE = \"SET_TITLE\";\nvar CHANGE_TAB = \"CHANGE_TAB\"; // const STORE_ROUTES = \"STORE_ROUTES\";\n\nvar PUSH_TAB = \"PUSH_TAB\";\nvar POP_TAB = \"POP_TAB\";\nvar POP_OTHER_TAB = \"POP_OTHER_TAB\";\nvar POP_LEFT_TAB = \"POP_LEFT_TAB\";\nvar POP_RIGHT_TAB = \"POP_RIGHT_TAB\"; //刷新\n\nvar RElOAD_TAB = \"RElOAD_TAB\";\nvar FINISH_RElOAD = \"FINISH_RElOAD\"; //获取 当前菜单\n\nvar getActiveMenu = function getActiveMenu(roleAuth, path) {\n  // console.log(\"getActiveMenu \", roleAuth);\n  for (var i = 0; i < roleAuth.length; i++) {\n    var lv1 = roleAuth[i];\n\n    if (lv1.children) {\n      for (var j = 0; j < lv1.children.length; j++) {\n        var lv2 = lv1.children[j]; // console.log(lv2);\n\n        if (lv2.path == path) {\n          // console.log(\"当前菜单 \", lv2);\n          sessionStorage.activeMenu = JSON.stringify(lv2);\n          return lv2;\n        }\n      }\n    }\n  }\n};\n\nvar RouterModel = function RouterModel() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : RouterInitialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  // console.log(state);\n  // console.log(action);\n  switch (action.type) {\n    case ENTER_ROUTE:\n      var _action$payload = action.payload,\n          path = _action$payload.path,\n          routes = _action$payload.routes;\n      var menus = sessionStorage.activeMenus;\n\n      if (!menus) {\n        menus = [];\n      } else {\n        menus = JSON.parse(menus);\n      } // console.log(menus);\n\n\n      var activeMenu = getActiveMenu(menus, path); // console.log(activeMenu);\n\n      var obj = {};\n\n      if (activeMenu) {\n        obj.activeMenu = activeMenu;\n      } // console.log(\"obj \", obj);\n\n\n      if (state.tabs.includes(path)) {\n        // console.log(\"已经有了\");\n        return Object.assign({}, state, {\n          path: path\n        }, obj);\n      } else {\n        if (state.routes) {\n          return Object.assign({}, state, {\n            path: path,\n            tabs: [].concat(_toConsumableArray(state.tabs), [path])\n          }, obj);\n        } else {\n          return Object.assign({}, state, {\n            path: path,\n            tabs: [].concat(_toConsumableArray(state.tabs), [path]),\n            routes: routes\n          }, obj);\n        }\n      }\n\n      return state;\n\n    case RElOAD_TAB:\n      return Object.assign({}, state, {\n        tabReloading: true\n      });\n\n    case FINISH_RElOAD:\n      return Object.assign({}, state, {\n        tabReloading: false\n      });\n\n    case CHANGE_TAB:\n      //改变tabs\n      return Object.assign({}, state, {\n        path: action.payload\n      });\n\n    case PUSH_TAB:\n      return state;\n\n    case POP_TAB:\n      var tabs = _toConsumableArray(state.tabs); //  action.payload ： 要删除的tab\n\n\n      var index = tabs.indexOf(action.payload); //currentPath：当前激活的tab\n\n      var currentPath = state.path; // console.log(\"当前激活的tab: \", currentPath);\n\n      if (index > -1) {\n        //删除tab\n        tabs.splice(index, 1); //改变 激活的tab\n\n        if (action.payload == currentPath) {\n          var lastIndex = index - 1;\n\n          if (lastIndex >= 0) {\n            currentPath = tabs[lastIndex];\n          } else {\n            currentPath = tabs[0];\n          }\n        }\n      }\n\n      return Object.assign({}, state, {\n        path: currentPath,\n        tabs: tabs\n      });\n\n    case POP_OTHER_TAB:\n      var tabs = _toConsumableArray(state.tabs); //要删除除 所选tab 之外的tab\n\n\n      var newArr = tabs.filter(function (item) {\n        return item == action.payload;\n      }); // console.log(\"tabs\", tabs, action.payload);\n      // console.log(\"newArr \", newArr);\n\n      if (newArr.length == 0) {\n        return state;\n      }\n\n      return Object.assign({}, state, {\n        path: action.payload,\n        tabs: newArr\n      });\n\n    case POP_LEFT_TAB:\n      var tabs = _toConsumableArray(state.tabs);\n\n      var index = tabs.indexOf(action.payload); //要删除除 所选tab 左边的tab\n\n      var newArr = tabs.filter(function (item, idx) {\n        return idx >= index;\n      });\n      var nowIndex = tabs.indexOf(state.path);\n\n      if (nowIndex < index) {\n        return Object.assign({}, state, {\n          path: action.payload,\n          tabs: newArr\n        });\n      } else {\n        return Object.assign({}, state, {\n          tabs: newArr\n        });\n      }\n\n    case POP_RIGHT_TAB:\n      var tabs = _toConsumableArray(state.tabs);\n\n      var index = tabs.indexOf(action.payload); //要删除除 所选tab 右边的tab\n\n      var newArr = tabs.filter(function (item, idx) {\n        return idx <= index;\n      });\n      var nowIndex = tabs.indexOf(state.path);\n\n      if (nowIndex > index) {\n        return Object.assign({}, state, {\n          path: action.payload,\n          tabs: newArr\n        });\n      } else {\n        return Object.assign({}, state, {\n          tabs: newArr\n        });\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default RouterModel;","map":{"version":3,"sources":["D:/company/algo-manage/src/store/modules/RouterModel.js"],"names":["RouterInitialState","path","sessionStorage","currentPath","module","title","matchedRoutes","query","params","tabs","JSON","parse","routes","window","currentTab","currentTabKey","currentTabQuery","history","tabReloading","activeMenu","ENTER_ROUTE","SET_TITLE","CHANGE_TAB","PUSH_TAB","POP_TAB","POP_OTHER_TAB","POP_LEFT_TAB","POP_RIGHT_TAB","RElOAD_TAB","FINISH_RElOAD","getActiveMenu","roleAuth","i","length","lv1","children","j","lv2","stringify","RouterModel","state","action","type","payload","menus","activeMenus","obj","includes","Object","assign","index","indexOf","splice","lastIndex","newArr","filter","item","idx","nowIndex"],"mappings":"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","sourcesContent":["// import routes from \"@/config/routes.js\";\r\n\r\nconst RouterInitialState = {\r\n    path: sessionStorage.currentPath ? sessionStorage.currentPath : null,\r\n    module: null,\r\n    title: null,\r\n    matchedRoutes: null,\r\n    query: null,\r\n    params: null,\r\n\r\n    tabs: sessionStorage.tabs ? JSON.parse(sessionStorage.tabs) : [],\r\n    // currentTab: sessionStorage.currentPath ? sessionStorage.currentPath : null,\r\n    routes: window.routes,\r\n\r\n    // tabs: [],\r\n    currentTab: null,\r\n    // routes: null,\r\n    currentTabKey: null,\r\n    currentTabQuery: null,\r\n    history: {},\r\n    tabReloading: false, //刷新\r\n    activeMenu: sessionStorage.activeMenu\r\n        ? JSON.parse(sessionStorage.activeMenu)\r\n        : null,\r\n};\r\n\r\nconst ENTER_ROUTE = \"ENTER_ROUTE\";\r\nconst SET_TITLE = \"SET_TITLE\";\r\nconst CHANGE_TAB = \"CHANGE_TAB\";\r\n// const STORE_ROUTES = \"STORE_ROUTES\";\r\nconst PUSH_TAB = \"PUSH_TAB\";\r\nconst POP_TAB = \"POP_TAB\";\r\nconst POP_OTHER_TAB = \"POP_OTHER_TAB\";\r\nconst POP_LEFT_TAB = \"POP_LEFT_TAB\";\r\nconst POP_RIGHT_TAB = \"POP_RIGHT_TAB\";\r\n//刷新\r\nconst RElOAD_TAB = \"RElOAD_TAB\";\r\nconst FINISH_RElOAD = \"FINISH_RElOAD\";\r\n\r\n//获取 当前菜单\r\nlet getActiveMenu = (roleAuth, path) => {\r\n    // console.log(\"getActiveMenu \", roleAuth);\r\n    for (let i = 0; i < roleAuth.length; i++) {\r\n        let lv1 = roleAuth[i];\r\n        if (lv1.children) {\r\n            for (let j = 0; j < lv1.children.length; j++) {\r\n                let lv2 = lv1.children[j];\r\n                // console.log(lv2);\r\n                if (lv2.path == path) {\r\n                    // console.log(\"当前菜单 \", lv2);\r\n                    sessionStorage.activeMenu = JSON.stringify(lv2);\r\n                    return lv2;\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\nconst RouterModel = (state = RouterInitialState, action) => {\r\n    // console.log(state);\r\n    // console.log(action);\r\n    switch (action.type) {\r\n        case ENTER_ROUTE:\r\n            let { path, routes } = action.payload;\r\n            let menus = sessionStorage.activeMenus;\r\n            if (!menus) {\r\n                menus = [];\r\n            } else {\r\n                menus = JSON.parse(menus);\r\n            }\r\n            // console.log(menus);\r\n            let activeMenu = getActiveMenu(menus, path);\r\n            // console.log(activeMenu);\r\n            let obj = {};\r\n            if (activeMenu) {\r\n                obj.activeMenu = activeMenu;\r\n            }\r\n            // console.log(\"obj \", obj);\r\n            if (state.tabs.includes(path)) {\r\n                // console.log(\"已经有了\");\r\n                return Object.assign(\r\n                    {},\r\n                    state,\r\n                    {\r\n                        path,\r\n                    },\r\n                    obj\r\n                );\r\n            } else {\r\n                if (state.routes) {\r\n                    return Object.assign(\r\n                        {},\r\n                        state,\r\n                        {\r\n                            path,\r\n                            tabs: [...state.tabs, path],\r\n                        },\r\n                        obj\r\n                    );\r\n                } else {\r\n                    return Object.assign(\r\n                        {},\r\n                        state,\r\n                        {\r\n                            path,\r\n                            tabs: [...state.tabs, path],\r\n                            routes,\r\n                        },\r\n                        obj\r\n                    );\r\n                }\r\n            }\r\n            return state;\r\n        case RElOAD_TAB:\r\n            return Object.assign({}, state, {\r\n                tabReloading: true,\r\n            });\r\n        case FINISH_RElOAD:\r\n            return Object.assign({}, state, {\r\n                tabReloading: false,\r\n            });\r\n        case CHANGE_TAB: //改变tabs\r\n            return Object.assign({}, state, {\r\n                path: action.payload,\r\n            });\r\n        case PUSH_TAB:\r\n            return state;\r\n        case POP_TAB:\r\n            var tabs = [...state.tabs];\r\n            //  action.payload ： 要删除的tab\r\n            var index = tabs.indexOf(action.payload);\r\n            //currentPath：当前激活的tab\r\n            var currentPath = state.path;\r\n            // console.log(\"当前激活的tab: \", currentPath);\r\n            if (index > -1) {\r\n                //删除tab\r\n                tabs.splice(index, 1);\r\n                //改变 激活的tab\r\n                if (action.payload == currentPath) {\r\n                    let lastIndex = index - 1;\r\n                    if (lastIndex >= 0) {\r\n                        currentPath = tabs[lastIndex];\r\n                    } else {\r\n                        currentPath = tabs[0];\r\n                    }\r\n                }\r\n            }\r\n            return Object.assign({}, state, {\r\n                path: currentPath,\r\n                tabs: tabs,\r\n            });\r\n        case POP_OTHER_TAB:\r\n            var tabs = [...state.tabs];\r\n            //要删除除 所选tab 之外的tab\r\n            var newArr = tabs.filter((item) => item == action.payload);\r\n            // console.log(\"tabs\", tabs, action.payload);\r\n            // console.log(\"newArr \", newArr);\r\n            if (newArr.length == 0) {\r\n                return state;\r\n            }\r\n            return Object.assign({}, state, {\r\n                path: action.payload,\r\n                tabs: newArr,\r\n            });\r\n        case POP_LEFT_TAB:\r\n            var tabs = [...state.tabs];\r\n            var index = tabs.indexOf(action.payload);\r\n            //要删除除 所选tab 左边的tab\r\n            var newArr = tabs.filter((item, idx) => idx >= index);\r\n            var nowIndex = tabs.indexOf(state.path);\r\n            if (nowIndex < index) {\r\n                return Object.assign({}, state, {\r\n                    path: action.payload,\r\n                    tabs: newArr,\r\n                });\r\n            } else {\r\n                return Object.assign({}, state, {\r\n                    tabs: newArr,\r\n                });\r\n            }\r\n        case POP_RIGHT_TAB:\r\n            var tabs = [...state.tabs];\r\n            var index = tabs.indexOf(action.payload);\r\n            //要删除除 所选tab 右边的tab\r\n            var newArr = tabs.filter((item, idx) => idx <= index);\r\n            var nowIndex = tabs.indexOf(state.path);\r\n            if (nowIndex > index) {\r\n                return Object.assign({}, state, {\r\n                    path: action.payload,\r\n                    tabs: newArr,\r\n                });\r\n            } else {\r\n                return Object.assign({}, state, {\r\n                    tabs: newArr,\r\n                });\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\nexport default RouterModel;\r\n"]},"metadata":{},"sourceType":"module"}