{"ast":null,"code":"import _defineProperty from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport \"antd/lib/input/style\";\nimport _Input from \"antd/lib/input\";\nvar _jsxFileName = \"D:\\\\company\\\\algo-manage\\\\src\\\\algo\\\\modules\\\\oper_manage\\\\pages\\\\whitelist\\\\macType\\\\index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport CurdComponent from \"@/components/CurdComponent\";\nimport SelectOption from \"@/components/SelectOption\";\n\nvar columns = function columns(params) {\n  return [{\n    title: \"序号\",\n    dataIndex: \"id\",\n    key: \"id\"\n  }, {\n    title: \"用户名称\",\n    dataIndex: \"userName\",\n    key: \"userName\"\n  }, {\n    title: \"mac地址\",\n    dataIndex: \"mac\",\n    key: \"mac\"\n  }];\n};\n\nvar getSearchFormFields = function getSearchFormFields() {\n  return [{\n    label: \"用户名称\",\n    // label: <span>用户名称</span>,\n    id: \"userName\",\n    component: React.createElement(_Input, {\n      placeholder: \"\\u8BF7\\u8F93\\u5165\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    })\n  }, {\n    label: \"mac地址\",\n    id: \"mac\",\n    component: React.createElement(_Input, {\n      placeholder: \"\\u8BF7\\u8F93\\u5165mac\\u5730\\u5740\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    })\n  }];\n};\n\nvar macType =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(macType, _React$PureComponent);\n\n  function macType() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, macType);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(macType)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      searchLoading: false,\n      selectRow: [],\n      info: [],\n      pagination: {\n        total: 0\n      },\n      current: 1,\n      userList: []\n    };\n\n    _this.getInsertFormFields = function () {\n      return [{\n        label: \"用户名称\",\n        id: \"userId\",\n        initialValue: \"\",\n        rules: [{\n          required: true,\n          message: \"参数不能为空\"\n        }, {\n          validator: checkLength(20),\n          trigger: [\"change\", \"blur\"]\n        }],\n        component: SelectOption(_this.state.userList, {\n          placeholder: \"请选择\",\n          allowClear: false,\n          style: {\n            width: 400\n          }\n        })\n      }, {\n        label: \"mac地址\",\n        id: \"mac\",\n        initialValue: \"\",\n        rules: [{\n          required: true,\n          message: \"参数不能为空\"\n        }, {\n          validator: checkLength(20),\n          trigger: [\"change\", \"blur\"]\n        }],\n        component: React.createElement(_Input, {\n          placeholder: \"\\u8BF7\\u8F93\\u5165mac\\u5730\\u5740\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        })\n      }];\n    };\n\n    _this.getUpdateFormFields = function () {\n      return [{\n        label: \"用户名称\",\n        id: \"userId\",\n        initialValue: \"\",\n        rules: [{\n          required: true,\n          message: \"参数不能为空\"\n        }, {\n          validator: checkLength(20),\n          trigger: [\"change\", \"blur\"]\n        }],\n        component: SelectOption(_this.state.userList, {\n          placeholder: \"请选择\",\n          allowClear: false,\n          style: {\n            width: 400\n          }\n        })\n      }, {\n        label: \"mac地址\",\n        id: \"mac\",\n        initialValue: \"\",\n        rules: [{\n          required: true,\n          message: \"参数不能为空\"\n        }, {\n          validator: checkLength(20),\n          trigger: [\"change\", \"blur\"]\n        }],\n        component: React.createElement(_Input, {\n          placeholder: \"\\u8BF7\\u8F93\\u5165mac\\u5730\\u5740\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129\n          },\n          __self: this\n        })\n      }];\n    };\n\n    _this.handleInsertRecord = function (fromData) {\n      console.log(\"新增接口\", fromData);\n      var params = {\n        mac: fromData.mac,\n        userId: fromData.userId\n      };\n      http.post({\n        url: \"/blacklist/addBlacklist\",\n        data: params\n      }).then(function (res) {\n        var msg = res.message;\n\n        if (res.code == 0) {\n          message.success(msg);\n\n          _this.getData();\n        } else if (res.code == 20000) {\n          message.error(msg.substring(msg.indexOf(\"[\") + 1, msg.lastIndexOf(\"]\")));\n        } else {\n          message.error(msg);\n        }\n\n        _this.isAction = true;\n      });\n    };\n\n    _this.handleUpdateRecord = function (_ref) {\n      var form = _ref.form;\n      console.log(form.getFieldsValue()); // return;\n\n      var fromData = form.getFieldsValue();\n      var params = {\n        id: _this.record.id,\n        mac: fromData.mac,\n        userId: fromData.userId\n      }; // 发送更新请求\n\n      http.post({\n        url: \"/blacklist/updateBlacklist\",\n        data: params\n      }).then(function (res) {\n        var msg = res.message;\n\n        if (res.code == 0) {\n          message.success(msg);\n\n          _this.getData();\n        } else if (res.code == 20000) {\n          message.error(msg.substring(msg.indexOf(\"[\") + 1, msg.lastIndexOf(\"]\")));\n        } else {\n          message.error(msg);\n        }\n\n        _this.isAction = true;\n      });\n    };\n\n    _this.handleDeleteRecord = function (record) {\n      console.log(\"删除记录 \", record);\n      var params = {\n        id: record.id\n      }; // 发送更新请求\n\n      http.post({\n        url: \"/blacklist/deleteBlacklist\",\n        data: params\n      }).then(function (res) {\n        var msg = res.message;\n\n        if (res.code == 0) {\n          message.success(msg);\n\n          _this.getData();\n        } else if (res.code == 20000) {\n          message.error(msg.substring(msg.indexOf(\"[\") + 1, msg.lastIndexOf(\"]\")));\n        } else {\n          message.error(msg);\n        }\n\n        _this.isAction = true;\n      });\n    };\n\n    _this.setUpdateModal = function (_ref2) {\n      var form = _ref2.form,\n          record = _ref2.record;\n      // console.log(record, form);\n      _this.record = record;\n      form.setFieldsValue({\n        mac: record.mac,\n        userId: record.userId\n      });\n    };\n\n    _this.getData = function () {\n      var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var pagination = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n        current: 1,\n        pageSize: 13\n      };\n      params = _objectSpread({}, params, {\n        pageId: pagination.current,\n        pageNum: pagination.pageSize\n      });\n      http.post({\n        url: \"/blacklist/queryMac\",\n        data: params\n      }).then(function (res) {\n        console.log(res); //解析数据字典\n\n        if (res.data.records && res.data.records.length > 0) {\n          //parseDict(res.data.records);\n          parseDictValue(res.data.records);\n        } else {\n          message.info(\"查询结果为空\");\n        }\n\n        var pgn = {\n          current: res.data.current,\n          pageSize: pagination.pageSize,\n          total: res.data.total || 0\n        };\n\n        _this.setState({\n          info: res.data.records,\n          pagination: pgn\n        });\n      });\n    };\n\n    _this.handleSearch = function (params, pagination) {\n      _this.getData(params, pagination);\n    };\n\n    _this.getUserSelectList = function () {\n      http.get({\n        url: \"/user/listAll\"\n      }).then(function (res) {\n        var idArr = [];\n\n        if (res.data && res.data.length) {\n          // RiskType: [{ key: \"1\", value: \"用户\" },{ key: \"2\", value: \"算法\" },\n          idArr = res.data.map(function (item) {\n            var obj = {};\n            obj.key = item.id;\n            obj.value = item.userName;\n            return obj;\n          });\n        }\n\n        _this.setState({\n          userList: idArr\n        });\n\n        console.log(_this.state.userList, \"userList\");\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(macType, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getData();\n      this.getUserSelectList();\n    }\n  }, {\n    key: \"handleClick\",\n    value: function handleClick() {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      var scroll = {\n        x: 1000,\n        y: 395\n      };\n      var info = this.state.info;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282\n        },\n        __self: this\n      }, React.createElement(CurdComponent // rowKey={\"index\"}\n      // isShowSearchForm={false}\n      // btnText2=\"查全部\"\n      , {\n        onSearchClick: this.handleSearch,\n        getSearchFormFields: getSearchFormFields // searchLoading={this.state.searchLoading}\n        ,\n        insertBtnText: \"新增\" // 不传 就没新增按钮\n        ,\n        getInsertFormFields: this.getInsertFormFields,\n        insertRecord: this.handleInsertRecord // col=\"2\"\n        ,\n        width: \"789px\",\n        pagination: this.state.pagination,\n        getUpdateFormFields: this.getUpdateFormFields,\n        setUpdateModal: this.setUpdateModal,\n        updateRecord: this.handleUpdateRecord // 不传 就没编辑\n        ,\n        deleteRecord: this.handleDeleteRecord // 不传 就没删除\n        ,\n        centered: true,\n        columns: columns,\n        dataSource: info,\n        scroll: scroll // rowSelection={rowSelection} //批量选择 操作\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        urlPrefix: \"/blacklist\",\n        title: \"\\u9ED1\\u540D\\u5355\",\n        sucCallback: this.getData,\n        noUpload: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return macType;\n}(React.PureComponent);\n\nexport { macType as default };","map":{"version":3,"sources":["D:/company/algo-manage/src/algo/modules/oper_manage/pages/whitelist/macType/index.js"],"names":["React","CurdComponent","SelectOption","columns","params","title","dataIndex","key","getSearchFormFields","label","id","component","macType","state","searchLoading","selectRow","info","pagination","total","current","userList","getInsertFormFields","initialValue","rules","required","message","validator","checkLength","trigger","placeholder","allowClear","style","width","getUpdateFormFields","handleInsertRecord","fromData","console","log","mac","userId","http","post","url","data","then","res","msg","code","success","getData","error","substring","indexOf","lastIndexOf","isAction","handleUpdateRecord","form","getFieldsValue","record","handleDeleteRecord","setUpdateModal","setFieldsValue","pageSize","pageId","pageNum","records","length","parseDictValue","pgn","setState","handleSearch","getUserSelectList","get","idArr","map","item","obj","value","userName","scroll","x","y","PureComponent"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport CurdComponent from \"@/components/CurdComponent\";\r\nimport SelectOption from \"@/components/SelectOption\";\r\nimport { Input } from \"antd\";\r\n\r\nconst columns = (params) => {\r\n    return [\r\n        {\r\n            title: \"序号\",\r\n            dataIndex: \"id\",\r\n            key: \"id\",\r\n        },\r\n        {\r\n            title: \"用户名称\",\r\n            dataIndex: \"userName\",\r\n            key: \"userName\",\r\n        },\r\n        {\r\n            title: \"mac地址\",\r\n            dataIndex: \"mac\",\r\n            key: \"mac\",\r\n        },\r\n    ];\r\n};\r\nlet getSearchFormFields = () => {\r\n    return [\r\n        {\r\n            label: \"用户名称\",\r\n            // label: <span>用户名称</span>,\r\n            id: \"userName\",\r\n            component: <Input placeholder=\"请输入\" />,\r\n        },\r\n        {\r\n            label: \"mac地址\",\r\n            id: \"mac\",\r\n            component: <Input placeholder=\"请输入mac地址\" />,\r\n        },\r\n    ];\r\n};\r\nexport default class macType extends React.PureComponent {\r\n    state = {\r\n        searchLoading: false,\r\n        selectRow: [],\r\n        info: [],\r\n        pagination: { total: 0 },\r\n        current: 1,\r\n        userList: [],\r\n    };\r\n    getInsertFormFields = () => {\r\n        return [\r\n            {\r\n                label: \"用户名称\",\r\n                id: \"userId\",\r\n                initialValue: \"\",\r\n                rules: [\r\n                    {\r\n                        required: true,\r\n                        message: \"参数不能为空\",\r\n                    },\r\n                    {\r\n                        validator: checkLength(20),\r\n                        trigger: [\"change\", \"blur\"],\r\n                    },\r\n                ],\r\n                component: SelectOption(this.state.userList, {\r\n                    placeholder: \"请选择\",\r\n                    allowClear: false,\r\n                    style: {\r\n                        width: 400,\r\n                    },\r\n                }),\r\n            },\r\n            {\r\n                label: \"mac地址\",\r\n                id: \"mac\",\r\n                initialValue: \"\",\r\n                rules: [\r\n                    {\r\n                        required: true,\r\n                        message: \"参数不能为空\",\r\n                    },\r\n                    {\r\n                        validator: checkLength(20),\r\n                        trigger: [\"change\", \"blur\"],\r\n                    },\r\n                ],\r\n                component: <Input placeholder=\"请输入mac地址\" />,\r\n            },\r\n        ];\r\n    };\r\n    getUpdateFormFields = () => {\r\n        return [\r\n            {\r\n                label: \"用户名称\",\r\n                id: \"userId\",\r\n                initialValue: \"\",\r\n                rules: [\r\n                    {\r\n                        required: true,\r\n                        message: \"参数不能为空\",\r\n                    },\r\n                    {\r\n                        validator: checkLength(20),\r\n                        trigger: [\"change\", \"blur\"],\r\n                    },\r\n                ],\r\n                component: SelectOption(this.state.userList, {\r\n                    placeholder: \"请选择\",\r\n                    allowClear: false,\r\n                    style: {\r\n                        width: 400,\r\n                    },\r\n                }),\r\n            },\r\n            {\r\n                label: \"mac地址\",\r\n                id: \"mac\",\r\n                initialValue: \"\",\r\n                rules: [\r\n                    {\r\n                        required: true,\r\n                        message: \"参数不能为空\",\r\n                    },\r\n                    {\r\n                        validator: checkLength(20),\r\n                        trigger: [\"change\", \"blur\"],\r\n                    },\r\n                ],\r\n                component: <Input placeholder=\"请输入mac地址\" />,\r\n            },\r\n        ];\r\n    };\r\n    //新增接口\r\n    handleInsertRecord = (fromData) => {\r\n        console.log(\"新增接口\", fromData);\r\n        let params = {\r\n            mac: fromData.mac,\r\n            userId: fromData.userId,\r\n        };\r\n        http.post({\r\n            url: \"/blacklist/addBlacklist\",\r\n            data: params,\r\n        }).then((res) => {\r\n            let msg = res.message;\r\n            if (res.code == 0) {\r\n                message.success(msg);\r\n                this.getData();\r\n            } else if (res.code == 20000) {\r\n                message.error(\r\n                    msg.substring(msg.indexOf(\"[\") + 1, msg.lastIndexOf(\"]\"))\r\n                );\r\n            } else {\r\n                message.error(msg);\r\n            }\r\n            this.isAction = true;\r\n        });\r\n    };\r\n    //更新记录\r\n    handleUpdateRecord = ({ form }) => {\r\n        console.log(form.getFieldsValue());\r\n        // return;\r\n        let fromData = form.getFieldsValue();\r\n        let params = {\r\n            id: this.record.id,\r\n            mac: fromData.mac,\r\n            userId: fromData.userId,\r\n        };\r\n        // 发送更新请求\r\n        http.post({\r\n            url: \"/blacklist/updateBlacklist\",\r\n            data: params,\r\n        }).then((res) => {\r\n            let msg = res.message;\r\n            if (res.code == 0) {\r\n                message.success(msg);\r\n                this.getData();\r\n            } else if (res.code == 20000) {\r\n                message.error(\r\n                    msg.substring(msg.indexOf(\"[\") + 1, msg.lastIndexOf(\"]\"))\r\n                );\r\n            } else {\r\n                message.error(msg);\r\n            }\r\n            this.isAction = true;\r\n        });\r\n    };\r\n    //删除记录\r\n    handleDeleteRecord = (record) => {\r\n        console.log(\"删除记录 \", record);\r\n        let params = {\r\n            id: record.id,\r\n        };\r\n        // 发送更新请求\r\n        http.post({\r\n            url: \"/blacklist/deleteBlacklist\",\r\n            data: params,\r\n        }).then((res) => {\r\n            let msg = res.message;\r\n            if (res.code == 0) {\r\n                message.success(msg);\r\n                this.getData();\r\n            } else if (res.code == 20000) {\r\n                message.error(\r\n                    msg.substring(msg.indexOf(\"[\") + 1, msg.lastIndexOf(\"]\"))\r\n                );\r\n            } else {\r\n                message.error(msg);\r\n            }\r\n            this.isAction = true;\r\n        });\r\n    };\r\n    //填入更新数据\r\n    setUpdateModal = ({ form, record }) => {\r\n        // console.log(record, form);\r\n        this.record = record;\r\n        form.setFieldsValue({\r\n            mac: record.mac,\r\n            userId: record.userId,\r\n        });\r\n    };\r\n    getData = (params = {}, pagination = { current: 1, pageSize: 13 }) => {\r\n        params = {\r\n            ...params,\r\n            pageId: pagination.current,\r\n            pageNum: pagination.pageSize,\r\n        };\r\n        http.post({\r\n            url: \"/blacklist/queryMac\",\r\n            data: params,\r\n        }).then((res) => {\r\n            console.log(res);\r\n            //解析数据字典\r\n            if (res.data.records && res.data.records.length > 0) {\r\n                //parseDict(res.data.records);\r\n                parseDictValue(res.data.records);\r\n            } else {\r\n                message.info(\"查询结果为空\");\r\n            }\r\n            let pgn = {\r\n                current: res.data.current,\r\n                pageSize: pagination.pageSize,\r\n                total: res.data.total || 0,\r\n            };\r\n            this.setState({\r\n                info: res.data.records,\r\n                pagination: pgn,\r\n            });\r\n        });\r\n    };\r\n    handleSearch = (params, pagination) => {\r\n        this.getData(params, pagination);\r\n    };\r\n    componentDidMount() {\r\n        this.getData();\r\n        this.getUserSelectList();\r\n    }\r\n    getUserSelectList = () => {\r\n        http.get({\r\n            url: \"/user/listAll\",\r\n        }).then((res) => {\r\n            let idArr = [];\r\n            if (res.data && res.data.length) {\r\n                // RiskType: [{ key: \"1\", value: \"用户\" },{ key: \"2\", value: \"算法\" },\r\n                idArr = res.data.map((item) => {\r\n                    let obj = {};\r\n                    obj.key = item.id;\r\n                    obj.value = item.userName;\r\n                    return obj;\r\n                });\r\n            }\r\n            this.setState({\r\n                userList: idArr,\r\n            });\r\n            console.log(this.state.userList, \"userList\");\r\n        });\r\n    };\r\n    handleClick() {}\r\n    render() {\r\n        let scroll = { x: 1000, y: 395 };\r\n        let info = this.state.info;\r\n        return (\r\n            <div>\r\n                <CurdComponent\r\n                    // rowKey={\"index\"}\r\n                    // isShowSearchForm={false}\r\n                    // btnText2=\"查全部\"\r\n                    onSearchClick={this.handleSearch}\r\n                    getSearchFormFields={getSearchFormFields}\r\n                    // searchLoading={this.state.searchLoading}\r\n                    insertBtnText={\"新增\"} // 不传 就没新增按钮\r\n                    getInsertFormFields={this.getInsertFormFields}\r\n                    insertRecord={this.handleInsertRecord}\r\n                    // col=\"2\"\r\n                    width=\"789px\"\r\n                    pagination={this.state.pagination}\r\n                    getUpdateFormFields={this.getUpdateFormFields}\r\n                    setUpdateModal={this.setUpdateModal}\r\n                    updateRecord={this.handleUpdateRecord} // 不传 就没编辑\r\n                    deleteRecord={this.handleDeleteRecord} // 不传 就没删除\r\n                    centered={true}\r\n                    columns={columns}\r\n                    dataSource={info}\r\n                    scroll={scroll}\r\n                    // rowSelection={rowSelection} //批量选择 操作\r\n                >\r\n                    <div\r\n                        urlPrefix=\"/blacklist\"\r\n                        title=\"黑名单\"\r\n                        sucCallback={this.getData}\r\n                        noUpload={true}\r\n                    ></div>\r\n                </CurdComponent>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}