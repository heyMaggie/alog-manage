{"ast":null,"code":"import \"antd/lib/modal/style\";\nimport _Modal from \"antd/lib/modal\";\nimport \"antd/lib/form/style\";\nimport _Form from \"antd/lib/form\";\nimport \"antd/lib/popover/style\";\nimport _Popover from \"antd/lib/popover\";\nimport \"antd/lib/icon/style\";\nimport _Icon from \"antd/lib/icon\";\nimport \"antd/lib/input/style\";\nimport _Input from \"antd/lib/input\";\nimport _classCallCheck from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\company\\\\algo-manage\\\\src\\\\components\\\\Header\\\\index.js\";\nimport React from \"react\";\nimport styles from \"./index.module.less\";\n// import { withRouter } from \"react-router-dom\";\n// import { connect } from \"react-redux\";\nimport md5 from \"js-md5\"; //全局引入\n\nvar Header =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(Header, _React$PureComponent);\n\n  function Header() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Header);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Header)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      updateModalVisible: false\n    };\n\n    _this.handleClick = function () {\n      sessionStorage.removeItem(\"isLogin\");\n\n      _this.props.history.push(\"/login\");\n\n      if (window.electron && window.electron.ipcRenderer) {\n        ipc.send(\"logout\");\n      }\n    };\n\n    _this.handleChangePwd = function () {\n      _this.setState({\n        updateModalVisible: true\n      });\n    };\n\n    _this.getUpdateFormFields = function () {\n      return [{\n        label: \"原密码\",\n        id: \"passwordOld\",\n        initialValue: \"\",\n        rules: [{\n          required: true,\n          message: \"参数不能为空\"\n        }],\n        component: React.createElement(_Input.Password, {\n          placeholder: \"\\u8BF7\\u8F93\\u5165\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        })\n      }, {\n        label: \"设置密码\",\n        id: \"password\",\n        initialValue: \"\",\n        rules: [{\n          required: true,\n          message: \"参数不能为空\"\n        }],\n        component: React.createElement(_Input.Password, {\n          placeholder: \"\\u8BF7\\u8F93\\u5165\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        })\n      }, {\n        label: \"确认密码\",\n        id: \"password2\",\n        initialValue: \"\",\n        rules: [{\n          required: true,\n          message: \"参数不能为空\"\n        }],\n        component: React.createElement(_Input.Password, {\n          placeholder: \"\\u8BF7\\u8F93\\u5165\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        })\n      }];\n    };\n\n    _this.handleUpdateModalOk = function () {\n      var formData = _this.props.form.getFieldsValue(); // console.log(\"更新记录\", formData);\n\n\n      _this.props.form.validateFields(function (err, values) {\n        if (!err) {\n          if (formData.password != formData.password2) {\n            message.error(\"密码与确认密码不一致\");\n            return;\n          }\n\n          if (formData.passwordOld) {\n            var _form = _this.props.form; // console.log(\"passwordOld\", formData.passwordOld);\n\n            _this.checkPassword(_form).then(function (res) {\n              if (res.code == 200) {\n                // console.log(\"checkPassword 成功\");\n                _this.updateUser(_form);\n              } else {\n                message.error(\"原密码校验失败\");\n              }\n            });\n          } else {\n            _this.updateUser(form);\n          }\n        }\n      });\n    };\n\n    _this.checkPassword = function (form) {\n      var formData = form.getFieldsValue();\n      var params = {\n        user_id: sessionStorage.userName,\n        ori_passwd: md5(formData.passwordOld)\n      };\n      return http.post({\n        url: \"/tell-info/checkPassword\",\n        data: params\n      });\n    };\n\n    _this.updateUser = function (form) {\n      var formData = form.getFieldsValue();\n\n      if (formData.password.length == 0) {\n        message.error(\"密码不能为空\");\n        return;\n      }\n\n      var params = {\n        oper_type: 2,\n        //oper_type // 操作类型  1-新增， 2-修改   3-删除\n        user_id: sessionStorage.userName,\n        // user_name: formData.user_name,\n        // role_id: role[0].role_id,\n        // role_name: role[0].role_name,\n        password: md5(formData.password)\n      }; // console.log(params);\n      // return;\n\n      http.post({\n        url: \"/tell-info/userModify\",\n        data: params\n      }).then(function (res) {\n        console.log(res); // let msg = res.message;\n\n        if (res.code == 200) {\n          message.success(\"修改密码成功\");\n\n          _this.setState({\n            updateModalVisible: false\n          });\n\n          _this.props.form.resetFields();\n\n          _this.props.history.push(\"/login\");\n        } else {\n          message.error(\"修改密码失败\");\n        }\n      });\n    };\n\n    _this.handleUpdateModalCancel = function () {\n      _this.setState({\n        updateModalVisible: false\n      });\n\n      _this.props.form.resetFields();\n    };\n\n    return _this;\n  }\n\n  _createClass(Header, [{\n    key: \"render\",\n    value: function render() {\n      var content = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: styles.item,\n        onClick: this.handleChangePwd,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, \"\\u4FEE\\u6539\\u5BC6\\u7801\", React.createElement(_Icon, {\n        type: \"right\",\n        className: styles.icon,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        style: {\n          borderTop: \"solid 1px #DEE0E3\"\n        },\n        className: styles.quit,\n        onClick: this.handleClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, \"\\u9000\\u51FA\\u767B\\u5F55\"));\n      var getFieldDecorator = this.props.form.getFieldDecorator;\n      return React.createElement(\"div\", {\n        className: styles.flexbox,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: styles.left,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: styles.logo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, \"\\u661F\\u4E91\\u7B97\\u6CD5\\u7BA1\\u7406\\u7CFB\\u7EDF\")), React.createElement(\"div\", {\n        className: styles.message,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, \"\\u6D88\\u606F\"), React.createElement(\"div\", {\n        className: styles.help,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, \"\\u5E2E\\u52A9\\u4E2D\\u5FC3\"), React.createElement(\"div\", {\n        className: styles.right,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, React.createElement(_Popover, {\n        content: content,\n        className: styles.headerPop,\n        style: {\n          padding: \"0!important\"\n        },\n        overlayClassName: styles.headerPop,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: styles.user,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, sessionStorage.userName))), React.createElement(_Modal, {\n        title: \"修改密码\",\n        visible: this.state.updateModalVisible,\n        onOk: this.handleUpdateModalOk,\n        onCancel: this.handleUpdateModalCancel,\n        width: 668,\n        centered: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, React.createElement(_Form, {\n        layout: \"vertical\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: styles.rowFlex,\n        style: {\n          position: \"relative\"\n        },\n        id: \"area\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, React.createElement(_Form.Item, {\n        label: \"\\u539F\\u5BC6\\u7801\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, getFieldDecorator(\"passwordOld\", {\n        rules: [{\n          required: true,\n          message: \"请输入\"\n        }, {\n          message: \"请输入数字\",\n          pattern: new RegExp(\"^\\\\d+$\")\n        }, {\n          validator: checkLength(20),\n          trigger: [\"change\", \"blur\"]\n        }]\n      })(React.createElement(_Input.Password, {\n        placeholder: \"\\u8BF7\\u8F93\\u5165\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        style: {\n          width: 60\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }), React.createElement(_Form.Item, {\n        // className={styles.marLose14}\n        label: \"\\u65B0\\u5BC6\\u7801\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, getFieldDecorator(\"password\", {\n        rules: [{\n          required: true,\n          message: \"请输入\"\n        }]\n      })(React.createElement(_Input.Password, {\n        placeholder: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        style: {\n          width: 60\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }), React.createElement(_Form.Item, {\n        // className={styles.marLose14}\n        label: \"\\u786E\\u8BA4\\u5BC6\\u7801\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }, getFieldDecorator(\"password2\", {\n        rules: [{\n          required: true,\n          message: \"请输入\"\n        }]\n      })(React.createElement(_Input.Password, {\n        placeholder: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }))))))));\n    }\n  }]);\n\n  return Header;\n}(React.PureComponent); // const mapStateToProps = (state, ownProps) => {\n//     return {\n//         config: state.config,\n//     };\n// };\n// const mapDispatchToProps = (dispatch, ownProps) => {\n//     return {\n//         setConfig: (config) => {\n//             dispatch({ type: \"setConfig\", payload: config });\n//         },\n//     };\n// };\n// export default connect(mapStateToProps, mapDispatchToProps)(Form.create()(Header));\n// export default withRouter(Form.create()(Header));\n\n\nexport default _Form.create()(Header); // export default Header;","map":{"version":3,"sources":["D:/company/algo-manage/src/components/Header/index.js"],"names":["React","styles","md5","Header","state","updateModalVisible","handleClick","sessionStorage","removeItem","props","history","push","window","electron","ipcRenderer","ipc","send","handleChangePwd","setState","getUpdateFormFields","label","id","initialValue","rules","required","message","component","handleUpdateModalOk","formData","form","getFieldsValue","validateFields","err","values","password","password2","error","passwordOld","checkPassword","then","res","code","updateUser","params","user_id","userName","ori_passwd","http","post","url","data","length","oper_type","console","log","success","resetFields","handleUpdateModalCancel","content","item","icon","borderTop","quit","getFieldDecorator","flexbox","left","logo","help","right","headerPop","padding","user","rowFlex","position","pattern","RegExp","validator","checkLength","trigger","width","PureComponent","create"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport styles from \"./index.module.less\";\r\nimport { Popover, Icon, Input, Form, Modal } from \"antd\";\r\n// import { withRouter } from \"react-router-dom\";\r\n// import { connect } from \"react-redux\";\r\nimport md5 from \"js-md5\"; //全局引入\r\n\r\nclass Header extends React.PureComponent {\r\n    state = { updateModalVisible: false };\r\n\r\n    handleClick = () => {\r\n        sessionStorage.removeItem(\"isLogin\");\r\n        this.props.history.push(\"/login\");\r\n        if (window.electron && window.electron.ipcRenderer) {\r\n            ipc.send(\"logout\");\r\n        }\r\n    };\r\n    handleChangePwd = () => {\r\n        this.setState({ updateModalVisible: true });\r\n    };\r\n    getUpdateFormFields = () => {\r\n        return [\r\n            {\r\n                label: \"原密码\",\r\n                id: \"passwordOld\",\r\n                initialValue: \"\",\r\n                rules: [\r\n                    {\r\n                        required: true,\r\n                        message: \"参数不能为空\",\r\n                    },\r\n                ],\r\n                component: <Input.Password placeholder=\"请输入\" />,\r\n            },\r\n            {\r\n                label: \"设置密码\",\r\n                id: \"password\",\r\n                initialValue: \"\",\r\n                rules: [\r\n                    {\r\n                        required: true,\r\n                        message: \"参数不能为空\",\r\n                    },\r\n                ],\r\n                component: <Input.Password placeholder=\"请输入\" />,\r\n            },\r\n            {\r\n                label: \"确认密码\",\r\n                id: \"password2\",\r\n                initialValue: \"\",\r\n                rules: [\r\n                    {\r\n                        required: true,\r\n                        message: \"参数不能为空\",\r\n                    },\r\n                ],\r\n                component: <Input.Password placeholder=\"请输入\" />,\r\n            },\r\n        ];\r\n    };\r\n    handleUpdateModalOk = () => {\r\n        let formData = this.props.form.getFieldsValue();\r\n        // console.log(\"更新记录\", formData);\r\n        this.props.form.validateFields((err, values) => {\r\n            if (!err) {\r\n                if (formData.password != formData.password2) {\r\n                    message.error(\"密码与确认密码不一致\");\r\n                    return;\r\n                }\r\n                if (formData.passwordOld) {\r\n                    let form = this.props.form;\r\n                    // console.log(\"passwordOld\", formData.passwordOld);\r\n                    this.checkPassword(form).then((res) => {\r\n                        if (res.code == 200) {\r\n                            // console.log(\"checkPassword 成功\");\r\n                            this.updateUser(form);\r\n                        } else {\r\n                            message.error(\"原密码校验失败\");\r\n                        }\r\n                    });\r\n                } else {\r\n                    this.updateUser(form);\r\n                }\r\n            }\r\n        });\r\n    };\r\n    checkPassword = (form) => {\r\n        let formData = form.getFieldsValue();\r\n        let params = {\r\n            user_id: sessionStorage.userName,\r\n            ori_passwd: md5(formData.passwordOld),\r\n        };\r\n        return http.post({\r\n            url: \"/tell-info/checkPassword\",\r\n            data: params,\r\n        });\r\n    };\r\n    updateUser = (form) => {\r\n        let formData = form.getFieldsValue();\r\n        if (formData.password.length == 0) {\r\n            message.error(\"密码不能为空\");\r\n            return;\r\n        }\r\n        let params = {\r\n            oper_type: 2, //oper_type // 操作类型  1-新增， 2-修改   3-删除\r\n            user_id: sessionStorage.userName,\r\n            // user_name: formData.user_name,\r\n            // role_id: role[0].role_id,\r\n            // role_name: role[0].role_name,\r\n            password: md5(formData.password),\r\n        };\r\n        // console.log(params);\r\n        // return;\r\n        http.post({\r\n            url: \"/tell-info/userModify\",\r\n            data: params,\r\n        }).then((res) => {\r\n            console.log(res);\r\n            // let msg = res.message;\r\n            if (res.code == 200) {\r\n                message.success(\"修改密码成功\");\r\n                this.setState({ updateModalVisible: false });\r\n                this.props.form.resetFields();\r\n                this.props.history.push(\"/login\");\r\n            } else {\r\n                message.error(\"修改密码失败\");\r\n            }\r\n        });\r\n    };\r\n    handleUpdateModalCancel = () => {\r\n        this.setState({\r\n            updateModalVisible: false,\r\n        });\r\n        this.props.form.resetFields();\r\n    };\r\n    render() {\r\n        let content = (\r\n            <div>\r\n                <div className={styles.item} onClick={this.handleChangePwd}>\r\n                    修改密码\r\n                    <Icon type=\"right\" className={styles.icon} />\r\n                </div>\r\n                <div\r\n                    style={{ borderTop: \"solid 1px #DEE0E3\" }}\r\n                    className={styles.quit}\r\n                    onClick={this.handleClick}\r\n                >\r\n                    退出登录\r\n                </div>\r\n            </div>\r\n        );\r\n        let { getFieldDecorator } = this.props.form;\r\n        return (\r\n            <div className={styles.flexbox}>\r\n                <div className={styles.left}>\r\n                    <div className={styles.logo}>星云算法管理系统</div>\r\n                </div>\r\n                <div className={styles.message}>消息</div>\r\n                <div className={styles.help}>帮助中心</div>\r\n                <div className={styles.right}>\r\n                    <Popover\r\n                        content={content}\r\n                        className={styles.headerPop}\r\n                        style={{ padding: \"0!important\" }}\r\n                        overlayClassName={styles.headerPop}\r\n                    >\r\n                        <div className={styles.user}>\r\n                            {sessionStorage.userName}\r\n                        </div>\r\n                    </Popover>\r\n                    {/* <div className={styles.out} onClick={this.handleClick}>\r\n                        退出\r\n                    </div> */}\r\n                </div>\r\n                <Modal\r\n                    title={\"修改密码\"}\r\n                    visible={this.state.updateModalVisible}\r\n                    onOk={this.handleUpdateModalOk}\r\n                    onCancel={this.handleUpdateModalCancel}\r\n                    width={668}\r\n                    centered\r\n                >\r\n                    <Form layout={\"vertical\"}>\r\n                        <div>\r\n                            <div\r\n                                className={styles.rowFlex}\r\n                                style={{\r\n                                    position: \"relative\",\r\n                                }}\r\n                                id=\"area\"\r\n                            >\r\n                                <Form.Item label=\"原密码\">\r\n                                    {getFieldDecorator(\"passwordOld\", {\r\n                                        rules: [\r\n                                            {\r\n                                                required: true,\r\n                                                message: \"请输入\",\r\n                                            },\r\n                                            {\r\n                                                message: \"请输入数字\",\r\n                                                pattern: new RegExp(\"^\\\\d+$\"),\r\n                                            },\r\n                                            {\r\n                                                validator: checkLength(20),\r\n                                                trigger: [\"change\", \"blur\"],\r\n                                            },\r\n                                        ],\r\n                                    })(<Input.Password placeholder=\"请输入\" />)}\r\n                                </Form.Item>\r\n                                <div style={{ width: 60 }}></div>\r\n                                <Form.Item\r\n                                    // className={styles.marLose14}\r\n                                    label=\"新密码\"\r\n                                >\r\n                                    {getFieldDecorator(\"password\", {\r\n                                        rules: [\r\n                                            {\r\n                                                required: true,\r\n                                                message: \"请输入\",\r\n                                            },\r\n                                        ],\r\n                                    })(<Input.Password placeholder=\"\" />)}\r\n                                </Form.Item>\r\n                                <div style={{ width: 60 }}></div>\r\n                                <Form.Item\r\n                                    // className={styles.marLose14}\r\n                                    label=\"确认密码\"\r\n                                >\r\n                                    {getFieldDecorator(\"password2\", {\r\n                                        rules: [\r\n                                            {\r\n                                                required: true,\r\n                                                message: \"请输入\",\r\n                                            },\r\n                                        ],\r\n                                    })(<Input.Password placeholder=\"\" />)}\r\n                                </Form.Item>\r\n                            </div>\r\n                        </div>\r\n                    </Form>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n// const mapStateToProps = (state, ownProps) => {\r\n//     return {\r\n//         config: state.config,\r\n//     };\r\n// };\r\n// const mapDispatchToProps = (dispatch, ownProps) => {\r\n//     return {\r\n//         setConfig: (config) => {\r\n//             dispatch({ type: \"setConfig\", payload: config });\r\n//         },\r\n//     };\r\n// };\r\n// export default connect(mapStateToProps, mapDispatchToProps)(Form.create()(Header));\r\n// export default withRouter(Form.create()(Header));\r\nexport default Form.create()(Header);\r\n// export default Header;\r\n"]},"metadata":{},"sourceType":"module"}