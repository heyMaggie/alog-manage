{"ast":null,"code":"import \"antd/lib/modal/style\";\nimport _Modal from \"antd/lib/modal\";\nimport \"antd/lib/row/style\";\nimport _Row from \"antd/lib/row\";\nimport \"antd/lib/col/style\";\nimport _Col from \"antd/lib/col\";\nimport \"antd/lib/form/style\";\nimport _Form from \"antd/lib/form\";\nimport \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nimport _defineProperty from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport \"antd/lib/switch/style\";\nimport _Switch from \"antd/lib/switch\";\nimport _classCallCheck from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport \"antd/lib/input/style\";\nimport _Input from \"antd/lib/input\";\nvar _jsxFileName = \"D:\\\\company\\\\algo-manage\\\\src\\\\algo\\\\modules\\\\manage\\\\pages\\\\algoGroup\\\\index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport CurdComponent from \"@/components/CurdComponent\"; // import SelectOption from \"@/components/SelectOption\";\n\nimport Table from \"@/components/Table\";\nimport styles from \"./style.module.less\";\n\nvar getSearchFormFields = function getSearchFormFields() {\n  return [{\n    label: \"权限ID\",\n    id: \"id\",\n    component: React.createElement(_Input, {\n      placeholder: \"\\u8BF7\\u8F93\\u5165\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    })\n  }, {\n    label: \"算法名称\",\n    id: \"algoName\",\n    component: React.createElement(_Input, {\n      placeholder: \"\\u8BF7\\u8F93\\u5165\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    })\n  }];\n};\n\nvar algoGroup =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(algoGroup, _React$PureComponent);\n\n  function algoGroup() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, algoGroup);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(algoGroup)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.columns = function (params) {\n      var tab = [{\n        title: \"ID\",\n        dataIndex: \"id\",\n        width: 100\n      }, {\n        title: \"算法权限组名称\",\n        dataIndex: \"groupName\",\n        width: 180\n      }, {\n        title: \"权限\",\n        dataIndex: \"algoProperty\",\n        width: 220\n      }, {\n        title: \"可用算法\",\n        dataIndex: \"algoUsed\"\n      }, {\n        title: \"操作\",\n        key: \"operation\",\n        fixed: \"right\",\n        width: 100,\n        render: function render(text, record) {\n          return React.createElement(\"a\", {\n            onClick: function onClick(e) {\n              _this.handleUpdateBtn(record);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 51\n            },\n            __self: this\n          }, \"\\u7F16\\u8F91\");\n        }\n      }];\n\n      if (sessionStorage.userPrivilege == 2) {\n        tab.pop();\n      }\n\n      return tab;\n    };\n\n    _this.columns2 = function (params) {\n      return [{\n        title: \"算法ID\",\n        dataIndex: \"id\",\n        width: 100,\n        ellipsis: true\n      }, {\n        title: \"算法名称\",\n        dataIndex: \"algoName\",\n        width: 150,\n        ellipsis: true\n      }, {\n        title: \"算法厂商\",\n        dataIndex: \"providerName\",\n        width: 150,\n        ellipsis: true\n      }, {\n        title: \"算法类型\",\n        dataIndex: \"algorithmType\",\n        width: 150,\n        ellipsis: true\n      }, {\n        title: \"是否有权限\",\n        dataIndex: \"isShow\",\n        width: 150,\n        ellipsis: true,\n        render: function render(text, record) {\n          return React.createElement(\"div\", {\n            onDoubleClick: function onDoubleClick(e) {\n              e.stopPropagation();\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 98\n            },\n            __self: this\n          }, React.createElement(_Switch, {\n            checked: record.isShow == 1,\n            size: \"small\",\n            onChange: function onChange(e) {\n              // console.log(text, record);\n              _this.onSwitchChange(e, record);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 103\n            },\n            __self: this\n          }));\n        }\n      }];\n    };\n\n    _this.state = {\n      searchLoading: false,\n      selectRow: [],\n      info: [],\n      pagination: {\n        total: 0\n      },\n      updateModalVisible: false,\n      algoList: [],\n      //算法列表\n      modalTitle: \"新增算法权限组\",\n      configArr: [] // 算法组配置 数据\n\n    };\n\n    _this.handleTableChange = function (selectedRowKeys) {\n      console.log(\"批量选择\");\n\n      _this.setState({\n        selectRow: selectedRowKeys\n      });\n    };\n\n    _this.handleInsertRecord = function (params) {\n      console.log(params);\n      http.post({\n        url: \"/algo-group-info/addAlgoGroupInfo\",\n        data: params\n      }).then(function (res) {\n        console.log(res); //解析数据字典\n\n        var msg = res.message;\n\n        if (res.code == 0) {\n          message.success(msg);\n\n          _this.getData(_this.searchParam, _this.state.pagination);\n\n          _this.setState({\n            updateModalVisible: false\n          });\n        } else if (res.code == 20000) {\n          message.error(msg.substring(msg.indexOf(\"[\") + 1, msg.lastIndexOf(\"]\")));\n\n          _this.setState({\n            updateModalVisible: false\n          });\n        } else {\n          message.error(msg);\n\n          _this.setState({\n            updateModalVisible: false\n          });\n        }\n      });\n    };\n\n    _this.getInsertFormFields = function () {\n      return [{\n        label: \"权限\",\n        id: \"AlgoProperty\",\n        initialValue: \"\",\n        rules: [{\n          required: true,\n          message: \"参数不能为空\"\n        }],\n        component: React.createElement(_Input, {\n          placeholder: \"\\u8BF7\\u8F93\\u5165\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 176\n          },\n          __self: this\n        })\n      }, {\n        label: \"算法权限组名称\",\n        id: \"GroupName\",\n        initialValue: \"\",\n        component: React.createElement(_Input, {\n          placeholder: \"\\u8BF7\\u8F93\\u5165\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 182\n          },\n          __self: this\n        })\n      }];\n    };\n\n    _this.getUpdateFormFields = function () {\n      return [{\n        label: \"权限\",\n        id: \"AlgoProperty\",\n        initialValue: \"\",\n        rules: [{\n          required: true,\n          message: \"参数不能为空\"\n        }],\n        component: React.createElement(_Input, {\n          placeholder: \"\\u8BF7\\u8F93\\u5165\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 198\n          },\n          __self: this\n        })\n      }, {\n        label: \"算法权限组名称\",\n        id: \"GroupName\",\n        initialValue: \"\",\n        component: React.createElement(_Input, {\n          placeholder: \"\\u8BF7\\u8F93\\u5165\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 204\n          },\n          __self: this\n        })\n      }];\n    };\n\n    _this.setUpdateModal = function (_ref) {\n      var form = _ref.form,\n          record = _ref.record;\n      // console.log(record, form);\n      _this.record = record;\n      form.setFieldsValue({\n        Id: record.id,\n        AlgoProperty: record.algoProperty,\n        GroupName: record.groupName\n      });\n    };\n\n    _this.handleUpdateRecord = function (_ref2) {\n      var form = _ref2.form;\n      console.log(form.getFieldsValue()); // return;\n\n      var params = form.getFieldsValue();\n      params.id = _this.record.id;\n      console.log(params); // return;\n\n      http.post({\n        url: \"/algo-group-info/updateAlgoGroupInfo\",\n        data: params\n      }).then(function (res) {\n        console.log(res);\n        var msg = res.message;\n\n        if (res.code == 0) {\n          message.success(msg); // this.getData();\n        } else if (res.code == 20000) {\n          message.error(msg.substring(msg.indexOf(\"[\") + 1, msg.lastIndexOf(\"]\")));\n        } else {\n          message.error(msg);\n        }\n      });\n    };\n\n    _this.handleInsertBtn = function (params) {\n      _this.isInsert = true;\n      _this.isUpdate = false;\n\n      _this.setState({\n        updateModalVisible: true\n      });\n\n      _this.props.form.resetFields();\n\n      _this.getAlgoList({}, {\n        current: 1,\n        pageSize: 1000\n      });\n    };\n\n    _this.inputChange = function (e) {\n      // e.persist();\n      var configArr = e.target.value.split(\"\"); // console.log(e.target.value);\n\n      console.log(configArr);\n      var binArr = [];\n\n      for (var j = 0; j < configArr.length; j++) {\n        // let num = configArr[j] / 1;\n        // 16进制 转 10进制    b => 11\n        var num = parseInt(configArr[j], 16); // console.log(configArr[j], num);\n\n        var tArr = num.toString(2).split(\"\");\n\n        if (tArr.length == 1) {\n          tArr.unshift(\"0\");\n          tArr.unshift(\"0\");\n          tArr.unshift(\"0\");\n        }\n\n        if (tArr.length == 2) {\n          tArr.unshift(\"0\");\n          tArr.unshift(\"0\");\n        }\n\n        if (tArr.length == 3) {\n          tArr.unshift(\"0\");\n        } // console.log(tArr);\n\n\n        binArr = binArr.concat(tArr);\n      }\n\n      console.log(binArr);\n      var newAlgoArr = JSON.parse(JSON.stringify(_this.state.algoList));\n      newAlgoArr.forEach(function (item) {\n        return item.isShow = \"0\";\n      });\n\n      for (var i = 0; i < newAlgoArr.length; i++) {\n        var algo = newAlgoArr[i]; // console.log(algo.id, algo.isShow);\n\n        for (var _j = 0; _j < binArr.length; _j++) {\n          // const element = array[j];\n          if (algo.id == binArr.length - _j) {\n            // console.log(i, j);\n            algo.isShow = binArr[_j];\n            break;\n          }\n        }\n      }\n\n      console.log(newAlgoArr);\n\n      _this.setState({\n        algoList: newAlgoArr\n      }); // // console.log(\"0x\" + e.target.value);\n      // // console.log(isNaN(\"0x\" + e.target.value));\n      // if (!isNaN(\"0x\" + e.target.value)) {\n      //     let val = BigInt(\"0x\" + e.target.value);\n      //     let bin = val.toString(2);\n      //     // console.log(bin);\n      //     let showArr = bin.toString().split(\"\").reverse();\n      //     // console.log(showArr);\n      //     let showLen = showArr.length;\n      //     let algoLen = this.state.algoList.length;\n      //     let minLen = Math.min(showLen, algoLen);\n      //     for (let i = 0; i < minLen; i++) {\n      //         newAlgoArr[i].isShow = showArr[i];\n      //     }\n      // }\n\n    };\n\n    _this.onSwitchChange = function (checked, record) {\n      // console.log(checked, record);\n      // console.log(\"是否新增\", this.isInsert, this.isUpdate);\n      // let algoArr = [...this.state.algoList];\n      var algoArr = JSON.parse(JSON.stringify(_this.state.algoList)); // console.log(algoArr);\n      // 算法开关 数组\n\n      var configArr = _this.configArr; // if (this.isInsert) {\n      //     console.log(\"新增---------\");\n      // } else {\n      //     console.log(\"更新---------\");\n      // }\n\n      console.log(\"-------------\");\n\n      for (var i = 0; i < algoArr.length; i++) {\n        var algo = algoArr[i];\n\n        if (algo.id == record.id) {\n          algo.isShow = checked ? 1 : 0; // console.log(\"算法id: \", record.id, checked);\n          // 改变选中 状态\n\n          if (checked) {\n            configArr[_this.configArr.length - record.id] = 1;\n          } else {\n            configArr[_this.configArr.length - record.id] = 0;\n          } // console.log(algo);\n\n        } else {\n          // configArr[this.configArr.length - 1 - i] = algo.isShow;\n          if (algo.isShow == 1) {\n            console.log(algo);\n            configArr[_this.configArr.length - algo.id] = 1;\n          }\n        }\n      }\n\n      console.log(configArr);\n\n      _this.setState({\n        algoList: algoArr\n      }); // console.log(\"configArr\", this.configArr);\n      // console.log(\"configStr\", this.configArr.join(\"\"));\n      // console.log(algoArr);\n      // let showArr = algoArr.map((item) => item.isShow).reverse();\n      // console.log(showArr);\n\n\n      var binStr = _this.configArr.join(\"\");\n\n      var reg = /(\\d)(?=(?:\\d{4})+$)/g;\n      var newNumber = binStr.replace(reg, \"$1,\"); // console.log(newNumber);\n\n      var arr = newNumber.split(\",\");\n      console.log(arr);\n      var sixteenAllStr = \"\";\n\n      for (var _i = 0; _i < arr.length; _i++) {\n        // console.log(arr[i]);\n        var sixteenStr = parseInt(arr[_i] / 1, 2).toString(16); // console.log(sixteenStr);\n\n        sixteenAllStr += sixteenStr;\n      }\n\n      console.log(sixteenAllStr); //先使用parseInt()函数将二进制转换为十进制，语法“parseInt(string,2);”；然后使用toString()函数将十进制转换为十六进制即可，语法格式“number.toString(16)”。\n      // let sixteenStr = parseInt(binStr, 2).toString(16);\n      // console.log(sixteenStr);\n\n      _this.props.form.setFieldsValue({\n        AlgoProperty: sixteenAllStr\n      });\n    };\n\n    _this.handleUpdateBtn = function (record) {\n      // console.log(\"更新记录\", record);\n      _this.record = record;\n      _this.isInsert = false;\n      _this.isUpdate = true;\n\n      _this.setState({\n        updateModalVisible: true\n      }, function () {\n        _this.props.form.setFieldsValue({\n          Id: record.id,\n          AlgoProperty: record.algoProperty,\n          GroupName: record.groupName\n        });\n\n        var val = {\n          target: {\n            value: record.algoProperty\n          }\n        };\n\n        _this.inputChange(val);\n      });\n    };\n\n    _this.handleUpdateModalOk = function () {\n      _this.props.form.validateFields(function (err) {\n        if (!err) {\n          var data = _this.props.form.getFieldsValue(); // console.log(data);\n\n\n          if (_this.isInsert) {\n            console.log(\"新增算法组\");\n\n            _this.handleInsertRecord(data);\n          } else {\n            console.log(\"修改算法组\");\n\n            _this.handleUpdateRecord2(data);\n          }\n        } else {\n          message.error(\"输入内容不正确,请完善\");\n        }\n      });\n    };\n\n    _this.handleUpdateRecord2 = function (params) {\n      console.log(params); // return;\n\n      http.post({\n        url: \"/algo-group-info/updateAlgoGroupInfo\",\n        data: params\n      }).then(function (res) {\n        console.log(res);\n        var msg = res.message;\n\n        if (res.code == 0) {\n          message.success(msg);\n\n          _this.setState({\n            updateModalVisible: false\n          }); // this.getData();\n\n\n          _this.getData(_this.searchParam, _this.state.pagination);\n        } else if (res.code == 20000) {\n          message.error(msg.substring(msg.indexOf(\"[\") + 1, msg.lastIndexOf(\"]\")));\n\n          _this.setState({\n            updateModalVisible: true\n          });\n        } else {\n          message.error(msg);\n\n          _this.setState({\n            updateModalVisible: true\n          });\n        }\n      });\n    };\n\n    _this.handleUpdateModalCancel = function () {\n      _this.setState({\n        updateModalVisible: false\n      });\n    };\n\n    _this.handleDeleteRecord = function (record) {\n      console.log(\"删除记录 \", record);\n    };\n\n    _this.getData = function () {\n      var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var pagination = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n        current: 1,\n        pageSize: 11\n      };\n      params = _objectSpread({}, params, {\n        pageId: pagination.current,\n        pageNum: pagination.pageSize\n      }); // params.token = \"\";\n\n      http.post({\n        url: \"/algo-group-info/list\",\n        data: params\n      }).then(function (res) {\n        // console.log(\"算法风控组 返回\",res);\n        //解析数据字典\n        if (res.data.records && res.data.records.length > 0) {\n          parseDict(res.data.records); // showTip(this);\n        } else {\n          message.info(\"查询结果为空\");\n        }\n\n        var pgn = {\n          current: res.data.current,\n          pageSize: pagination.pageSize,\n          total: res.data.total || 0\n        };\n\n        _this.setState({\n          info: res.data.records,\n          pagination: pgn\n        });\n      });\n    };\n\n    _this.handleSearch = function (params, pagination) {\n      _this.searchParam = params;\n\n      _this.getData(params, pagination);\n    };\n\n    _this.getAlgoList = function () {\n      var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var pagination = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n        current: 1,\n        pageSize: 1000\n      };\n      var callback = arguments.length > 2 ? arguments[2] : undefined;\n      params = _objectSpread({}, params, {\n        pageId: pagination.current,\n        pageNum: pagination.pageSize\n      });\n      http.post({\n        url: \"/algo/list\",\n        data: params\n      }).then(function (res) {\n        // console.log(\"算法列表\", res);\n        //解析数据字典\n        if (res.data.records && res.data.records.length > 0) {\n          parseDict(res.data.records); // this.algoList = res.data.records;\n\n          res.data.records.forEach(function (item) {\n            return item.isShow = \"0\";\n          });\n\n          _this.setState({\n            algoList: res.data.records\n          }); // console.log(\"算法列表\", this.state.algoList);\n          // 算法配置 初始化为0\n\n\n          var idMax = 0;\n\n          for (var i = 0; i < _this.state.algoList.length; i++) {\n            var id = _this.state.algoList[i].id;\n\n            if (id > idMax) {\n              idMax = id;\n            }\n          } // console.log(\"最大id \", idMax);\n\n\n          _this.configArr = [];\n\n          for (var j = 0; j < idMax; j++) {\n            _this.configArr.push(0);\n          } // console.log(\"configArr\", this.configArr);\n          // showTip(this);\n\n\n          if (callback) {\n            callback();\n          }\n        } else {\n          message.info(\"算法列表为空\");\n        }\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(algoGroup, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getData();\n      this.getAlgoList();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var scroll = {\n        x: 1000,\n        y: 445\n      };\n      var scroll2 = {\n        x: 1000,\n        y: 500\n      };\n      var info = this.state.info; //批量\n\n      var getFieldDecorator = this.props.form.getFieldDecorator; // const rowSelection = {\n      //     selectRow,\n      //     onChange: this.handleTableChange,\n      // };.\n\n      var modalTitle = \"新增算法权限组\";\n\n      if (this.isUpdate) {\n        modalTitle = \"修改算法权限组\";\n      }\n\n      return React.createElement(\"div\", {\n        className: styles.algoGroup,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 560\n        },\n        __self: this\n      }, React.createElement(CurdComponent // rowKey={\"index\"}\n      // btnText2=\"查全部\"\n      // isShowSearchForm={false}\n      , {\n        onSearchClick: this.handleSearch,\n        getSearchFormFields: getSearchFormFields // searchLoading={this.state.searchLoading}\n        ,\n        insertBtnText: \"新增\" // 不传 就没新增按钮\n        // getInsertFormFields={this.getInsertFormFields}\n        // insertRecord={this.handleInsertRecord}\n        ,\n        hasSearchSlot: true,\n        addBtn: React.createElement(_Button, {\n          type: \"primary\",\n          icon: \"plus\",\n          onClick: this.handleInsertBtn,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 573\n          },\n          __self: this\n        }, \"\\u65B0\\u589E\\u6743\\u9650\") // insertModalText={\"新增权限\"}\n        // updateModalText={\"修改权限\"}\n        // col=\"2\"\n        ,\n        width: \"600px\",\n        pagination: this.state.pagination // getUpdateFormFields={this.getUpdateFormFields}\n        // setUpdateModal={this.setUpdateModal}\n        // updateRecord={this.handleUpdateRecord} // 不传 就没编辑\n        // deleteRecord={this.handleDeleteRecord} // 不传 就没删除\n        ,\n        centered: true,\n        columns: this.columns,\n        dataSource: info,\n        scroll: scroll // rowSelection={rowSelection} //批量选择 操作\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 561\n        },\n        __self: this\n      }), React.createElement(_Modal, {\n        title: modalTitle,\n        visible: this.state.updateModalVisible,\n        onOk: this.handleUpdateModalOk,\n        onCancel: this.handleUpdateModalCancel,\n        width: 1288,\n        centered: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 602\n        },\n        __self: this\n      }, React.createElement(_Form, {\n        layout: \"vertical\",\n        style: {\n          maxHeight: \"720px\",\n          overflow: \"hidden\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 610\n        },\n        __self: this\n      }, React.createElement(_Row, {\n        gutter: [60],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 614\n        },\n        __self: this\n      }, this.isUpdate && React.createElement(_Col, {\n        span: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 616\n        },\n        __self: this\n      }, React.createElement(_Form.Item, {\n        label: \"ID\",\n        style: {\n          height: \"59px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 617\n        },\n        __self: this\n      }, getFieldDecorator(\"Id\", {\n        rules: [{\n          required: true,\n          message: \"请输入\"\n        }],\n        initialValue: \"0\"\n      })(React.createElement(_Input, {\n        placeholder: \"\\u8BF7\\u8F93\\u5165\",\n        onChange: this.inputChange,\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 630\n        },\n        __self: this\n      })))), React.createElement(_Col, {\n        span: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 639\n        },\n        __self: this\n      }, React.createElement(_Form.Item, {\n        label: React.createElement(\"label\", {\n          title: \"\\u901A\\u8FC7\\u7B97\\u6CD5\\u7EC4\\u7ED9\\u7528\\u6237\\u5206\\u914D\\u6743\\u9650\\uFF0C\\u5BA2\\u6237\\u7AEF\\u53EA\\u663E\\u793A\\u7528\\u6237\\u6709\\u6743\\u9650\\u7684\\u7B97\\u6CD5,\\u7B97\\u6CD5\\u7EC4\\u6700\\u591A\\u670932\\u5B57\\u8282,\\u6BCF\\u4E2A\\u5B57\\u82824\\u4F4D,\\u5BF9\\u5E944\\u4E2A\\u7B97\\u6CD5\\u662F\\u5426\\u53EF\\u7528(\\u6253\\u5F00:\\u4EE3\\u8868\\u6709\\u6743\\u9650,\\u5173\\u95ED:\\u65E0\\u6743\\u9650),\\u70B9\\u51FB\\u6743\\u9650\\u5F00\\u5173,\\u5373\\u53EF\\u8BBE\\u7F6E\\u7B97\\u6CD5\\u6743\\u9650\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 642\n          },\n          __self: this\n        }, \"\\u6743\\u9650\"),\n        style: {\n          height: \"59px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 640\n        },\n        __self: this\n      }, getFieldDecorator(\"AlgoProperty\", {\n        rules: [{\n          required: true,\n          message: \"请输入\"\n        }, {\n          message: \"请输入16进制正整数\",\n          pattern: /^[A-Fa-f0-9]+$/i\n        }, {\n          validator: checkLength(32),\n          trigger: [\"change\", \"blur\"]\n        }],\n        initialValue: \"0\"\n      })(React.createElement(_Input, {\n        placeholder: \"\\u8BF7\\u8F93\\u5165\",\n        onChange: this.inputChange,\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 665\n        },\n        __self: this\n      })))), React.createElement(_Col, {\n        span: this.isInsert ? 12 : 24,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 673\n        },\n        __self: this\n      }, React.createElement(_Form.Item, {\n        label: React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 675\n          },\n          __self: this\n        }, \"\\u7B97\\u6CD5\\u6743\\u9650\\u7EC4\\u540D\\u79F0\"),\n        style: {\n          height: \"59px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 674\n        },\n        __self: this\n      }, getFieldDecorator(\"GroupName\", {\n        rules: [{\n          required: true,\n          message: \" \"\n        }, {\n          validator: checkLength(32),\n          trigger: [\"change\", \"blur\"]\n        }]\n      })(React.createElement(_Input, {\n        placeholder: \"\\u8BF7\\u8F93\\u5165\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 689\n        },\n        __self: this\n      }))))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 693\n        },\n        __self: this\n      }, React.createElement(Table, {\n        rowKey: \"id\",\n        columns: this.columns2(),\n        dataSource: this.state.algoList,\n        scroll: scroll2,\n        size: \"small\" // rowSelection={rowSelection}\n        // handlePagination={this.handlePagination}\n        // pagination={this.props.pagination}\n        ,\n        pagination: false // pagaSize={pagaSize}\n        // onDoubleClick={this.onDoubleClick}\n        // showDetail={dtColumns.length > 0}\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 694\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return algoGroup;\n}(React.PureComponent);\n\nexport default _Form.create()(algoGroup);","map":{"version":3,"sources":["D:/company/algo-manage/src/algo/modules/manage/pages/algoGroup/index.js"],"names":["React","CurdComponent","Table","styles","getSearchFormFields","label","id","component","algoGroup","columns","params","tab","title","dataIndex","width","key","fixed","render","text","record","e","handleUpdateBtn","sessionStorage","userPrivilege","pop","columns2","ellipsis","stopPropagation","isShow","onSwitchChange","state","searchLoading","selectRow","info","pagination","total","updateModalVisible","algoList","modalTitle","configArr","handleTableChange","selectedRowKeys","console","log","setState","handleInsertRecord","http","post","url","data","then","res","msg","message","code","success","getData","searchParam","error","substring","indexOf","lastIndexOf","getInsertFormFields","initialValue","rules","required","getUpdateFormFields","setUpdateModal","form","setFieldsValue","Id","AlgoProperty","algoProperty","GroupName","groupName","handleUpdateRecord","getFieldsValue","handleInsertBtn","isInsert","isUpdate","props","resetFields","getAlgoList","current","pageSize","inputChange","target","value","split","binArr","j","length","num","parseInt","tArr","toString","unshift","concat","newAlgoArr","JSON","parse","stringify","forEach","item","i","algo","checked","algoArr","binStr","join","reg","newNumber","replace","arr","sixteenAllStr","sixteenStr","val","handleUpdateModalOk","validateFields","err","handleUpdateRecord2","handleUpdateModalCancel","handleDeleteRecord","pageId","pageNum","records","parseDict","pgn","handleSearch","callback","idMax","push","scroll","x","y","scroll2","getFieldDecorator","maxHeight","overflow","height","pattern","validator","checkLength","trigger","PureComponent","create"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport CurdComponent from \"@/components/CurdComponent\";\r\n// import SelectOption from \"@/components/SelectOption\";\r\nimport { Input, Button, Modal, Form, Switch, Row, Col } from \"antd\";\r\nimport Table from \"@/components/Table\";\r\nimport styles from \"./style.module.less\";\r\n\r\nlet getSearchFormFields = () => {\r\n    return [\r\n        {\r\n            label: \"权限ID\",\r\n            id: \"id\",\r\n            component: <Input placeholder=\"请输入\" />,\r\n        },\r\n        {\r\n            label: \"算法名称\",\r\n            id: \"algoName\",\r\n            component: <Input placeholder=\"请输入\" />,\r\n        },\r\n    ];\r\n};\r\n\r\nclass algoGroup extends React.PureComponent {\r\n    columns = (params) => {\r\n        let tab = [\r\n            {\r\n                title: \"ID\",\r\n                dataIndex: \"id\",\r\n                width: 100,\r\n            },\r\n            {\r\n                title: \"算法权限组名称\",\r\n                dataIndex: \"groupName\",\r\n                width: 180,\r\n            },\r\n            {\r\n                title: \"权限\",\r\n                dataIndex: \"algoProperty\",\r\n                width: 220,\r\n            },\r\n            {\r\n                title: \"可用算法\",\r\n                dataIndex: \"algoUsed\",\r\n            },\r\n            {\r\n                title: \"操作\",\r\n                key: \"operation\",\r\n                fixed: \"right\",\r\n                width: 100,\r\n                render: (text, record) => (\r\n                    <a\r\n                        onClick={(e) => {\r\n                            this.handleUpdateBtn(record);\r\n                        }}\r\n                    >\r\n                        编辑\r\n                    </a>\r\n                ),\r\n            },\r\n        ];\r\n        if (sessionStorage.userPrivilege == 2) {\r\n            tab.pop();\r\n        }\r\n        return tab;\r\n    };\r\n    columns2 = (params) => {\r\n        return [\r\n            {\r\n                title: \"算法ID\",\r\n                dataIndex: \"id\",\r\n                width: 100,\r\n                ellipsis: true,\r\n            },\r\n            {\r\n                title: \"算法名称\",\r\n                dataIndex: \"algoName\",\r\n                width: 150,\r\n                ellipsis: true,\r\n            },\r\n            {\r\n                title: \"算法厂商\",\r\n                dataIndex: \"providerName\",\r\n                width: 150,\r\n                ellipsis: true,\r\n            },\r\n            {\r\n                title: \"算法类型\",\r\n                dataIndex: \"algorithmType\",\r\n                width: 150,\r\n                ellipsis: true,\r\n            },\r\n            {\r\n                title: \"是否有权限\",\r\n                dataIndex: \"isShow\",\r\n                width: 150,\r\n                ellipsis: true,\r\n                render: (text, record) => (\r\n                    <div\r\n                        onDoubleClick={(e) => {\r\n                            e.stopPropagation();\r\n                        }}\r\n                    >\r\n                        <Switch\r\n                            checked={record.isShow == 1}\r\n                            size=\"small\"\r\n                            onChange={(e) => {\r\n                                // console.log(text, record);\r\n                                this.onSwitchChange(e, record);\r\n                            }}\r\n                        />\r\n                    </div>\r\n                ),\r\n            },\r\n        ];\r\n    };\r\n    state = {\r\n        searchLoading: false,\r\n        selectRow: [],\r\n        info: [],\r\n        pagination: { total: 0 },\r\n        updateModalVisible: false,\r\n        algoList: [], //算法列表\r\n        modalTitle: \"新增算法权限组\",\r\n        configArr: [], // 算法组配置 数据\r\n    };\r\n    //批量选择\r\n    handleTableChange = (selectedRowKeys) => {\r\n        console.log(\"批量选择\");\r\n        this.setState({\r\n            selectRow: selectedRowKeys,\r\n        });\r\n    };\r\n\r\n    handleInsertRecord = (params) => {\r\n        console.log(params);\r\n        http.post({\r\n            url: \"/algo-group-info/addAlgoGroupInfo\",\r\n            data: params,\r\n        }).then((res) => {\r\n            console.log(res);\r\n            //解析数据字典\r\n            let msg = res.message;\r\n            if (res.code == 0) {\r\n                message.success(msg);\r\n                this.getData(this.searchParam, this.state.pagination);\r\n                this.setState({\r\n                    updateModalVisible: false,\r\n                });\r\n            } else if (res.code == 20000) {\r\n                message.error(\r\n                    msg.substring(msg.indexOf(\"[\") + 1, msg.lastIndexOf(\"]\"))\r\n                );\r\n                this.setState({\r\n                    updateModalVisible: false,\r\n                });\r\n            } else {\r\n                message.error(msg);\r\n                this.setState({\r\n                    updateModalVisible: false,\r\n                });\r\n            }\r\n        });\r\n    };\r\n    getInsertFormFields = () => {\r\n        return [\r\n            {\r\n                label: \"权限\",\r\n                id: \"AlgoProperty\",\r\n                initialValue: \"\",\r\n                rules: [\r\n                    {\r\n                        required: true,\r\n                        message: \"参数不能为空\",\r\n                    },\r\n                ],\r\n                component: <Input placeholder=\"请输入\" />,\r\n            },\r\n            {\r\n                label: \"算法权限组名称\",\r\n                id: \"GroupName\",\r\n                initialValue: \"\",\r\n                component: <Input placeholder=\"请输入\" />,\r\n            },\r\n        ];\r\n    };\r\n    getUpdateFormFields = () => {\r\n        return [\r\n            {\r\n                label: \"权限\",\r\n                id: \"AlgoProperty\",\r\n                initialValue: \"\",\r\n                rules: [\r\n                    {\r\n                        required: true,\r\n                        message: \"参数不能为空\",\r\n                    },\r\n                ],\r\n                component: <Input placeholder=\"请输入\" />,\r\n            },\r\n            {\r\n                label: \"算法权限组名称\",\r\n                id: \"GroupName\",\r\n                initialValue: \"\",\r\n                component: <Input placeholder=\"请输入\" />,\r\n            },\r\n        ];\r\n    };\r\n    //填入更新数据\r\n    setUpdateModal = ({ form, record }) => {\r\n        // console.log(record, form);\r\n        this.record = record;\r\n        form.setFieldsValue({\r\n            Id: record.id,\r\n            AlgoProperty: record.algoProperty,\r\n            GroupName: record.groupName,\r\n        });\r\n    };\r\n    //更新记录\r\n    handleUpdateRecord = ({ form }) => {\r\n        console.log(form.getFieldsValue());\r\n        // return;\r\n        let params = form.getFieldsValue();\r\n        params.id = this.record.id;\r\n        console.log(params);\r\n        // return;\r\n        http.post({\r\n            url: \"/algo-group-info/updateAlgoGroupInfo\",\r\n            data: params,\r\n        }).then((res) => {\r\n            console.log(res);\r\n            let msg = res.message;\r\n            if (res.code == 0) {\r\n                message.success(msg);\r\n                // this.getData();\r\n            } else if (res.code == 20000) {\r\n                message.error(\r\n                    msg.substring(msg.indexOf(\"[\") + 1, msg.lastIndexOf(\"]\"))\r\n                );\r\n            } else {\r\n                message.error(msg);\r\n            }\r\n        });\r\n    };\r\n    // 新增按钮点击事件\r\n    handleInsertBtn = (params) => {\r\n        this.isInsert = true;\r\n        this.isUpdate = false;\r\n        this.setState({\r\n            updateModalVisible: true,\r\n        });\r\n        this.props.form.resetFields();\r\n        this.getAlgoList({}, { current: 1, pageSize: 1000 });\r\n    };\r\n\r\n    inputChange = (e) => {\r\n        // e.persist();\r\n        let configArr = e.target.value.split(\"\");\r\n        // console.log(e.target.value);\r\n        console.log(configArr);\r\n        let binArr = [];\r\n        for (let j = 0; j < configArr.length; j++) {\r\n            // let num = configArr[j] / 1;\r\n            // 16进制 转 10进制    b => 11\r\n            let num = parseInt(configArr[j], 16);\r\n            // console.log(configArr[j], num);\r\n            let tArr = num.toString(2).split(\"\");\r\n            if (tArr.length == 1) {\r\n                tArr.unshift(\"0\");\r\n                tArr.unshift(\"0\");\r\n                tArr.unshift(\"0\");\r\n            }\r\n            if (tArr.length == 2) {\r\n                tArr.unshift(\"0\");\r\n                tArr.unshift(\"0\");\r\n            }\r\n            if (tArr.length == 3) {\r\n                tArr.unshift(\"0\");\r\n            }\r\n            // console.log(tArr);\r\n            binArr = binArr.concat(tArr);\r\n        }\r\n        console.log(binArr);\r\n\r\n        let newAlgoArr = JSON.parse(JSON.stringify(this.state.algoList));\r\n        newAlgoArr.forEach((item) => (item.isShow = \"0\"));\r\n        for (let i = 0; i < newAlgoArr.length; i++) {\r\n            let algo = newAlgoArr[i];\r\n            // console.log(algo.id, algo.isShow);\r\n            for (let j = 0; j < binArr.length; j++) {\r\n                // const element = array[j];\r\n                if (algo.id == binArr.length - j) {\r\n                    // console.log(i, j);\r\n                    algo.isShow = binArr[j];\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        console.log(newAlgoArr);\r\n        this.setState({ algoList: newAlgoArr });\r\n\r\n        // // console.log(\"0x\" + e.target.value);\r\n        // // console.log(isNaN(\"0x\" + e.target.value));\r\n        // if (!isNaN(\"0x\" + e.target.value)) {\r\n        //     let val = BigInt(\"0x\" + e.target.value);\r\n        //     let bin = val.toString(2);\r\n        //     // console.log(bin);\r\n        //     let showArr = bin.toString().split(\"\").reverse();\r\n        //     // console.log(showArr);\r\n        //     let showLen = showArr.length;\r\n        //     let algoLen = this.state.algoList.length;\r\n        //     let minLen = Math.min(showLen, algoLen);\r\n        //     for (let i = 0; i < minLen; i++) {\r\n        //         newAlgoArr[i].isShow = showArr[i];\r\n        //     }\r\n        // }\r\n    };\r\n\r\n    onSwitchChange = (checked, record) => {\r\n        // console.log(checked, record);\r\n        // console.log(\"是否新增\", this.isInsert, this.isUpdate);\r\n        // let algoArr = [...this.state.algoList];\r\n        let algoArr = JSON.parse(JSON.stringify(this.state.algoList));\r\n        // console.log(algoArr);\r\n        // 算法开关 数组\r\n        let configArr = this.configArr;\r\n        // if (this.isInsert) {\r\n        //     console.log(\"新增---------\");\r\n        // } else {\r\n        //     console.log(\"更新---------\");\r\n        // }\r\n        console.log(\"-------------\");\r\n\r\n        for (let i = 0; i < algoArr.length; i++) {\r\n            let algo = algoArr[i];\r\n            if (algo.id == record.id) {\r\n                algo.isShow = checked ? 1 : 0;\r\n                // console.log(\"算法id: \", record.id, checked);\r\n                // 改变选中 状态\r\n                if (checked) {\r\n                    configArr[this.configArr.length - record.id] = 1;\r\n                } else {\r\n                    configArr[this.configArr.length - record.id] = 0;\r\n                }\r\n                // console.log(algo);\r\n            } else {\r\n                // configArr[this.configArr.length - 1 - i] = algo.isShow;\r\n                if (algo.isShow == 1) {\r\n                    console.log(algo);\r\n                    configArr[this.configArr.length - algo.id] = 1;\r\n                }\r\n            }\r\n        }\r\n        console.log(configArr);\r\n        this.setState({ algoList: algoArr });\r\n        // console.log(\"configArr\", this.configArr);\r\n        // console.log(\"configStr\", this.configArr.join(\"\"));\r\n        // console.log(algoArr);\r\n        // let showArr = algoArr.map((item) => item.isShow).reverse();\r\n        // console.log(showArr);\r\n        let binStr = this.configArr.join(\"\");\r\n        const reg = /(\\d)(?=(?:\\d{4})+$)/g;\r\n        const newNumber = binStr.replace(reg, \"$1,\");\r\n        // console.log(newNumber);\r\n        let arr = newNumber.split(\",\");\r\n        console.log(arr);\r\n        let sixteenAllStr = \"\";\r\n        for (let i = 0; i < arr.length; i++) {\r\n            // console.log(arr[i]);\r\n            let sixteenStr = parseInt(arr[i] / 1, 2).toString(16);\r\n            // console.log(sixteenStr);\r\n            sixteenAllStr += sixteenStr;\r\n        }\r\n        console.log(sixteenAllStr);\r\n\r\n        //先使用parseInt()函数将二进制转换为十进制，语法“parseInt(string,2);”；然后使用toString()函数将十进制转换为十六进制即可，语法格式“number.toString(16)”。\r\n        // let sixteenStr = parseInt(binStr, 2).toString(16);\r\n        // console.log(sixteenStr);\r\n        this.props.form.setFieldsValue({ AlgoProperty: sixteenAllStr });\r\n    };\r\n    // 编辑按钮点击事件\r\n    handleUpdateBtn = (record) => {\r\n        // console.log(\"更新记录\", record);\r\n        this.record = record;\r\n        this.isInsert = false;\r\n        this.isUpdate = true;\r\n        this.setState(\r\n            {\r\n                updateModalVisible: true,\r\n            },\r\n            () => {\r\n                this.props.form.setFieldsValue({\r\n                    Id: record.id,\r\n                    AlgoProperty: record.algoProperty,\r\n                    GroupName: record.groupName,\r\n                });\r\n                let val = { target: { value: record.algoProperty } };\r\n                this.inputChange(val);\r\n            }\r\n        );\r\n    };\r\n    //弹窗确定\r\n    handleUpdateModalOk = () => {\r\n        this.props.form.validateFields((err) => {\r\n            if (!err) {\r\n                let data = this.props.form.getFieldsValue();\r\n                // console.log(data);\r\n                if (this.isInsert) {\r\n                    console.log(\"新增算法组\");\r\n                    this.handleInsertRecord(data);\r\n                } else {\r\n                    console.log(\"修改算法组\");\r\n                    this.handleUpdateRecord2(data);\r\n                }\r\n            } else {\r\n                message.error(\"输入内容不正确,请完善\");\r\n            }\r\n        });\r\n    };\r\n    //更新记录\r\n    handleUpdateRecord2 = (params) => {\r\n        console.log(params);\r\n        // return;\r\n        http.post({\r\n            url: \"/algo-group-info/updateAlgoGroupInfo\",\r\n            data: params,\r\n        }).then((res) => {\r\n            console.log(res);\r\n            let msg = res.message;\r\n            if (res.code == 0) {\r\n                message.success(msg);\r\n                this.setState({\r\n                    updateModalVisible: false,\r\n                });\r\n                // this.getData();\r\n                this.getData(this.searchParam, this.state.pagination);\r\n            } else if (res.code == 20000) {\r\n                message.error(\r\n                    msg.substring(msg.indexOf(\"[\") + 1, msg.lastIndexOf(\"]\"))\r\n                );\r\n                this.setState({\r\n                    updateModalVisible: true,\r\n                });\r\n            } else {\r\n                message.error(msg);\r\n                this.setState({\r\n                    updateModalVisible: true,\r\n                });\r\n            }\r\n        });\r\n    };\r\n    handleUpdateModalCancel = () => {\r\n        this.setState({\r\n            updateModalVisible: false,\r\n        });\r\n    };\r\n    //删除记录\r\n    handleDeleteRecord = (record) => {\r\n        console.log(\"删除记录 \", record);\r\n    };\r\n\r\n    getData = (params = {}, pagination = { current: 1, pageSize: 11 }) => {\r\n        params = {\r\n            ...params,\r\n            pageId: pagination.current,\r\n            pageNum: pagination.pageSize,\r\n        };\r\n        // params.token = \"\";\r\n        http.post({\r\n            url: \"/algo-group-info/list\",\r\n            data: params,\r\n        }).then((res) => {\r\n            // console.log(\"算法风控组 返回\",res);\r\n            //解析数据字典\r\n            if (res.data.records && res.data.records.length > 0) {\r\n                parseDict(res.data.records);\r\n                // showTip(this);\r\n            } else {\r\n                message.info(\"查询结果为空\");\r\n            }\r\n            let pgn = {\r\n                current: res.data.current,\r\n                pageSize: pagination.pageSize,\r\n                total: res.data.total || 0,\r\n            };\r\n            this.setState({\r\n                info: res.data.records,\r\n                pagination: pgn,\r\n            });\r\n        });\r\n    };\r\n    handleSearch = (params, pagination) => {\r\n        this.searchParam = params;\r\n        this.getData(params, pagination);\r\n    };\r\n    getAlgoList = (\r\n        params = {},\r\n        pagination = { current: 1, pageSize: 1000 },\r\n        callback\r\n    ) => {\r\n        params = {\r\n            ...params,\r\n            pageId: pagination.current,\r\n            pageNum: pagination.pageSize,\r\n        };\r\n        http.post({\r\n            url: \"/algo/list\",\r\n            data: params,\r\n        }).then((res) => {\r\n            // console.log(\"算法列表\", res);\r\n            //解析数据字典\r\n            if (res.data.records && res.data.records.length > 0) {\r\n                parseDict(res.data.records);\r\n                // this.algoList = res.data.records;\r\n                res.data.records.forEach((item) => (item.isShow = \"0\"));\r\n                this.setState({ algoList: res.data.records });\r\n                // console.log(\"算法列表\", this.state.algoList);\r\n                // 算法配置 初始化为0\r\n                let idMax = 0;\r\n                for (let i = 0; i < this.state.algoList.length; i++) {\r\n                    let id = this.state.algoList[i].id;\r\n                    if (id > idMax) {\r\n                        idMax = id;\r\n                    }\r\n                }\r\n                // console.log(\"最大id \", idMax);\r\n                this.configArr = [];\r\n                for (let j = 0; j < idMax; j++) {\r\n                    this.configArr.push(0);\r\n                }\r\n                // console.log(\"configArr\", this.configArr);\r\n                // showTip(this);\r\n                if (callback) {\r\n                    callback();\r\n                }\r\n            } else {\r\n                message.info(\"算法列表为空\");\r\n            }\r\n        });\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.getData();\r\n        this.getAlgoList();\r\n    }\r\n    render() {\r\n        let scroll = { x: 1000, y: 445 };\r\n        let scroll2 = { x: 1000, y: 500 };\r\n        let info = this.state.info;\r\n        //批量\r\n        let { getFieldDecorator } = this.props.form;\r\n        // const rowSelection = {\r\n        //     selectRow,\r\n        //     onChange: this.handleTableChange,\r\n        // };.\r\n        let modalTitle = \"新增算法权限组\";\r\n        if (this.isUpdate) {\r\n            modalTitle = \"修改算法权限组\";\r\n        }\r\n        return (\r\n            <div className={styles.algoGroup}>\r\n                <CurdComponent\r\n                    // rowKey={\"index\"}\r\n                    // btnText2=\"查全部\"\r\n                    // isShowSearchForm={false}\r\n                    onSearchClick={this.handleSearch}\r\n                    getSearchFormFields={getSearchFormFields}\r\n                    // searchLoading={this.state.searchLoading}\r\n                    insertBtnText={\"新增\"} // 不传 就没新增按钮\r\n                    // getInsertFormFields={this.getInsertFormFields}\r\n                    // insertRecord={this.handleInsertRecord}\r\n                    hasSearchSlot={true}\r\n                    addBtn={\r\n                        <Button\r\n                            type=\"primary\"\r\n                            icon=\"plus\"\r\n                            onClick={this.handleInsertBtn}\r\n                        >\r\n                            新增权限\r\n                        </Button>\r\n                    }\r\n                    // insertModalText={\"新增权限\"}\r\n                    // updateModalText={\"修改权限\"}\r\n                    // col=\"2\"\r\n                    width=\"600px\"\r\n                    pagination={this.state.pagination}\r\n                    // getUpdateFormFields={this.getUpdateFormFields}\r\n                    // setUpdateModal={this.setUpdateModal}\r\n                    // updateRecord={this.handleUpdateRecord} // 不传 就没编辑\r\n                    // deleteRecord={this.handleDeleteRecord} // 不传 就没删除\r\n                    centered={true}\r\n                    columns={this.columns}\r\n                    dataSource={info}\r\n                    scroll={scroll}\r\n                    // rowSelection={rowSelection} //批量选择 操作\r\n                >\r\n                    {/* <div\r\n                        urlPrefix=\"/security\"\r\n                        title=\"证券信息\"\r\n                        sucCallback={this.getData}\r\n                    ></div> */}\r\n                </CurdComponent>\r\n                <Modal\r\n                    title={modalTitle}\r\n                    visible={this.state.updateModalVisible}\r\n                    onOk={this.handleUpdateModalOk}\r\n                    onCancel={this.handleUpdateModalCancel}\r\n                    width={1288}\r\n                    centered\r\n                >\r\n                    <Form\r\n                        layout={\"vertical\"}\r\n                        style={{ maxHeight: \"720px\", overflow: \"hidden\" }}\r\n                    >\r\n                        <Row gutter={[60]}>\r\n                            {this.isUpdate && (\r\n                                <Col span={12}>\r\n                                    <Form.Item\r\n                                        label=\"ID\"\r\n                                        style={{ height: \"59px\" }}\r\n                                    >\r\n                                        {getFieldDecorator(\"Id\", {\r\n                                            rules: [\r\n                                                {\r\n                                                    required: true,\r\n                                                    message: \"请输入\",\r\n                                                },\r\n                                            ],\r\n                                            initialValue: \"0\",\r\n                                        })(\r\n                                            <Input\r\n                                                placeholder=\"请输入\"\r\n                                                onChange={this.inputChange}\r\n                                                disabled={true}\r\n                                            />\r\n                                        )}\r\n                                    </Form.Item>\r\n                                </Col>\r\n                            )}\r\n                            <Col span={12}>\r\n                                <Form.Item\r\n                                    label={\r\n                                        <label title=\"通过算法组给用户分配权限，客户端只显示用户有权限的算法,算法组最多有32字节,每个字节4位,对应4个算法是否可用(打开:代表有权限,关闭:无权限),点击权限开关,即可设置算法权限\">\r\n                                            权限\r\n                                        </label>\r\n                                    }\r\n                                    style={{ height: \"59px\" }}\r\n                                >\r\n                                    {getFieldDecorator(\"AlgoProperty\", {\r\n                                        rules: [\r\n                                            {\r\n                                                required: true,\r\n                                                message: \"请输入\",\r\n                                            },\r\n                                            {\r\n                                                message: \"请输入16进制正整数\",\r\n                                                pattern: /^[A-Fa-f0-9]+$/i,\r\n                                            },\r\n                                            {\r\n                                                validator: checkLength(32),\r\n                                                trigger: [\"change\", \"blur\"],\r\n                                            },\r\n                                        ],\r\n                                        initialValue: \"0\",\r\n                                    })(\r\n                                        <Input\r\n                                            placeholder=\"请输入\"\r\n                                            onChange={this.inputChange}\r\n                                            disabled\r\n                                        />\r\n                                    )}\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={this.isInsert ? 12 : 24}>\r\n                                <Form.Item\r\n                                    label={<label>算法权限组名称</label>}\r\n                                    style={{ height: \"59px\" }}\r\n                                >\r\n                                    {getFieldDecorator(\"GroupName\", {\r\n                                        rules: [\r\n                                            {\r\n                                                required: true,\r\n                                                message: \" \",\r\n                                            },\r\n                                            {\r\n                                                validator: checkLength(32),\r\n                                                trigger: [\"change\", \"blur\"],\r\n                                            },\r\n                                        ],\r\n                                    })(<Input placeholder=\"请输入\" />)}\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n                        <div>\r\n                            <Table\r\n                                rowKey={\"id\"}\r\n                                columns={this.columns2()}\r\n                                dataSource={this.state.algoList}\r\n                                scroll={scroll2}\r\n                                size=\"small\"\r\n                                // rowSelection={rowSelection}\r\n                                // handlePagination={this.handlePagination}\r\n                                // pagination={this.props.pagination}\r\n                                pagination={false}\r\n                                // pagaSize={pagaSize}\r\n                                // onDoubleClick={this.onDoubleClick}\r\n                                // showDetail={dtColumns.length > 0}\r\n                            ></Table>\r\n                        </div>\r\n                    </Form>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Form.create()(algoGroup);\r\n"]},"metadata":{},"sourceType":"module"}