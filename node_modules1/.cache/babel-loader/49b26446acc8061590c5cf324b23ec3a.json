{"ast":null,"code":"import _classCallCheck from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport \"antd/lib/form/style\";\nimport _Form from \"antd/lib/form\";\nvar _jsxFileName = \"D:\\\\company\\\\algo-manage\\\\src\\\\components\\\\DynamicForm\\\\index.js\";\nimport React from \"react\";\nvar FormItem = _Form.Item;\nimport styles from \"./index.module.less\";\n\nvar DynamicForm =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(DynamicForm, _React$PureComponent);\n\n  function DynamicForm() {\n    _classCallCheck(this, DynamicForm);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(DynamicForm).apply(this, arguments));\n  }\n\n  _createClass(DynamicForm, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props = this.props,\n          form = _this$props.form,\n          onReady = _this$props.onReady;\n\n      if (typeof onReady == \"function\") {\n        onReady({\n          form: form\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      // console.log(\"DynamicForm render\");\n      var _this$props2 = this.props,\n          form = _this$props2.form,\n          _this$props2$fields = _this$props2.fields,\n          fields = _this$props2$fields === void 0 ? [] : _this$props2$fields;\n      var getFieldDecorator = form.getFieldDecorator;\n      var labelCol = {\n        xs: this.props.labelCol || 6\n      };\n      var wrapperCol = {\n        xs: 24 - labelCol.xs\n      };\n      var formItemLayout = {// labelCol,\n        // wrapperCol,\n      };\n      return React.createElement(_Form, {\n        layout: \"vertical\",\n        className: styles.dynamicForm,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, fields.map(function (item, index) {\n        var getDec = function getDec(item) {\n          if (item.initialValue) {\n            return getFieldDecorator(item.id, {\n              initialValue: item.initialValue,\n              rules: item.rules\n            });\n          } else {\n            return getFieldDecorator(item.id, {\n              rules: item.rules\n            });\n          }\n        };\n\n        return React.createElement(\"div\", {\n          className: styles.rowFlex + \" \" + styles[\"col\" + _this.props.col],\n          key: item.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        }, React.createElement(FormItem, Object.assign({\n          className: \"col\" + _this.props.col,\n          key: item.id,\n          label: item.label\n        }, formItemLayout, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }), item.valuePropName ? getFieldDecorator(item.id, {\n          valuePropName: \"checked\",\n          initialValue: item.initialValue === true,\n          rules: item.rules\n        })(item.component) : getDec(item)(item.component)));\n      }));\n    }\n  }]);\n\n  return DynamicForm;\n}(React.PureComponent); //解决重复 id 的问题\n// let formName = \"form\" + parseInt(Math.random() * 100000);\n\n\nexport default _Form.create()(DynamicForm);","map":{"version":3,"sources":["D:/company/algo-manage/src/components/DynamicForm/index.js"],"names":["React","FormItem","Item","styles","DynamicForm","props","form","onReady","fields","getFieldDecorator","labelCol","xs","wrapperCol","formItemLayout","dynamicForm","map","item","index","getDec","initialValue","id","rules","rowFlex","col","label","valuePropName","component","PureComponent","create"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,IAAMC,QAAQ,GAAG,MAAKC,IAAtB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;;IAEMC,W;;;;;;;;;;;;;wCACkB;AAAA,wBACQ,KAAKC,KADb;AAAA,UACVC,IADU,eACVA,IADU;AAAA,UACJC,OADI,eACJA,OADI;;AAEhB,UAAI,OAAOA,OAAP,IAAkB,UAAtB,EAAkC;AAC9BA,QAAAA,OAAO,CAAC;AAAED,UAAAA,IAAI,EAAJA;AAAF,SAAD,CAAP;AACH;AACJ;;;6BACQ;AAAA;;AACL;AADK,yBAEuB,KAAKD,KAF5B;AAAA,UAECC,IAFD,gBAECA,IAFD;AAAA,6CAEOE,MAFP;AAAA,UAEOA,MAFP,oCAEgB,EAFhB;AAAA,UAGCC,iBAHD,GAGuBH,IAHvB,CAGCG,iBAHD;AAIL,UAAIC,QAAQ,GAAG;AACXC,QAAAA,EAAE,EAAE,KAAKN,KAAL,CAAWK,QAAX,IAAuB;AADhB,OAAf;AAGA,UAAIE,UAAU,GAAG;AACbD,QAAAA,EAAE,EAAE,KAAKD,QAAQ,CAACC;AADL,OAAjB;AAGA,UAAIE,cAAc,GAAG,CACjB;AACA;AAFiB,OAArB;AAIA,aACI;AAAM,QAAA,MAAM,EAAC,UAAb;AAAwB,QAAA,SAAS,EAAEV,MAAM,CAACW,WAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKN,MAAM,CAACO,GAAP,CAAW,UAACC,IAAD,EAAOC,KAAP,EAAiB;AACzB,YAAIC,MAAM,GAAG,SAATA,MAAS,CAAUF,IAAV,EAAgB;AACzB,cAAIA,IAAI,CAACG,YAAT,EAAuB;AACnB,mBAAOV,iBAAiB,CAACO,IAAI,CAACI,EAAN,EAAU;AAC9BD,cAAAA,YAAY,EAAEH,IAAI,CAACG,YADW;AAE9BE,cAAAA,KAAK,EAAEL,IAAI,CAACK;AAFkB,aAAV,CAAxB;AAIH,WALD,MAKO;AACH,mBAAOZ,iBAAiB,CAACO,IAAI,CAACI,EAAN,EAAU;AAC9BC,cAAAA,KAAK,EAAEL,IAAI,CAACK;AADkB,aAAV,CAAxB;AAGH;AACJ,SAXD;;AAYA,eACI;AACI,UAAA,SAAS,EACLlB,MAAM,CAACmB,OAAP,GACA,GADA,GAEAnB,MAAM,CAAC,QAAQ,KAAI,CAACE,KAAL,CAAWkB,GAApB,CAJd;AAMI,UAAA,GAAG,EAAEP,IAAI,CAACI,EANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAQI,oBAAC,QAAD;AACI,UAAA,SAAS,EAAE,QAAQ,KAAI,CAACf,KAAL,CAAWkB,GADlC;AAEI,UAAA,GAAG,EAAEP,IAAI,CAACI,EAFd;AAGI,UAAA,KAAK,EAAEJ,IAAI,CAACQ;AAHhB,WAIQX,cAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAMKG,IAAI,CAACS,aAAL,GACKhB,iBAAiB,CAACO,IAAI,CAACI,EAAN,EAAU;AACvBK,UAAAA,aAAa,EAAE,SADQ;AAEvBN,UAAAA,YAAY,EACRH,IAAI,CAACG,YAAL,KAAsB,IAHH;AAIvBE,UAAAA,KAAK,EAAEL,IAAI,CAACK;AAJW,SAAV,CAAjB,CAKGL,IAAI,CAACU,SALR,CADL,GAOKR,MAAM,CAACF,IAAD,CAAN,CAAaA,IAAI,CAACU,SAAlB,CAbV,CARJ,CADJ;AA0BH,OAvCA,CADL,CADJ;AA4CH;;;;EAjEqB1B,KAAK,CAAC2B,a,GAmEhC;AACA;;;AACA,eAAe,MAAKC,MAAL,GAAcxB,WAAd,CAAf","sourcesContent":["import React from \"react\";\r\nimport { Form } from \"antd\";\r\nconst FormItem = Form.Item;\r\nimport styles from \"./index.module.less\";\r\n\r\nclass DynamicForm extends React.PureComponent {\r\n    componentDidMount() {\r\n        let { form, onReady } = this.props;\r\n        if (typeof onReady == \"function\") {\r\n            onReady({ form });\r\n        }\r\n    }\r\n    render() {\r\n        // console.log(\"DynamicForm render\");\r\n        let { form, fields = [] } = this.props;\r\n        let { getFieldDecorator } = form;\r\n        let labelCol = {\r\n            xs: this.props.labelCol || 6,\r\n        };\r\n        let wrapperCol = {\r\n            xs: 24 - labelCol.xs,\r\n        };\r\n        let formItemLayout = {\r\n            // labelCol,\r\n            // wrapperCol,\r\n        };\r\n        return (\r\n            <Form layout=\"vertical\" className={styles.dynamicForm}>\r\n                {fields.map((item, index) => {\r\n                    let getDec = function (item) {\r\n                        if (item.initialValue) {\r\n                            return getFieldDecorator(item.id, {\r\n                                initialValue: item.initialValue,\r\n                                rules: item.rules,\r\n                            });\r\n                        } else {\r\n                            return getFieldDecorator(item.id, {\r\n                                rules: item.rules,\r\n                            });\r\n                        }\r\n                    };\r\n                    return (\r\n                        <div\r\n                            className={\r\n                                styles.rowFlex +\r\n                                \" \" +\r\n                                styles[\"col\" + this.props.col]\r\n                            }\r\n                            key={item.id}\r\n                        >\r\n                            <FormItem\r\n                                className={\"col\" + this.props.col}\r\n                                key={item.id}\r\n                                label={item.label}\r\n                                {...formItemLayout}\r\n                            >\r\n                                {item.valuePropName\r\n                                    ? getFieldDecorator(item.id, {\r\n                                          valuePropName: \"checked\",\r\n                                          initialValue:\r\n                                              item.initialValue === true,\r\n                                          rules: item.rules,\r\n                                      })(item.component)\r\n                                    : getDec(item)(item.component)}\r\n                            </FormItem>\r\n                        </div>\r\n                    );\r\n                })}\r\n            </Form>\r\n        );\r\n    }\r\n}\r\n//解决重复 id 的问题\r\n// let formName = \"form\" + parseInt(Math.random() * 100000);\r\nexport default Form.create()(DynamicForm);\r\n"]},"metadata":{},"sourceType":"module"}