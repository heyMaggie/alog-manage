{"ast":null,"code":"import \"antd/lib/modal/style\";\nimport _Modal from \"antd/lib/modal\";\nimport \"antd/lib/form/style\";\nimport _Form from \"antd/lib/form\";\nimport _defineProperty from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport \"antd/lib/message/style\";\nimport _message from \"antd/lib/message\";\nimport \"antd/lib/tooltip/style\";\nimport _Tooltip from \"antd/lib/tooltip\";\nimport \"antd/lib/icon/style\";\nimport _Icon from \"antd/lib/icon\";\nimport _classCallCheck from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport \"antd/lib/input/style\";\nimport _Input from \"antd/lib/input\";\nvar _jsxFileName = \"D:\\\\company\\\\algo-manage\\\\src\\\\algo\\\\modules\\\\oper_manage\\\\pages\\\\blacklist\\\\index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport CurdComponent from \"@/components/CurdComponent\";\nimport SelectOption from \"@/components/SelectOption\";\nimport Table from \"@/components/Table\";\n\nvar getSearchFormFields = function getSearchFormFields() {\n  return [{\n    label: \"用户编码\",\n    id: \"userId\",\n    component: React.createElement(_Input, {\n      placeholder: \"\\u8BF7\\u8F93\\u5165\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    })\n  }];\n};\n\nvar getInsertFormFields = function getInsertFormFields() {\n  return [{\n    label: \"用户编码\",\n    id: \"userId\",\n    rules: [{\n      required: true,\n      message: \"参数不能为空\"\n    }, {\n      validator: checkLength(12),\n      trigger: [\"change\", \"blur\"]\n    }],\n    component: React.createElement(_Input, {\n      placeholder: \"\\u8BF7\\u8F93\\u5165\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    })\n  }, {\n    label: \"用户名\",\n    id: \"userName\",\n    rules: [{\n      required: true,\n      message: \"参数不能为空\"\n    }, {\n      validator: checkLength(32),\n      trigger: [\"change\", \"blur\"]\n    }],\n    component: React.createElement(_Input, {\n      placeholder: \"\\u8BF7\\u8F93\\u5165\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    })\n  }, {\n    label: \"用户密码\",\n    id: \"userPasswd\",\n    initialValue: \"\",\n    rules: [{\n      required: true,\n      message: \"参数不能为空\"\n    }, {\n      validator: checkLength(32),\n      trigger: [\"change\", \"blur\"]\n    }],\n    component: React.createElement(_Input, {\n      placeholder: \"\\u8BF7\\u8F93\\u5165\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    })\n  }, {\n    label: \"柜台网关ID\",\n    id: \"counterGwId\",\n    rules: [{\n      required: true,\n      message: \"柜台网关Id不能为空\"\n    }, {\n      validator: checkLength(10),\n      trigger: [\"change\", \"blur\"]\n    }],\n    component: React.createElement(_Input, {\n      placeholder: \"\\u8BF7\\u8F93\\u5165\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    })\n  }, {\n    label: \"来自柜台\",\n    id: \"counterUserId\",\n    rules: [{\n      required: true,\n      message: \"参数不能为空\"\n    }, {\n      validator: checkLength(10),\n      trigger: [\"change\", \"blur\"]\n    }],\n    component: React.createElement(_Input, {\n      placeholder: \"\\u8BF7\\u8F93\\u5165\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    })\n  }, {\n    label: \"业务类型\",\n    id: \"businessType\",\n    initialValue: \"1\",\n    rules: [{\n      required: true,\n      message: \"参数不能为空\"\n    }],\n    component: SelectOption(dict.businessType, {\n      placeholder: \"请选择\",\n      allowClear: false,\n      style: {\n        width: 400\n      }\n    })\n  }, // {\n  //     label: \"登录状态\",\n  //     id: \"loginStatus\",\n  //     initialValue: \"0\",\n  //     rules: [\n  //         {\n  //             required: true,\n  //             message: \"参数不能为空\",\n  //         },\n  //     ],\n  //     component: SelectOption(dict.loginStatus, {\n  //         placeholder: \"请选择\",\n  //         allowClear: false,\n  //         style: {\n  //             width: 400,\n  //         },\n  //     }),\n  // },\n  {\n    label: \"客户类型\",\n    id: \"clientType\",\n    initialValue: \"0\",\n    rules: [{\n      required: true,\n      message: \"参数不能为空\"\n    }],\n    component: SelectOption(dict.clientType, {\n      placeholder: \"请选择\",\n      allowClear: false,\n      style: {\n        width: 400\n      }\n    })\n  }, {\n    label: \"算法平台用户ID\",\n    id: \"uuserId\",\n    rules: [{\n      required: true,\n      message: \"参数不能为空\"\n    }, {\n      validator: checkLength(10),\n      trigger: [\"change\", \"blur\"]\n    }],\n    component: React.createElement(_Input, {\n      placeholder: \"\\u8BF7\\u8F93\\u5165\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    })\n  }, {\n    label: \"终端信息\",\n    id: \"TerminalInfo\",\n    rules: [{\n      validator: checkLength(256),\n      trigger: [\"change\", \"blur\"]\n    }],\n    component: React.createElement(_Input, {\n      placeholder: \"\\u8BF7\\u8F93\\u5165\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    })\n  }, {\n    label: \"营业号\",\n    id: \"CustOrgId\",\n    rules: [{\n      validator: checkLength(256),\n      trigger: [\"change\", \"blur\"]\n    }],\n    component: React.createElement(_Input, {\n      placeholder: \"\\u8BF7\\u8F93\\u5165\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    })\n  }, {\n    label: \"系统编号\",\n    id: \"ClSystemId\",\n    rules: [{\n      validator: checkLength(256),\n      trigger: [\"change\", \"blur\"]\n    }],\n    component: React.createElement(_Input, {\n      placeholder: \"\\u8BF7\\u8F93\\u5165\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    })\n  }];\n};\n\nvar getUpdateFormFields = function getUpdateFormFields() {\n  return getInsertFormFields();\n};\n\nvar CounterGw =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(CounterGw, _React$PureComponent);\n\n  function CounterGw() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CounterGw);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CounterGw)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.columns = function (params) {\n      return [{\n        title: \"用户编码\",\n        dataIndex: \"userId\"\n      }, {\n        title: \"用户名\",\n        dataIndex: \"userName\"\n      }, // {\n      //     title: \"柜台网关Id\",\n      //     dataIndex: \"counterGwId\",\n      // },\n      {\n        title: \"柜台网关ID\",\n        dataIndex: \"counterGwId\",\n        render: function render(text, record) {\n          return React.createElement(\"div\", {\n            onClick: function onClick(e) {\n              _this.handleUpdateBtn(record);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 220\n            },\n            __self: this\n          }, React.createElement(_Tooltip, {\n            title: \"\\u4FEE\\u6539\\u7F51\\u5173\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 225\n            },\n            __self: this\n          }, record.counterGwId, React.createElement(_Icon, {\n            type: \"edit\",\n            style: {\n              color: \"#1899ff\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 227\n            },\n            __self: this\n          })));\n        }\n      }, {\n        title: \"来自柜台\",\n        dataIndex: \"counterUserId\"\n      }, {\n        title: \"业务类型\",\n        dataIndex: \"businessTypeValue\"\n      }, {\n        title: \"登录状态\",\n        dataIndex: \"loginStatusValue\"\n      }, {\n        title: \"客户类型\",\n        dataIndex: \"clientTypeValue\"\n      }, {\n        title: \"算法平台用户ID\",\n        dataIndex: \"uuserId\",\n        width: 150\n      }, {\n        title: \"终端信息\",\n        dataIndex: \"terminalInfo\",\n        width: 300\n      }, {\n        title: \"营业号\",\n        dataIndex: \"custOrgid\" // width: 100,\n\n      }, {\n        title: \"系统编号\",\n        dataIndex: \"clSystemId\",\n        width: 300\n      }, {\n        title: \"创建时间\",\n        dataIndex: \"createTime\",\n        width: 180\n      } // {\n      //     title: \"操作\",\n      //     key: \"operation\",\n      //     fixed: \"right\",\n      //     width: 100,\n      //     render: (text, record) => (\n      //         <a\n      //             onClick={(e) => {\n      //                 this.handleUpdateBtn(record);\n      //             }}\n      //         >\n      //             编辑\n      //         </a>\n      //     ),\n      // },\n      ];\n    };\n\n    _this.columns2 = function (params) {\n      return [{\n        title: \"网关ID\",\n        dataIndex: \"id\",\n        width: 100,\n        ellipsis: true\n      }, {\n        title: \"券商编码\",\n        dataIndex: \"brokerCode\",\n        width: 135,\n        ellipsis: true\n      }, {\n        title: \"券商名称\",\n        dataIndex: \"brokerName\",\n        width: 130,\n        ellipsis: true\n      }, {\n        title: \"支持的业务类型\",\n        dataIndex: \"supportType\",\n        ellipsis: true\n      }, {\n        title: \"柜台地址\",\n        dataIndex: \"gwAddr\",\n        width: 180,\n        ellipsis: true\n      }, {\n        title: \"柜台状态\",\n        dataIndex: \"status\",\n        ellipsis: true\n      }, {\n        title: \"柜台版本号\",\n        dataIndex: \"version\",\n        width: 120,\n        ellipsis: true\n      }];\n    };\n\n    _this.state = {\n      searchLoading: false,\n      selectedRowKeys: [],\n      info: [],\n      updateArr: [],\n      updateModalVisible: false\n    };\n\n    _this.handleTableChange = function (selectedRowKeys, row) {\n      // console.log(\"批量选择\", selectedRowKeys, row);\n      _this.setState({\n        selectedRowKeys: selectedRowKeys\n      });\n    };\n\n    _this.getCounterInfo = function () {\n      var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      // params.token = \"\";\n      // console.log(this.record);\n      params.businessType = _this.record.businessType;\n      http.post({\n        url: \"/counter-info/listAll\",\n        data: params\n      }).then(function (res) {\n        console.log(\"柜台信息\", res); //解析数据字典\n\n        if (res.data.length > 0) {\n          parseDict(res.data); // // showTip(this);\n\n          _this.setState({\n            updateModalVisible: true,\n            selectedRowKeys: [_this.record.counterGwId]\n          }, function () {\n            _this.setState({\n              updateArr: res.data\n            }, function () {\n              _this.refs.counterTable.querySelector(\".ant-table-body\").style.height = \"600px\";\n            });\n          });\n        } else {\n          _message.info(\"柜台用户信息查询结果为空\");\n        }\n      }).catch(function (e) {\n        _message.error(\"柜台用户信息查询失败\");\n      });\n    };\n\n    _this.handleUpdateBtn = function (record) {\n      console.log(\"更新记录\", record);\n      _this.record = record;\n      _this.isInsert = false;\n      _this.isUpdate = true;\n\n      _this.getCounterInfo();\n    };\n\n    _this.setUpdateModal = function (_ref) {\n      var form = _ref.form,\n          record = _ref.record;\n      // console.log(record, form);\n      _this.record = record;\n      form.setFieldsValue({\n        userId: record.userId,\n        userName: record.userName,\n        counterGwId: record.counterGwId,\n        counterUserId: record.counterUserId,\n        businessType: record.businessType + \"\",\n        // loginStatus: record.loginStatus + \"\",\n        clientType: record.clientType + \"\",\n        uuserId: record.uuserId,\n        // createTime: record.createTime,\n        userPasswd: record.userPasswd,\n        TerminalInfo: record.terminalInfo,\n        CustOrgId: record.custOrgid,\n        ClSystemId: record.clSystemId\n      });\n    };\n\n    _this.handleInsertRecord = function (formData) {\n      console.log(\"新增接口\", formData);\n      var params = {\n        UserId: formData.userId,\n        UserName: formData.userName,\n        UserPasswd: formData.userPasswd,\n        CounterUserId: formData.counterUserId / 1,\n        BusinessType: formData.businessType / 1,\n        ClientType: formData.clientType / 1,\n        UuserId: formData.uuserId / 1,\n        CounterGwId: formData.counterGwId / 1,\n        TerminalInfo: formData.TerminalInfo,\n        CustOrgId: formData.CustOrgId,\n        ClSystemId: formData.ClSystemId\n      };\n      http.post({\n        url: \"/counter/addCounterUserInfo\",\n        data: params\n      }).then(function (res) {\n        var msg = res.message;\n\n        if (res.code == 0) {\n          _message.success(msg); // this.getData();\n\n        } else if (res.code == 20000) {\n          _message.error(msg.substring(msg.indexOf(\"[\") + 1, msg.lastIndexOf(\"]\")));\n        } else {\n          _message.error(msg);\n        }\n\n        _this.isAction = true;\n      });\n    };\n\n    _this.handleUpdateRecord = function (_ref2) {\n      var form = _ref2.form;\n      var formData = form.getFieldsValue();\n      var params = {\n        Id: _this.record.id,\n        UserId: formData.userId,\n        UserName: formData.userName,\n        UserPasswd: formData.userPasswd,\n        CounterUserId: formData.counterUserId / 1,\n        BusinessType: formData.businessType / 1,\n        ClientType: formData.clientType / 1,\n        UuserId: formData.uuserId / 1,\n        CounterGwId: formData.counterGwId / 1,\n        TerminalInfo: formData.TerminalInfo,\n        CustOrgId: formData.CustOrgId,\n        ClSystemId: formData.ClSystemId\n      };\n      console.log(\"更新编辑记录\", params);\n      http.post({\n        url: \"/counter/updateCounterUserInfo\",\n        data: params\n      }).then(function (res) {\n        var msg = res.message;\n\n        if (res.code == 0) {\n          _message.success(msg); // this.getData();\n          // this.getData(this.searchParam, this.state.pagination);\n\n        } else if (res.code == 20000) {\n          _message.error(msg.substring(msg.indexOf(\"[\") + 1, msg.lastIndexOf(\"]\")));\n        } else {\n          _message.error(msg);\n        }\n\n        _this.isAction = true;\n      });\n    };\n\n    _this.handleUpdateModalOk = function () {\n      if (_this.state.selectedRowKeys.length == 0) {\n        _message.error(\"请选择柜台网关\");\n\n        return;\n      } // console.log(\"selectedRowKeys\", this.state.selectedRowKeys);\n      // console.log(\"record\", this.record);\n      // return;\n\n\n      _this.handleUpdateRecord2();\n    };\n\n    _this.handleUpdateRecord2 = function () {\n      // let formData = form.getFieldsValue();\n      var params = {};\n      params.UuserId = _this.record.uuserId;\n      params.BusinessType = _this.record.businessType; // let dataArr = this.record.businessType.split(\"-\");\n      // console.log(dataArr);\n      // if (dataArr.length == 2) {\n      //     params.BusinessType = dataArr[0] / 1;\n      // }\n\n      params.GwId = _this.state.selectedRowKeys[0] / 1;\n      console.log(\"更新记录\", params); // return;\n\n      http.post({\n        url: \"/counter-user-info/updateUserCounterGw\",\n        data: params\n      }).then(function (res) {\n        console.log(res);\n        _this.isAction = true; //解析数据字典\n\n        if (res.code == 0) {\n          _message.success(\"修改柜台网关Id成功\");\n\n          _this.setState({\n            updateModalVisible: false\n          });\n\n          _this.getData(_this.searchParam, _this.state.pagination); // this.getData();\n\n        } else {\n          _message.error(\"修改柜台网关Id失败\");\n        }\n      });\n    };\n\n    _this.handleUpdateModalCancel = function () {\n      _this.setState({\n        updateModalVisible: false\n      });\n    };\n\n    _this.getData = function () {\n      var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var pagination = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n        current: 1,\n        pageSize: 13\n      };\n      params = _objectSpread({}, params, {\n        pageId: pagination.current,\n        pageNum: pagination.pageSize\n      }); // params.token = \"\";\n\n      http.post({\n        url: \"/counter-user-info/list\",\n        data: params\n      }).then(function (res) {\n        console.log(res); //解析数据字典\n\n        if (res.data.records && res.data.records.length > 0) {\n          // parseDict(res.data);\n          parseDictValue(res.data.records); // showTip(this);\n        } else {\n          _message.info(\"查询结果为空\");\n        }\n\n        var pgn = {\n          current: res.data.current,\n          pageSize: pagination.pageSize,\n          total: res.data.total || 0\n        };\n\n        _this.setState({\n          info: res.data.records,\n          pagination: pgn\n        });\n      });\n    };\n\n    _this.handleSearch = function (params, pagination) {\n      _this.searchParam = params;\n\n      _this.getData(params, pagination);\n    };\n\n    return _this;\n  }\n\n  _createClass(CounterGw, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getData();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var scroll = {\n        x: 2200,\n        y: 445\n      };\n      var scroll2 = {\n        x: 1000,\n        y: 900\n      };\n      var info = this.state.info;\n      var getFieldDecorator = this.props.form.getFieldDecorator;\n      var labelCol = {\n        xs: 12\n      };\n      var wrapperCol = {\n        xs: 24 - labelCol.xs\n      };\n      var formItemLayout = {\n        labelCol: labelCol,\n        wrapperCol: wrapperCol\n      };\n      var selectedRowKeys = this.state.selectedRowKeys;\n      var rowSelection = {\n        selectedRowKeys: selectedRowKeys,\n        type: \"radio\",\n        onChange: this.handleTableChange\n      };\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 595\n        },\n        __self: this\n      }, React.createElement(CurdComponent // rowKey={\"index\"}\n      // btnText2=\"查全部\"\n      // isShowSearchForm={false}\n      , {\n        onSearchClick: this.handleSearch,\n        getSearchFormFields: getSearchFormFields // searchLoading={this.state.searchLoading}\n        ,\n        insertBtnText: \"新增\" // 不传 就没新增按钮\n        ,\n        getInsertFormFields: getInsertFormFields,\n        insertRecord: this.handleInsertRecord // col=\"2\"\n        ,\n        width: \"600px\",\n        pagination: this.state.pagination // updateModalText=\"修改柜台网关Id\"\n        ,\n        getUpdateFormFields: getUpdateFormFields,\n        setUpdateModal: this.setUpdateModal,\n        updateRecord: this.handleUpdateRecord // 不传 就没编辑\n        // deleteRecord={this.handleDeleteRecord} // 不传 就没删除\n        ,\n        centered: true,\n        columns: this.columns,\n        dataSource: info,\n        scroll: scroll // rowSelection={rowSelection} //批量选择 操作\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 596\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        urlPrefix: \"/counter-user-info\",\n        title: \"\\u67DC\\u53F0\\u7528\\u6237\",\n        sucCallback: this.getData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 620\n        },\n        __self: this\n      })), React.createElement(_Modal, {\n        title: \"修改柜台网关Id\",\n        visible: this.state.updateModalVisible,\n        onOk: this.handleUpdateModalOk,\n        onCancel: this.handleUpdateModalCancel,\n        width: 1288,\n        centered: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 626\n        },\n        __self: this\n      }, React.createElement(_Form, {\n        layout: \"inline\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 634\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        ref: \"counterTable\",\n        className: \"counterTable\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 635\n        },\n        __self: this\n      }, React.createElement(Table, {\n        rowKey: \"id\",\n        columns: this.columns2(),\n        dataSource: this.state.updateArr,\n        scroll: scroll2,\n        size: \"small\",\n        rowSelection: rowSelection // handlePagination={this.handlePagination}\n        // pagination={this.props.pagination}\n        ,\n        pagination: false // pagaSize={pagaSize}\n        // onDoubleClick={this.onDoubleClick}\n        // showDetail={dtColumns.length > 0}\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 636\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return CounterGw;\n}(React.PureComponent);\n\nexport default _Form.create()(CounterGw);","map":{"version":3,"sources":["D:/company/algo-manage/src/algo/modules/oper_manage/pages/blacklist/index.js"],"names":["React","CurdComponent","SelectOption","Table","getSearchFormFields","label","id","component","getInsertFormFields","rules","required","message","validator","checkLength","trigger","initialValue","dict","businessType","placeholder","allowClear","style","width","clientType","getUpdateFormFields","CounterGw","columns","params","title","dataIndex","render","text","record","e","handleUpdateBtn","counterGwId","color","columns2","ellipsis","state","searchLoading","selectedRowKeys","info","updateArr","updateModalVisible","handleTableChange","row","setState","getCounterInfo","http","post","url","data","then","res","console","log","length","parseDict","refs","counterTable","querySelector","height","catch","error","isInsert","isUpdate","setUpdateModal","form","setFieldsValue","userId","userName","counterUserId","uuserId","userPasswd","TerminalInfo","terminalInfo","CustOrgId","custOrgid","ClSystemId","clSystemId","handleInsertRecord","formData","UserId","UserName","UserPasswd","CounterUserId","BusinessType","ClientType","UuserId","CounterGwId","msg","code","success","substring","indexOf","lastIndexOf","isAction","handleUpdateRecord","getFieldsValue","Id","handleUpdateModalOk","handleUpdateRecord2","GwId","getData","searchParam","pagination","handleUpdateModalCancel","current","pageSize","pageId","pageNum","records","parseDictValue","pgn","total","handleSearch","scroll","x","y","scroll2","getFieldDecorator","props","labelCol","xs","wrapperCol","formItemLayout","rowSelection","type","onChange","PureComponent","create"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport CurdComponent from \"@/components/CurdComponent\";\r\nimport SelectOption from \"@/components/SelectOption\";\r\nimport { Input, Modal, Form, message, Icon, Tooltip } from \"antd\";\r\nimport Table from \"@/components/Table\";\r\n\r\nlet getSearchFormFields = () => {\r\n    return [\r\n        {\r\n            label: \"用户编码\",\r\n            id: \"userId\",\r\n            component: <Input placeholder=\"请输入\" />,\r\n        },\r\n    ];\r\n};\r\nconst getInsertFormFields = () => {\r\n    return [\r\n        {\r\n            label: \"用户编码\",\r\n            id: \"userId\",\r\n            rules: [\r\n                {\r\n                    required: true,\r\n                    message: \"参数不能为空\",\r\n                },\r\n                {\r\n                    validator: checkLength(12),\r\n                    trigger: [\"change\", \"blur\"],\r\n                },\r\n            ],\r\n            component: <Input placeholder=\"请输入\" />,\r\n        },\r\n        {\r\n            label: \"用户名\",\r\n            id: \"userName\",\r\n            rules: [\r\n                {\r\n                    required: true,\r\n                    message: \"参数不能为空\",\r\n                },\r\n                {\r\n                    validator: checkLength(32),\r\n                    trigger: [\"change\", \"blur\"],\r\n                },\r\n            ],\r\n            component: <Input placeholder=\"请输入\" />,\r\n        },\r\n        {\r\n            label: \"用户密码\",\r\n            id: \"userPasswd\",\r\n            initialValue: \"\",\r\n            rules: [\r\n                {\r\n                    required: true,\r\n                    message: \"参数不能为空\",\r\n                },\r\n                {\r\n                    validator: checkLength(32),\r\n                    trigger: [\"change\", \"blur\"],\r\n                },\r\n            ],\r\n            component: <Input placeholder=\"请输入\" />,\r\n        },\r\n        {\r\n            label: \"柜台网关ID\",\r\n            id: \"counterGwId\",\r\n            rules: [\r\n                {\r\n                    required: true,\r\n                    message: \"柜台网关Id不能为空\",\r\n                },\r\n                {\r\n                    validator: checkLength(10),\r\n                    trigger: [\"change\", \"blur\"],\r\n                },\r\n            ],\r\n            component: <Input placeholder=\"请输入\" />,\r\n        },\r\n        {\r\n            label: \"来自柜台\",\r\n            id: \"counterUserId\",\r\n            rules: [\r\n                {\r\n                    required: true,\r\n                    message: \"参数不能为空\",\r\n                },\r\n                {\r\n                    validator: checkLength(10),\r\n                    trigger: [\"change\", \"blur\"],\r\n                },\r\n            ],\r\n            component: <Input placeholder=\"请输入\" />,\r\n        },\r\n        {\r\n            label: \"业务类型\",\r\n            id: \"businessType\",\r\n            initialValue: \"1\",\r\n            rules: [\r\n                {\r\n                    required: true,\r\n                    message: \"参数不能为空\",\r\n                },\r\n            ],\r\n            component: SelectOption(dict.businessType, {\r\n                placeholder: \"请选择\",\r\n                allowClear: false,\r\n                style: {\r\n                    width: 400,\r\n                },\r\n            }),\r\n        },\r\n        // {\r\n        //     label: \"登录状态\",\r\n        //     id: \"loginStatus\",\r\n        //     initialValue: \"0\",\r\n        //     rules: [\r\n        //         {\r\n        //             required: true,\r\n        //             message: \"参数不能为空\",\r\n        //         },\r\n        //     ],\r\n        //     component: SelectOption(dict.loginStatus, {\r\n        //         placeholder: \"请选择\",\r\n        //         allowClear: false,\r\n        //         style: {\r\n        //             width: 400,\r\n        //         },\r\n        //     }),\r\n        // },\r\n        {\r\n            label: \"客户类型\",\r\n            id: \"clientType\",\r\n            initialValue: \"0\",\r\n            rules: [\r\n                {\r\n                    required: true,\r\n                    message: \"参数不能为空\",\r\n                },\r\n            ],\r\n            component: SelectOption(dict.clientType, {\r\n                placeholder: \"请选择\",\r\n                allowClear: false,\r\n                style: {\r\n                    width: 400,\r\n                },\r\n            }),\r\n        },\r\n        {\r\n            label: \"算法平台用户ID\",\r\n            id: \"uuserId\",\r\n            rules: [\r\n                {\r\n                    required: true,\r\n                    message: \"参数不能为空\",\r\n                },\r\n                {\r\n                    validator: checkLength(10),\r\n                    trigger: [\"change\", \"blur\"],\r\n                },\r\n            ],\r\n            component: <Input placeholder=\"请输入\" />,\r\n        },\r\n        {\r\n            label: \"终端信息\",\r\n            id: \"TerminalInfo\",\r\n            rules: [\r\n                {\r\n                    validator: checkLength(256),\r\n                    trigger: [\"change\", \"blur\"],\r\n                },\r\n            ],\r\n            component: <Input placeholder=\"请输入\" />,\r\n        },\r\n        {\r\n            label: \"营业号\",\r\n            id: \"CustOrgId\",\r\n            rules: [\r\n                {\r\n                    validator: checkLength(256),\r\n                    trigger: [\"change\", \"blur\"],\r\n                },\r\n            ],\r\n            component: <Input placeholder=\"请输入\" />,\r\n        },\r\n        {\r\n            label: \"系统编号\",\r\n            id: \"ClSystemId\",\r\n            rules: [\r\n                {\r\n                    validator: checkLength(256),\r\n                    trigger: [\"change\", \"blur\"],\r\n                },\r\n            ],\r\n            component: <Input placeholder=\"请输入\" />,\r\n        },\r\n    ];\r\n};\r\nconst getUpdateFormFields = () => {\r\n    return getInsertFormFields();\r\n};\r\nclass CounterGw extends React.PureComponent {\r\n    columns = (params) => {\r\n        return [\r\n            {\r\n                title: \"用户编码\",\r\n                dataIndex: \"userId\",\r\n            },\r\n            {\r\n                title: \"用户名\",\r\n                dataIndex: \"userName\",\r\n            },\r\n            // {\r\n            //     title: \"柜台网关Id\",\r\n            //     dataIndex: \"counterGwId\",\r\n            // },\r\n            {\r\n                title: \"柜台网关ID\",\r\n                dataIndex: \"counterGwId\",\r\n                render: (text, record) => (\r\n                    <div\r\n                        onClick={(e) => {\r\n                            this.handleUpdateBtn(record);\r\n                        }}\r\n                    >\r\n                        <Tooltip title=\"修改网关\">\r\n                            {record.counterGwId}\r\n                            <Icon type=\"edit\" style={{ color: \"#1899ff\" }} />\r\n                        </Tooltip>\r\n                    </div>\r\n                ),\r\n            },\r\n            {\r\n                title: \"来自柜台\",\r\n                dataIndex: \"counterUserId\",\r\n            },\r\n            {\r\n                title: \"业务类型\",\r\n                dataIndex: \"businessTypeValue\",\r\n            },\r\n            {\r\n                title: \"登录状态\",\r\n                dataIndex: \"loginStatusValue\",\r\n            },\r\n            {\r\n                title: \"客户类型\",\r\n                dataIndex: \"clientTypeValue\",\r\n            },\r\n            {\r\n                title: \"算法平台用户ID\",\r\n                dataIndex: \"uuserId\",\r\n                width: 150,\r\n            },\r\n            {\r\n                title: \"终端信息\",\r\n                dataIndex: \"terminalInfo\",\r\n                width: 300,\r\n            },\r\n            {\r\n                title: \"营业号\",\r\n                dataIndex: \"custOrgid\",\r\n                // width: 100,\r\n            },\r\n            {\r\n                title: \"系统编号\",\r\n                dataIndex: \"clSystemId\",\r\n                width: 300,\r\n            },\r\n            {\r\n                title: \"创建时间\",\r\n                dataIndex: \"createTime\",\r\n                width: 180,\r\n            },\r\n            // {\r\n            //     title: \"操作\",\r\n            //     key: \"operation\",\r\n            //     fixed: \"right\",\r\n            //     width: 100,\r\n            //     render: (text, record) => (\r\n            //         <a\r\n            //             onClick={(e) => {\r\n            //                 this.handleUpdateBtn(record);\r\n            //             }}\r\n            //         >\r\n            //             编辑\r\n            //         </a>\r\n            //     ),\r\n            // },\r\n        ];\r\n    };\r\n    columns2 = (params) => {\r\n        return [\r\n            {\r\n                title: \"网关ID\",\r\n                dataIndex: \"id\",\r\n                width: 100,\r\n                ellipsis: true,\r\n            },\r\n            {\r\n                title: \"券商编码\",\r\n                dataIndex: \"brokerCode\",\r\n                width: 135,\r\n                ellipsis: true,\r\n            },\r\n            {\r\n                title: \"券商名称\",\r\n                dataIndex: \"brokerName\",\r\n                width: 130,\r\n                ellipsis: true,\r\n            },\r\n            {\r\n                title: \"支持的业务类型\",\r\n                dataIndex: \"supportType\",\r\n                ellipsis: true,\r\n            },\r\n            {\r\n                title: \"柜台地址\",\r\n                dataIndex: \"gwAddr\",\r\n                width: 180,\r\n                ellipsis: true,\r\n            },\r\n            {\r\n                title: \"柜台状态\",\r\n                dataIndex: \"status\",\r\n                ellipsis: true,\r\n            },\r\n            {\r\n                title: \"柜台版本号\",\r\n                dataIndex: \"version\",\r\n                width: 120,\r\n                ellipsis: true,\r\n            },\r\n        ];\r\n    };\r\n\r\n    state = {\r\n        searchLoading: false,\r\n        selectedRowKeys: [],\r\n        info: [],\r\n        updateArr: [],\r\n        updateModalVisible: false,\r\n    };\r\n    //批量选择\r\n    handleTableChange = (selectedRowKeys, row) => {\r\n        // console.log(\"批量选择\", selectedRowKeys, row);\r\n        this.setState({\r\n            selectedRowKeys: selectedRowKeys,\r\n        });\r\n    };\r\n    getCounterInfo = (params = {}) => {\r\n        // params.token = \"\";\r\n        // console.log(this.record);\r\n        params.businessType = this.record.businessType;\r\n        http.post({\r\n            url: \"/counter-info/listAll\",\r\n            data: params,\r\n        })\r\n            .then((res) => {\r\n                console.log(\"柜台信息\", res);\r\n                //解析数据字典\r\n                if (res.data.length > 0) {\r\n                    parseDict(res.data);\r\n                    // // showTip(this);\r\n                    this.setState(\r\n                        {\r\n                            updateModalVisible: true,\r\n                            selectedRowKeys: [this.record.counterGwId],\r\n                        },\r\n                        () => {\r\n                            this.setState(\r\n                                {\r\n                                    updateArr: res.data,\r\n                                },\r\n                                () => {\r\n                                    this.refs.counterTable.querySelector(\r\n                                        \".ant-table-body\"\r\n                                    ).style.height = \"600px\";\r\n                                }\r\n                            );\r\n                        }\r\n                    );\r\n                } else {\r\n                    message.info(\"柜台用户信息查询结果为空\");\r\n                }\r\n            })\r\n            .catch((e) => {\r\n                message.error(\"柜台用户信息查询失败\");\r\n            });\r\n    };\r\n    // 编辑按钮点击事件\r\n    handleUpdateBtn = (record) => {\r\n        console.log(\"更新记录\", record);\r\n        this.record = record;\r\n        this.isInsert = false;\r\n        this.isUpdate = true;\r\n        this.getCounterInfo();\r\n    };\r\n    //填入更新数据\r\n    setUpdateModal = ({ form, record }) => {\r\n        // console.log(record, form);\r\n        this.record = record;\r\n        form.setFieldsValue({\r\n            userId: record.userId,\r\n            userName: record.userName,\r\n            counterGwId: record.counterGwId,\r\n            counterUserId: record.counterUserId,\r\n            businessType: record.businessType + \"\",\r\n            // loginStatus: record.loginStatus + \"\",\r\n            clientType: record.clientType + \"\",\r\n            uuserId: record.uuserId,\r\n            // createTime: record.createTime,\r\n            userPasswd: record.userPasswd,\r\n            TerminalInfo: record.terminalInfo,\r\n            CustOrgId: record.custOrgid,\r\n            ClSystemId: record.clSystemId,\r\n        });\r\n    };\r\n    handleInsertRecord = (formData) => {\r\n        console.log(\"新增接口\", formData);\r\n        let params = {\r\n            UserId: formData.userId,\r\n            UserName: formData.userName,\r\n            UserPasswd: formData.userPasswd,\r\n            CounterUserId: formData.counterUserId / 1,\r\n            BusinessType: formData.businessType / 1,\r\n            ClientType: formData.clientType / 1,\r\n            UuserId: formData.uuserId / 1,\r\n            CounterGwId: formData.counterGwId / 1,\r\n            TerminalInfo: formData.TerminalInfo,\r\n            CustOrgId: formData.CustOrgId,\r\n            ClSystemId: formData.ClSystemId,\r\n        };\r\n        http.post({\r\n            url: \"/counter/addCounterUserInfo\",\r\n            data: params,\r\n        }).then((res) => {\r\n            let msg = res.message;\r\n            if (res.code == 0) {\r\n                message.success(msg);\r\n                // this.getData();\r\n            } else if (res.code == 20000) {\r\n                message.error(\r\n                    msg.substring(msg.indexOf(\"[\") + 1, msg.lastIndexOf(\"]\"))\r\n                );\r\n            } else {\r\n                message.error(msg);\r\n            }\r\n            this.isAction = true;\r\n        });\r\n    };\r\n    handleUpdateRecord = ({ form }) => {\r\n        let formData = form.getFieldsValue();\r\n        let params = {\r\n            Id: this.record.id,\r\n            UserId: formData.userId,\r\n            UserName: formData.userName,\r\n            UserPasswd: formData.userPasswd,\r\n            CounterUserId: formData.counterUserId / 1,\r\n            BusinessType: formData.businessType / 1,\r\n            ClientType: formData.clientType / 1,\r\n            UuserId: formData.uuserId / 1,\r\n            CounterGwId: formData.counterGwId / 1,\r\n            TerminalInfo: formData.TerminalInfo,\r\n            CustOrgId: formData.CustOrgId,\r\n            ClSystemId: formData.ClSystemId,\r\n        };\r\n        console.log(\"更新编辑记录\", params);\r\n        http.post({\r\n            url: \"/counter/updateCounterUserInfo\",\r\n            data: params,\r\n        }).then((res) => {\r\n            let msg = res.message;\r\n            if (res.code == 0) {\r\n                message.success(msg);\r\n                // this.getData();\r\n                // this.getData(this.searchParam, this.state.pagination);\r\n            } else if (res.code == 20000) {\r\n                message.error(\r\n                    msg.substring(msg.indexOf(\"[\") + 1, msg.lastIndexOf(\"]\"))\r\n                );\r\n            } else {\r\n                message.error(msg);\r\n            }\r\n            this.isAction = true;\r\n        });\r\n    };\r\n    //弹窗确定\r\n    handleUpdateModalOk = () => {\r\n        if (this.state.selectedRowKeys.length == 0) {\r\n            message.error(\"请选择柜台网关\");\r\n            return;\r\n        }\r\n        // console.log(\"selectedRowKeys\", this.state.selectedRowKeys);\r\n        // console.log(\"record\", this.record);\r\n        // return;\r\n        this.handleUpdateRecord2();\r\n    };\r\n    //更新记录\r\n    handleUpdateRecord2 = () => {\r\n        // let formData = form.getFieldsValue();\r\n        let params = {};\r\n        params.UuserId = this.record.uuserId;\r\n        params.BusinessType = this.record.businessType;\r\n        // let dataArr = this.record.businessType.split(\"-\");\r\n        // console.log(dataArr);\r\n        // if (dataArr.length == 2) {\r\n        //     params.BusinessType = dataArr[0] / 1;\r\n        // }\r\n        params.GwId = this.state.selectedRowKeys[0] / 1;\r\n        console.log(\"更新记录\", params);\r\n        // return;\r\n        http.post({\r\n            url: \"/counter-user-info/updateUserCounterGw\",\r\n            data: params,\r\n        }).then((res) => {\r\n            console.log(res);\r\n            this.isAction = true;\r\n            //解析数据字典\r\n            if (res.code == 0) {\r\n                message.success(\"修改柜台网关Id成功\");\r\n                this.setState({\r\n                    updateModalVisible: false,\r\n                });\r\n                this.getData(this.searchParam, this.state.pagination);\r\n                // this.getData();\r\n            } else {\r\n                message.error(\"修改柜台网关Id失败\");\r\n            }\r\n        });\r\n    };\r\n    handleUpdateModalCancel = () => {\r\n        this.setState({\r\n            updateModalVisible: false,\r\n        });\r\n    };\r\n    getData = (params = {}, pagination = { current: 1, pageSize: 13 }) => {\r\n        params = {\r\n            ...params,\r\n            pageId: pagination.current,\r\n            pageNum: pagination.pageSize,\r\n        };\r\n        // params.token = \"\";\r\n        http.post({\r\n            url: \"/counter-user-info/list\",\r\n            data: params,\r\n        }).then((res) => {\r\n            console.log(res);\r\n            //解析数据字典\r\n            if (res.data.records && res.data.records.length > 0) {\r\n                // parseDict(res.data);\r\n                parseDictValue(res.data.records);\r\n                // showTip(this);\r\n            } else {\r\n                message.info(\"查询结果为空\");\r\n            }\r\n            let pgn = {\r\n                current: res.data.current,\r\n                pageSize: pagination.pageSize,\r\n                total: res.data.total || 0,\r\n            };\r\n            this.setState({\r\n                info: res.data.records,\r\n                pagination: pgn,\r\n            });\r\n        });\r\n    };\r\n    handleSearch = (params, pagination) => {\r\n        this.searchParam = params;\r\n        this.getData(params, pagination);\r\n    };\r\n    componentDidMount() {\r\n        this.getData();\r\n    }\r\n    render() {\r\n        let scroll = { x: 2200, y: 445 };\r\n        let scroll2 = { x: 1000, y: 900 };\r\n        let info = this.state.info;\r\n        let { getFieldDecorator } = this.props.form;\r\n        let labelCol = {\r\n            xs: 12,\r\n        };\r\n        let wrapperCol = {\r\n            xs: 24 - labelCol.xs,\r\n        };\r\n        let formItemLayout = {\r\n            labelCol,\r\n            wrapperCol,\r\n        };\r\n        let { selectedRowKeys } = this.state;\r\n        const rowSelection = {\r\n            selectedRowKeys,\r\n            type: \"radio\",\r\n            onChange: this.handleTableChange,\r\n        };\r\n        return (\r\n            <div>\r\n                <CurdComponent\r\n                    // rowKey={\"index\"}\r\n                    // btnText2=\"查全部\"\r\n                    // isShowSearchForm={false}\r\n                    onSearchClick={this.handleSearch}\r\n                    getSearchFormFields={getSearchFormFields}\r\n                    // searchLoading={this.state.searchLoading}\r\n                    insertBtnText={\"新增\"} // 不传 就没新增按钮\r\n                    getInsertFormFields={getInsertFormFields}\r\n                    insertRecord={this.handleInsertRecord}\r\n                    // col=\"2\"\r\n                    width=\"600px\"\r\n                    pagination={this.state.pagination}\r\n                    // updateModalText=\"修改柜台网关Id\"\r\n                    getUpdateFormFields={getUpdateFormFields}\r\n                    setUpdateModal={this.setUpdateModal}\r\n                    updateRecord={this.handleUpdateRecord} // 不传 就没编辑\r\n                    // deleteRecord={this.handleDeleteRecord} // 不传 就没删除\r\n                    centered={true}\r\n                    columns={this.columns}\r\n                    dataSource={info}\r\n                    scroll={scroll}\r\n                    // rowSelection={rowSelection} //批量选择 操作\r\n                >\r\n                    <div\r\n                        urlPrefix=\"/counter-user-info\"\r\n                        title=\"柜台用户\"\r\n                        sucCallback={this.getData}\r\n                    ></div>\r\n                </CurdComponent>\r\n                <Modal\r\n                    title={\"修改柜台网关Id\"}\r\n                    visible={this.state.updateModalVisible}\r\n                    onOk={this.handleUpdateModalOk}\r\n                    onCancel={this.handleUpdateModalCancel}\r\n                    width={1288}\r\n                    centered\r\n                >\r\n                    <Form layout={\"inline\"}>\r\n                        <div ref=\"counterTable\" className=\"counterTable\">\r\n                            <Table\r\n                                rowKey={\"id\"}\r\n                                columns={this.columns2()}\r\n                                dataSource={this.state.updateArr}\r\n                                scroll={scroll2}\r\n                                size=\"small\"\r\n                                rowSelection={rowSelection}\r\n                                // handlePagination={this.handlePagination}\r\n                                // pagination={this.props.pagination}\r\n                                pagination={false}\r\n                                // pagaSize={pagaSize}\r\n                                // onDoubleClick={this.onDoubleClick}\r\n                                // showDetail={dtColumns.length > 0}\r\n                            ></Table>\r\n                        </div>\r\n                    </Form>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Form.create()(CounterGw);\r\n"]},"metadata":{},"sourceType":"module"}