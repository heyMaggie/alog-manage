{"ast":null,"code":"import \"antd/lib/dropdown/style\";\nimport _Dropdown from \"antd/lib/dropdown\";\nimport \"antd/lib/menu/style\";\nimport _Menu from \"antd/lib/menu\";\nimport _classCallCheck from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\company\\\\algo-manage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport \"antd/lib/tabs/style\";\nimport _Tabs from \"antd/lib/tabs\";\nvar _jsxFileName = \"D:\\\\company\\\\algo-manage\\\\src\\\\components\\\\TabsLayout\\\\index.js\";\nimport React from \"react\";\nimport styles from \"./index.module.less\";\nimport { connect } from \"react-redux\";\nimport TabComponnet from \"./tabComponent\";\nimport { withRouter } from \"react-router-dom\";\nvar TabPane = _Tabs.TabPane;\n\nvar TabsLayout =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(TabsLayout, _React$PureComponent);\n\n  function TabsLayout() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, TabsLayout);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(TabsLayout)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.getTabsRouteList = function () {\n      var _this$props = _this.props,\n          currentPath = _this$props.currentPath,\n          tabs = _this$props.tabs,\n          routes = _this$props.routes; // console.log(\"currentPath :\", currentPath);\n      // console.log(\"tabs :\", tabs);\n      // console.log(\"routes :\", routes);\n\n      sessionStorage.currentPath = currentPath;\n      sessionStorage.tabs = JSON.stringify(tabs); // sessionStorage.routes = JSON.stringify(routes);\n\n      var tabRoute = [];\n\n      for (var i = 0; i < routes.length; i++) {\n        // console.log(routes);\n        var route = routes[i];\n\n        for (var j = 0; j < tabs.length; j++) {\n          var tab = tabs[j]; // console.log(route);\n          // console.log(tab);\n\n          if (tab.indexOf(route.path) > -1) {\n            for (var k = 0; k < route.children.length; k++) {\n              var child = route.children[k];\n\n              if (child.path == tab) {\n                tabRoute.push(child);\n                break;\n              }\n            }\n          }\n        }\n      }\n\n      return tabRoute;\n    };\n\n    _this.onChange = function (activeKey) {\n      // console.log(\"onChange \", activeKey);\n      _this.props.changeTab(activeKey);\n    };\n\n    _this.onTabClick = function (activeKey) {// console.log(\"onTabClick \", activeKey);\n    };\n\n    _this.onEdit = function (targetKey, action) {\n      // console.log(targetKey);\n      // console.log(action);\n      _this[action](targetKey);\n    };\n\n    _this.remove = function (targetKey) {\n      // console.log(\"关闭 \", targetKey);\n      _this.props.popTab(targetKey);\n    };\n\n    _this.handleMenuClick = function (e, pane) {\n      //阻止 Dropdown 下拉列表 事件冒泡\n      e.domEvent.stopPropagation(); // console.log(pane);\n\n      switch (e.key) {\n        case \"1\":\n          _this.reloadTab = pane.path;\n\n          _this.props.reloadTab();\n\n          break;\n\n        case \"4\":\n          _this.props.popOtherTab(pane.path);\n\n          break;\n\n        case \"5\":\n          _this.props.popLeftTab(pane.path);\n\n          break;\n\n        case \"6\":\n          _this.props.popRightTab(pane.path);\n\n          break;\n\n        default:\n          break;\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(TabsLayout, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      if (this.props.currentPath != this.props.location.pathname) {\n        this.props.history.push(this.props.currentPath);\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.currentPath != this.props.location.pathname) {\n        this.props.history.push(this.props.currentPath);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      // console.log(this.props);\n      var tabRoute = this.getTabsRouteList(); // console.log(\"tabRoute: \", tabRoute);\n      // console.log(this.state);\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, tabRoute.length > 0 && React.createElement(_Tabs, {\n        hideAdd: true,\n        type: \"editable-card\",\n        onEdit: this.onEdit,\n        onChange: this.onChange,\n        activeKey: this.props.currentPath,\n        className: styles.tablayout + \" noTabs\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, tabRoute.map(function (pane) {\n        // console.log(pane);\n        var Component = pane.component;\n        return (// <TabPane tab={pane.title} key={pane.path}>\n          React.createElement(TabPane, {\n            tab: React.createElement(_Dropdown, {\n              overlay: React.createElement(_Menu, {\n                onClick: function onClick(e) {\n                  return _this2.handleMenuClick(e, pane);\n                },\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 113\n                },\n                __self: this\n              }, React.createElement(_Menu.Item, {\n                key: \"1\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 121\n                },\n                __self: this\n              }, \"\\u91CD\\u65B0\\u52A0\\u8F7D\"), React.createElement(_Menu.Item, {\n                key: \"4\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 126\n                },\n                __self: this\n              }, \"\\u5173\\u95ED\\u5176\\u4ED6\\u6807\\u7B7E\\u9875\"), React.createElement(_Menu.Item, {\n                key: \"5\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 129\n                },\n                __self: this\n              }, \"\\u5173\\u95ED\\u5DE6\\u4FA7\\u6807\\u7B7E\\u9875\"), React.createElement(_Menu.Item, {\n                key: \"6\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 132\n                },\n                __self: this\n              }, \"\\u5173\\u95ED\\u53F3\\u4FA7\\u6807\\u7B7E\\u9875\")),\n              trigger: [\"contextMenu\"],\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 111\n              },\n              __self: this\n            }, React.createElement(\"span\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 139\n              },\n              __self: this\n            }, \" \", pane.title)),\n            key: pane.path,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 109\n            },\n            __self: this\n          }, React.createElement(TabComponnet, {\n            component: Component,\n            tabReloading: _this2.props.tabReloading && pane.path == _this2.reloadTab,\n            finishReload: _this2.props.finishReload,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 148\n            },\n            __self: this\n          }))\n        );\n      })));\n    }\n  }]);\n\n  return TabsLayout;\n}(React.PureComponent);\n\nvar mapStateToProps = function mapStateToProps(state, ownProps) {\n  // console.log(state.RouterModel);\n  var _state$RouterModel = state.RouterModel,\n      currentPath = _state$RouterModel.path,\n      tabs = _state$RouterModel.tabs,\n      routes = _state$RouterModel.routes,\n      tabReloading = _state$RouterModel.tabReloading;\n  return {\n    currentPath: currentPath,\n    tabs: tabs,\n    routes: routes,\n    tabReloading: tabReloading\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch, ownProps) {\n  return {\n    popTab: function popTab(tab) {\n      dispatch({\n        type: \"POP_TAB\",\n        payload: tab\n      });\n    },\n    reloadTab: function reloadTab(tab) {\n      dispatch({\n        type: \"RElOAD_TAB\"\n      });\n    },\n    finishReload: function finishReload(tab) {\n      dispatch({\n        type: \"FINISH_RElOAD\"\n      });\n    },\n    changeTab: function changeTab(tab) {\n      dispatch({\n        type: \"CHANGE_TAB\",\n        payload: tab\n      });\n    },\n    popOtherTab: function popOtherTab(tab) {\n      dispatch({\n        type: \"POP_OTHER_TAB\",\n        payload: tab\n      });\n    },\n    popLeftTab: function popLeftTab(tab) {\n      dispatch({\n        type: \"POP_LEFT_TAB\",\n        payload: tab\n      });\n    },\n    popRightTab: function popRightTab(tab) {\n      dispatch({\n        type: \"POP_RIGHT_TAB\",\n        payload: tab\n      });\n    }\n  };\n}; // export default connect(mapStateToProps, mapDispatchToProps)(TabsLayout);\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(TabsLayout)); // export default TabsLayout;","map":{"version":3,"sources":["D:/company/algo-manage/src/components/TabsLayout/index.js"],"names":["React","styles","connect","TabComponnet","withRouter","TabPane","TabsLayout","getTabsRouteList","props","currentPath","tabs","routes","sessionStorage","JSON","stringify","tabRoute","i","length","route","j","tab","indexOf","path","k","children","child","push","onChange","activeKey","changeTab","onTabClick","onEdit","targetKey","action","remove","popTab","handleMenuClick","e","pane","domEvent","stopPropagation","key","reloadTab","popOtherTab","popLeftTab","popRightTab","location","pathname","history","tablayout","map","Component","component","title","tabReloading","finishReload","PureComponent","mapStateToProps","state","ownProps","RouterModel","mapDispatchToProps","dispatch","type","payload"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAASC,UAAT,QAA2B,kBAA3B;IAGQC,O,SAAAA,O;;IAEFC,U;;;;;;;;;;;;;;;;;;UACFC,gB,GAAmB,YAAM;AAAA,wBACe,MAAKC,KADpB;AAAA,UACfC,WADe,eACfA,WADe;AAAA,UACFC,IADE,eACFA,IADE;AAAA,UACIC,MADJ,eACIA,MADJ,EAErB;AACA;AACA;;AACAC,MAAAA,cAAc,CAACH,WAAf,GAA6BA,WAA7B;AACAG,MAAAA,cAAc,CAACF,IAAf,GAAsBG,IAAI,CAACC,SAAL,CAAeJ,IAAf,CAAtB,CANqB,CAOrB;;AACA,UAAIK,QAAQ,GAAG,EAAf;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,MAAM,CAACM,MAA3B,EAAmCD,CAAC,EAApC,EAAwC;AACpC;AACA,YAAIE,KAAK,GAAGP,MAAM,CAACK,CAAD,CAAlB;;AACA,aAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGT,IAAI,CAACO,MAAzB,EAAiCE,CAAC,EAAlC,EAAsC;AAClC,cAAIC,GAAG,GAAGV,IAAI,CAACS,CAAD,CAAd,CADkC,CAElC;AACA;;AACA,cAAIC,GAAG,CAACC,OAAJ,CAAYH,KAAK,CAACI,IAAlB,IAA0B,CAAC,CAA/B,EAAkC;AAC9B,iBAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,KAAK,CAACM,QAAN,CAAeP,MAAnC,EAA2CM,CAAC,EAA5C,EAAgD;AAC5C,kBAAIE,KAAK,GAAGP,KAAK,CAACM,QAAN,CAAeD,CAAf,CAAZ;;AACA,kBAAIE,KAAK,CAACH,IAAN,IAAcF,GAAlB,EAAuB;AACnBL,gBAAAA,QAAQ,CAACW,IAAT,CAAcD,KAAd;AACA;AACH;AACJ;AACJ;AACJ;AACJ;;AACD,aAAOV,QAAP;AACH,K;;UACDY,Q,GAAW,UAACC,SAAD,EAAe;AACtB;AACA,YAAKpB,KAAL,CAAWqB,SAAX,CAAqBD,SAArB;AACH,K;;UACDE,U,GAAa,UAACF,SAAD,EAAe,CACxB;AACH,K;;UACDG,M,GAAS,UAACC,SAAD,EAAYC,MAAZ,EAAuB;AAC5B;AACA;AACA,YAAKA,MAAL,EAAaD,SAAb;AACH,K;;UACDE,M,GAAS,UAACF,SAAD,EAAe;AACpB;AACA,YAAKxB,KAAL,CAAW2B,MAAX,CAAkBH,SAAlB;AACH,K;;UACDI,e,GAAkB,UAACC,CAAD,EAAIC,IAAJ,EAAa;AAC3B;AACAD,MAAAA,CAAC,CAACE,QAAF,CAAWC,eAAX,GAF2B,CAG3B;;AACA,cAAQH,CAAC,CAACI,GAAV;AACI,aAAK,GAAL;AACI,gBAAKC,SAAL,GAAiBJ,IAAI,CAAChB,IAAtB;;AACA,gBAAKd,KAAL,CAAWkC,SAAX;;AACA;;AACJ,aAAK,GAAL;AACI,gBAAKlC,KAAL,CAAWmC,WAAX,CAAuBL,IAAI,CAAChB,IAA5B;;AACA;;AACJ,aAAK,GAAL;AACI,gBAAKd,KAAL,CAAWoC,UAAX,CAAsBN,IAAI,CAAChB,IAA3B;;AACA;;AACJ,aAAK,GAAL;AACI,gBAAKd,KAAL,CAAWqC,WAAX,CAAuBP,IAAI,CAAChB,IAA5B;;AACA;;AACJ;AACI;AAfR;AAiBH,K;;;;;;;yCACoB;AACjB,UAAI,KAAKd,KAAL,CAAWC,WAAX,IAA0B,KAAKD,KAAL,CAAWsC,QAAX,CAAoBC,QAAlD,EAA4D;AACxD,aAAKvC,KAAL,CAAWwC,OAAX,CAAmBtB,IAAnB,CAAwB,KAAKlB,KAAL,CAAWC,WAAnC;AACH;AACJ;;;wCACmB;AAChB,UAAI,KAAKD,KAAL,CAAWC,WAAX,IAA0B,KAAKD,KAAL,CAAWsC,QAAX,CAAoBC,QAAlD,EAA4D;AACxD,aAAKvC,KAAL,CAAWwC,OAAX,CAAmBtB,IAAnB,CAAwB,KAAKlB,KAAL,CAAWC,WAAnC;AACH;AACJ;;;6BACQ;AAAA;;AACL;AACA,UAAIM,QAAQ,GAAG,KAAKR,gBAAL,EAAf,CAFK,CAGL;AACA;;AACA,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKQ,QAAQ,CAACE,MAAT,GAAkB,CAAlB,IACG;AACI,QAAA,OAAO,MADX;AAEI,QAAA,IAAI,EAAC,eAFT;AAGI,QAAA,MAAM,EAAE,KAAKc,MAHjB;AAII,QAAA,QAAQ,EAAE,KAAKJ,QAJnB;AAKI,QAAA,SAAS,EAAE,KAAKnB,KAAL,CAAWC,WAL1B;AAMI,QAAA,SAAS,EAAER,MAAM,CAACgD,SAAP,GAAmB,SANlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAQKlC,QAAQ,CAACmC,GAAT,CAAa,UAACZ,IAAD,EAAU;AACpB;AADoB,YAEHa,SAFG,GAEWb,IAFX,CAEdc,SAFc;AAGpB,eACI;AACA,8BAAC,OAAD;AACI,YAAA,GAAG,EACC;AACI,cAAA,OAAO,EACH;AACI,gBAAA,OAAO,EAAE,iBAACf,CAAD;AAAA,yBACL,MAAI,CAACD,eAAL,CACIC,CADJ,EAEIC,IAFJ,CADK;AAAA,iBADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAQI,0BAAM,IAAN;AAAW,gBAAA,GAAG,EAAC,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CARJ,EAaI,0BAAM,IAAN;AAAW,gBAAA,GAAG,EAAC,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8DAbJ,EAgBI,0BAAM,IAAN;AAAW,gBAAA,GAAG,EAAC,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8DAhBJ,EAmBI,0BAAM,IAAN;AAAW,gBAAA,GAAG,EAAC,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8DAnBJ,CAFR;AA0BI,cAAA,OAAO,EAAE,CAAC,aAAD,CA1Bb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eA4BI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAQA,IAAI,CAACe,KAAb,CA5BJ,CAFR;AAiCI,YAAA,GAAG,EAAEf,IAAI,CAAChB,IAjCd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAuCI,oBAAC,YAAD;AACI,YAAA,SAAS,EAAE6B,SADf;AAEI,YAAA,YAAY,EACR,MAAI,CAAC3C,KAAL,CAAW8C,YAAX,IACAhB,IAAI,CAAChB,IAAL,IAAa,MAAI,CAACoB,SAJ1B;AAMI,YAAA,YAAY,EAAE,MAAI,CAAClC,KAAL,CAAW+C,YAN7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAvCJ;AAFJ;AAmDH,OAtDA,CARL,CAFR,CADJ;AAsEH;;;;EAzJoBvD,KAAK,CAACwD,a;;AA4J/B,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAQC,QAAR,EAAqB;AACzC;AADyC,2BAEeD,KAAK,CAACE,WAFrB;AAAA,MAE7BnD,WAF6B,sBAEnCa,IAFmC;AAAA,MAEhBZ,IAFgB,sBAEhBA,IAFgB;AAAA,MAEVC,MAFU,sBAEVA,MAFU;AAAA,MAEF2C,YAFE,sBAEFA,YAFE;AAGzC,SAAO;AACH7C,IAAAA,WAAW,EAAXA,WADG;AAEHC,IAAAA,IAAI,EAAJA,IAFG;AAGHC,IAAAA,MAAM,EAANA,MAHG;AAIH2C,IAAAA,YAAY,EAAZA;AAJG,GAAP;AAMH,CATD;;AAUA,IAAMO,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,QAAD,EAAWH,QAAX,EAAwB;AAC/C,SAAO;AACHxB,IAAAA,MAAM,EAAE,gBAACf,GAAD,EAAS;AACb0C,MAAAA,QAAQ,CAAC;AACLC,QAAAA,IAAI,EAAE,SADD;AAELC,QAAAA,OAAO,EAAE5C;AAFJ,OAAD,CAAR;AAIH,KANE;AAOHsB,IAAAA,SAAS,EAAE,mBAACtB,GAAD,EAAS;AAChB0C,MAAAA,QAAQ,CAAC;AACLC,QAAAA,IAAI,EAAE;AADD,OAAD,CAAR;AAGH,KAXE;AAYHR,IAAAA,YAAY,EAAE,sBAACnC,GAAD,EAAS;AACnB0C,MAAAA,QAAQ,CAAC;AACLC,QAAAA,IAAI,EAAE;AADD,OAAD,CAAR;AAGH,KAhBE;AAiBHlC,IAAAA,SAAS,EAAE,mBAACT,GAAD,EAAS;AAChB0C,MAAAA,QAAQ,CAAC;AACLC,QAAAA,IAAI,EAAE,YADD;AAELC,QAAAA,OAAO,EAAE5C;AAFJ,OAAD,CAAR;AAIH,KAtBE;AAuBHuB,IAAAA,WAAW,EAAE,qBAACvB,GAAD,EAAS;AAClB0C,MAAAA,QAAQ,CAAC;AACLC,QAAAA,IAAI,EAAE,eADD;AAELC,QAAAA,OAAO,EAAE5C;AAFJ,OAAD,CAAR;AAIH,KA5BE;AA6BHwB,IAAAA,UAAU,EAAE,oBAACxB,GAAD,EAAS;AACjB0C,MAAAA,QAAQ,CAAC;AACLC,QAAAA,IAAI,EAAE,cADD;AAELC,QAAAA,OAAO,EAAE5C;AAFJ,OAAD,CAAR;AAIH,KAlCE;AAmCHyB,IAAAA,WAAW,EAAE,qBAACzB,GAAD,EAAS;AAClB0C,MAAAA,QAAQ,CAAC;AACLC,QAAAA,IAAI,EAAE,eADD;AAELC,QAAAA,OAAO,EAAE5C;AAFJ,OAAD,CAAR;AAIH;AAxCE,GAAP;AA0CH,CA3CD,C,CA4CA;;;AACA,eAAelB,OAAO,CAClBuD,eADkB,EAElBI,kBAFkB,CAAP,CAGbzD,UAAU,CAACE,UAAD,CAHG,CAAf,C,CAIA","sourcesContent":["import React from \"react\";\r\nimport styles from \"./index.module.less\";\r\nimport { connect } from \"react-redux\";\r\nimport TabComponnet from \"./tabComponent\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport { Tabs, Dropdown, Menu } from \"antd\";\r\nconst { TabPane } = Tabs;\r\n\r\nclass TabsLayout extends React.PureComponent {\r\n    getTabsRouteList = () => {\r\n        let { currentPath, tabs, routes } = this.props;\r\n        // console.log(\"currentPath :\", currentPath);\r\n        // console.log(\"tabs :\", tabs);\r\n        // console.log(\"routes :\", routes);\r\n        sessionStorage.currentPath = currentPath;\r\n        sessionStorage.tabs = JSON.stringify(tabs);\r\n        // sessionStorage.routes = JSON.stringify(routes);\r\n        let tabRoute = [];\r\n        for (let i = 0; i < routes.length; i++) {\r\n            // console.log(routes);\r\n            let route = routes[i];\r\n            for (let j = 0; j < tabs.length; j++) {\r\n                let tab = tabs[j];\r\n                // console.log(route);\r\n                // console.log(tab);\r\n                if (tab.indexOf(route.path) > -1) {\r\n                    for (let k = 0; k < route.children.length; k++) {\r\n                        let child = route.children[k];\r\n                        if (child.path == tab) {\r\n                            tabRoute.push(child);\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return tabRoute;\r\n    };\r\n    onChange = (activeKey) => {\r\n        // console.log(\"onChange \", activeKey);\r\n        this.props.changeTab(activeKey);\r\n    };\r\n    onTabClick = (activeKey) => {\r\n        // console.log(\"onTabClick \", activeKey);\r\n    };\r\n    onEdit = (targetKey, action) => {\r\n        // console.log(targetKey);\r\n        // console.log(action);\r\n        this[action](targetKey);\r\n    };\r\n    remove = (targetKey) => {\r\n        // console.log(\"关闭 \", targetKey);\r\n        this.props.popTab(targetKey);\r\n    };\r\n    handleMenuClick = (e, pane) => {\r\n        //阻止 Dropdown 下拉列表 事件冒泡\r\n        e.domEvent.stopPropagation();\r\n        // console.log(pane);\r\n        switch (e.key) {\r\n            case \"1\":\r\n                this.reloadTab = pane.path;\r\n                this.props.reloadTab();\r\n                break;\r\n            case \"4\":\r\n                this.props.popOtherTab(pane.path);\r\n                break;\r\n            case \"5\":\r\n                this.props.popLeftTab(pane.path);\r\n                break;\r\n            case \"6\":\r\n                this.props.popRightTab(pane.path);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n    componentDidUpdate() {\r\n        if (this.props.currentPath != this.props.location.pathname) {\r\n            this.props.history.push(this.props.currentPath);\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        if (this.props.currentPath != this.props.location.pathname) {\r\n            this.props.history.push(this.props.currentPath);\r\n        }\r\n    }\r\n    render() {\r\n        // console.log(this.props);\r\n        let tabRoute = this.getTabsRouteList();\r\n        // console.log(\"tabRoute: \", tabRoute);\r\n        // console.log(this.state);\r\n        return (\r\n            <div>\r\n                {tabRoute.length > 0 && (\r\n                    <Tabs\r\n                        hideAdd\r\n                        type=\"editable-card\"\r\n                        onEdit={this.onEdit}\r\n                        onChange={this.onChange}\r\n                        activeKey={this.props.currentPath}\r\n                        className={styles.tablayout + \" noTabs\"}\r\n                    >\r\n                        {tabRoute.map((pane) => {\r\n                            // console.log(pane);\r\n                            let { component: Component } = pane;\r\n                            return (\r\n                                // <TabPane tab={pane.title} key={pane.path}>\r\n                                <TabPane\r\n                                    tab={\r\n                                        <Dropdown\r\n                                            overlay={\r\n                                                <Menu\r\n                                                    onClick={(e) =>\r\n                                                        this.handleMenuClick(\r\n                                                            e,\r\n                                                            pane\r\n                                                        )\r\n                                                    }\r\n                                                >\r\n                                                    <Menu.Item key=\"1\">\r\n                                                        重新加载\r\n                                                    </Menu.Item>\r\n                                                    {/* <Menu.Item key=\"2\">新窗口打开</Menu.Item> */}\r\n                                                    {/* <Menu.Item key=\"3\">关闭这个标签页</Menu.Item> */}\r\n                                                    <Menu.Item key=\"4\">\r\n                                                        关闭其他标签页\r\n                                                    </Menu.Item>\r\n                                                    <Menu.Item key=\"5\">\r\n                                                        关闭左侧标签页\r\n                                                    </Menu.Item>\r\n                                                    <Menu.Item key=\"6\">\r\n                                                        关闭右侧标签页\r\n                                                    </Menu.Item>\r\n                                                </Menu>\r\n                                            }\r\n                                            trigger={[\"contextMenu\"]}\r\n                                        >\r\n                                            <span> {pane.title}</span>\r\n                                        </Dropdown>\r\n                                    }\r\n                                    key={pane.path}\r\n                                >\r\n                                    {/* <Component\r\n                    refresh={this.state.refreshTab == pane.path}\r\n                    finishReload={this.props.finishReload}\r\n                  ></Component> */}\r\n                                    <TabComponnet\r\n                                        component={Component}\r\n                                        tabReloading={\r\n                                            this.props.tabReloading &&\r\n                                            pane.path == this.reloadTab\r\n                                        }\r\n                                        finishReload={this.props.finishReload}\r\n                                    ></TabComponnet>\r\n                                </TabPane>\r\n                            );\r\n                        })}\r\n                    </Tabs>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    // console.log(state.RouterModel);\r\n    let { path: currentPath, tabs, routes, tabReloading } = state.RouterModel;\r\n    return {\r\n        currentPath,\r\n        tabs,\r\n        routes,\r\n        tabReloading,\r\n    };\r\n};\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n        popTab: (tab) => {\r\n            dispatch({\r\n                type: \"POP_TAB\",\r\n                payload: tab,\r\n            });\r\n        },\r\n        reloadTab: (tab) => {\r\n            dispatch({\r\n                type: \"RElOAD_TAB\",\r\n            });\r\n        },\r\n        finishReload: (tab) => {\r\n            dispatch({\r\n                type: \"FINISH_RElOAD\",\r\n            });\r\n        },\r\n        changeTab: (tab) => {\r\n            dispatch({\r\n                type: \"CHANGE_TAB\",\r\n                payload: tab,\r\n            });\r\n        },\r\n        popOtherTab: (tab) => {\r\n            dispatch({\r\n                type: \"POP_OTHER_TAB\",\r\n                payload: tab,\r\n            });\r\n        },\r\n        popLeftTab: (tab) => {\r\n            dispatch({\r\n                type: \"POP_LEFT_TAB\",\r\n                payload: tab,\r\n            });\r\n        },\r\n        popRightTab: (tab) => {\r\n            dispatch({\r\n                type: \"POP_RIGHT_TAB\",\r\n                payload: tab,\r\n            });\r\n        },\r\n    };\r\n};\r\n// export default connect(mapStateToProps, mapDispatchToProps)(TabsLayout);\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(withRouter(TabsLayout));\r\n// export default TabsLayout;\r\n"]},"metadata":{},"sourceType":"module"}